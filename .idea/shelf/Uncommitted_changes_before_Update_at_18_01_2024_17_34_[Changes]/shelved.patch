Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import datetime\r\nimport os\r\nimport random\r\nimport sys\r\n\r\nimport pygame\r\nimport sqlite3\r\n\r\n\r\ndef load_image(name, colorkey=None):  # Загрузка картинки из data\r\n    fullname = os.path.join('data', name)\r\n    # если файл не существует, то выходим\r\n    if not os.path.isfile(fullname):\r\n        print(f\"Файл с изображением '{fullname}' не найден\")\r\n        sys.exit()\r\n    image = pygame.image.load(fullname)\r\n    if colorkey is not None:\r\n        if colorkey == -1:\r\n            colorkey = image.get_at((0, 0))\r\n        image.set_colorkey(colorkey)\r\n    return image\r\n\r\n\r\ndef newDialog():  # Обновление диалога\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    font = pygame.font.Font(font_path, 20)\r\n    render_fraze_1 = font.render('', False, (255, 255, 255))\r\n    render_fraze_2 = font.render('', False, (255, 255, 255))\r\n    render_fraze_3 = font.render('', False, (255, 255, 255))\r\n    return render_fraze_1, render_fraze_2, render_fraze_3\r\n\r\n\r\ndef mathGame(m):  # Комната с магом математики\r\n    global background, all_sprites, player_group, player, door, \\\r\n        door_group, rectangle_group, loc5, loc11, loc14, x, y\r\n    if player.loc == 10:\r\n        fon = pygame.transform.scale(load_image(m), (800, 505))\r\n    else:\r\n        fon = pygame.transform.scale(load_image(m), (800, 505))\r\n    screen.blit(fon, (0, 0))\r\n\r\n    a = random.randint(0, 100)\r\n    difference = random.randint(0, 9)\r\n    b = difference - a\r\n    if m == 'maps/a1_m4.png':\r\n        fraze_1 = 'Я великий маг этого подземелья,'\r\n        fraze_2 = 'и я никому не дам ходить по нему'\r\n        fraze_3 = 'без моего разрешения!'\r\n    elif m == 'maps/a2_m5.png':\r\n        fraze_1 = 'Вот мы снова встретились,'\r\n        fraze_2 = 'и в этот раз ты в моем лесу'\r\n        fraze_3 = 'дальше я тебя не пропущу!'\r\n    else:\r\n        fraze_1 = 'Вот мы снова встретились,'\r\n        fraze_2 = 'и в этот раз ты далеко прошел'\r\n        fraze_3 = 'дальше я тебя не уйдешь!'\r\n\r\n    if player.loc <= 5:\r\n        screen.fill((2, 0, 0))\r\n    elif 5 < player.loc <= 12:\r\n        screen.fill((34, 177, 76))\r\n    else:\r\n        screen.fill((153, 217, 234))\r\n    screen.blit(fon, (0, 0))\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    font = pygame.font.Font(font_path, 20)\r\n    render_fraze_1, render_fraze_2, render_fraze_3 = newDialog()\r\n\r\n    win = False\r\n    i = 1\r\n    k = 0\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif event.type == pygame.KEYDOWN:\r\n                if ((event.key == pygame.K_z or event.key == pygame.K_RETURN)\r\n                        and k == 0):\r\n                    if player.loc <= 5:\r\n                        screen.fill((2, 0, 0))\r\n                    elif 5 < player.loc <= 12:\r\n                        screen.fill((34, 177, 76))\r\n                    else:\r\n                        screen.fill((153, 217, 234))\r\n                    screen.blit(fon, (0, 0))\r\n                    if b < 0:\r\n                        question = f\"{a}{b}\"\r\n                    else:\r\n                        question = f\"{a} + {b}\"\r\n                    fraze_1 = 'Но ты можешь попытать удачу,'\r\n                    fraze_2 = 'и решить мою задачу'\r\n                    fraze_3 = 'сколько будет: ' + question\r\n                    render_fraze_1, render_fraze_2, render_fraze_3 = (\r\n                        newDialog())\r\n                    i = 1\r\n                    k = 1\r\n                elif 48 <= event.key <= 58 and k == 1:\r\n                    fraze_1 = event.key - 48\r\n                    render_fraze_1, render_fraze_2, render_fraze_3 = (\r\n                        newDialog())\r\n                    if fraze_1 == difference:\r\n                        if player.loc <= 5:\r\n                            screen.fill((2, 0, 0))\r\n                        elif 5 < player.loc <= 12:\r\n                            screen.fill((34, 177, 76))\r\n                        else:\r\n                            screen.fill((153, 217, 234))\r\n                        screen.blit(fon, (0, 0))\r\n                        if m == 'maps/a1_m4.png':\r\n                            fraze_1 = 'Я вижу, что ты неплох в математике'\r\n                            fraze_2 = 'на этот раз я тебя пропускаю,'\r\n                            fraze_3 = 'но мы еще встретимся!'\r\n                        elif m == 'maps/a2_m5.png':\r\n                            fraze_1 = 'Я вижу, что ты до сих пор неплох в \\\r\n                                       математике'\r\n                            fraze_2 = 'в этот раз я тебя пропускаю,'\r\n                            fraze_3 = 'но еще одна наша встреча неизбежна!'\r\n                        else:\r\n                            fraze_1 = 'Я вижу, что ты также силен в математике'\r\n                            fraze_2 = 'на этот раз покажи себя в равном бою,'\r\n                            fraze_3 = 'с истинным магом!'\r\n                        win = True\r\n                    else:\r\n                        if player.loc <= 5:\r\n                            screen.fill((2, 0, 0))\r\n                        elif 5 < player.loc <= 12:\r\n                            screen.fill((34, 177, 76))\r\n                        else:\r\n                            screen.fill((153, 217, 234))\r\n                        screen.blit(fon, (0, 0))\r\n                        fraze_1 = 'Я вижу, что ты слаб,'\r\n                        fraze_2 = 'возвращайся,'\r\n                        fraze_3 = 'лишь когда будешь достоин'\r\n                    i = 1\r\n                    k = 2\r\n                elif ((event.key == pygame.K_z or event.key == pygame.K_RETURN)\r\n                      and k == 2):\r\n                    if win:\r\n                        if m == 'maps/a1_m4.png':\r\n                            all_sprites = pygame.sprite.Group()\r\n                            player_group = pygame.sprite.Group()\r\n                            rectangle_group = pygame.sprite.Group()\r\n                            background = Background('maps/a1_m5.png',\r\n                                                    (839, 1300))\r\n                            all_sprites.add(background)\r\n                            sign1.rect.y = 1000\r\n                            sign2.rect.y = 1000\r\n                            sign3.rect.y = 700\r\n                            sign4.rect.y = 700\r\n                            sign5.rect.y = 400\r\n                            sign6.rect.y = 400\r\n                            all_sprites.add(sign1, sign2, sign3, sign4, sign5,\r\n                                            sign6)\r\n                            sign_group.add(sign1, sign2, sign3, sign4, sign5,\r\n                                           sign6)\r\n                            player = Player(419, 1100, 1)\r\n                            door = Door(362, 30, 1, 2)\r\n                            player.loc = 3\r\n                            loc5 = 0\r\n                        elif m == 'maps/a2_m5.png':\r\n                            all_sprites = pygame.sprite.Group()\r\n                            player_group = pygame.sprite.Group()\r\n                            rectangle_group = pygame.sprite.Group()\r\n                            background = Background('maps/a2_m6.png',\r\n                                                    (1667, 1000))\r\n                            all_sprites.add(background)\r\n                            player = Player(850, 506, 2)\r\n                            player.loc = 11\r\n                            door.rect.x = 20000\r\n                            door2.rect.x = 20000\r\n                            door3.rect.x = 20000\r\n                            x = player.x\r\n                            y = player.y\r\n                            loc11 = 0\r\n                            pygame.mixer.music.load(\r\n                                \"data/music/act2_boss.ogg\")\r\n                            pygame.mixer.music.set_volume(0.3)\r\n                            pygame.mixer.music.play(loops=-1)\r\n                        else:\r\n                            all_sprites = pygame.sprite.Group()\r\n                            player_group = pygame.sprite.Group()\r\n                            rectangle_group = pygame.sprite.Group()\r\n                            background = Background('maps/a3_m3.jpg',\r\n                                                    (2210, 1300))\r\n                            all_sprites.add(background)\r\n                            player = Player(1105, 650, 3)\r\n                            player.loc = 15\r\n                            door.rect.x = 20000\r\n                            x = player.x\r\n                            y = player.y\r\n                            loc14 = 0\r\n                            pygame.mixer.music.load(\"data/music/act3_boss.ogg\")\r\n                            pygame.mixer.music.set_volume(0.3)\r\n                            pygame.mixer.music.play(loops=-1)\r\n                        camera.update(player)\r\n                        for sprite in all_sprites:\r\n                            camera.apply(sprite)\r\n                        return\r\n                    else:\r\n                        if m == 'maps/a1_m4.png':\r\n                            end_screen(1, False)\r\n                        elif m == 'maps/a2_m5.png':\r\n                            end_screen(2, False)\r\n                        else:\r\n                            end_screen(3, False)\r\n                        return\r\n\r\n        if i <= len(fraze_1):\r\n            render_fraze_1 = font.render(fraze_1[:i], False, (255, 255, 255))\r\n        elif i <= len(fraze_1) + len(fraze_2):\r\n            render_fraze_2 = font.render(fraze_2[:i - len(fraze_1)], False,\r\n                                         (255, 255, 255))\r\n        elif i <= len(fraze_1) + len(fraze_2) + len(fraze_3):\r\n            render_fraze_3 = font.render(\r\n                fraze_3[:i - len(fraze_1) - len(fraze_2)], False,\r\n                (255, 255, 255))\r\n        i += 1\r\n        if m == 'maps/a1_m4.png':\r\n            screen.blit(render_fraze_1, (230, 85))\r\n            screen.blit(render_fraze_2, (230, 115))\r\n            screen.blit(render_fraze_3, (230, 145))\r\n        elif m == 'maps/a2_m5.png':\r\n            screen.blit(render_fraze_1, (250, 33))\r\n            screen.blit(render_fraze_2, (250, 51))\r\n            screen.blit(render_fraze_3, (250, 69))\r\n        else:\r\n            screen.blit(render_fraze_1, (230, 85))\r\n            screen.blit(render_fraze_2, (230, 115))\r\n            screen.blit(render_fraze_3, (230, 145))\r\n        player_group.draw(screen)\r\n        pygame.display.flip()\r\n        clock.tick(20)\r\n        clock.tick(FPS)\r\n\r\n\r\ndef terminate():\r\n    pygame.quit()\r\n    sys.exit()\r\n\r\n\r\ndef start_screen():  # Начальное окно\r\n    fon = pygame.transform.scale(load_image('camera-player/fon.jpg'),\r\n                                 (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(0.7)\r\n    fon = pygame.transform.scale(load_image('camera-player/blackfon.png'),\r\n                                 (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif (event.type == pygame.KEYDOWN or event.type ==\r\n                  pygame.MOUSEBUTTONDOWN):\r\n                if True:\r\n                    act1()\r\n                    return\r\n        clock.tick(FPS)\r\n\r\n\r\ndef end_screen(n, winOrdie):  # Окно при прохождении акта, либо при проигрыше\r\n    fon = pygame.transform.scale(load_image('camera-player/gameover.jpg'),\r\n                                 (800, 500))\r\n    fon = pygame.transform.scale(fon, (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    font = pygame.font.Font(font_path, 35)\r\n    tm = (datetime.datetime.now() - time).total_seconds()\r\n    t2 = font.render(f\"{int(tm // 60)} min {int(tm - (tm // 60) * 60)} sec\",\r\n                     False, (0, 0, 0))\r\n\r\n    if winOrdie:\r\n        t = font.render(f\"Win\", False, (0, 0, 0))\r\n        font = pygame.font.Font(font_path, 50)\r\n        t0 = font.render(f\"{n} Act\", False, (0, 0, 0))\r\n\r\n        con = sqlite3.connect(\"data/bd.sqlite\")\r\n        cur = con.cursor()\r\n        cur.execute(\r\n            f\"INSERT INTO player(act, time) VALUES({n - 1}, '{int(tm // 60)} \"\r\n            f\"min {int(tm - (tm // 60) * 60)} sec')\")\r\n        con.commit()\r\n        con.close()\r\n    else:\r\n        t = font.render(f\"Lose\", False, (0, 0, 0))\r\n        font = pygame.font.Font(font_path, 50)\r\n        t0 = font.render(f\"{n} Act\", False, (0, 0, 0))\r\n\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif (event.type == pygame.KEYDOWN or event.type ==\r\n                  pygame.MOUSEBUTTONDOWN):\r\n                if True:\r\n                    if n == 1:\r\n                        act1()\r\n                    elif n == 2:\r\n                        act2()\r\n                    elif n == 3:\r\n                        act3()\r\n                    else:\r\n                        credits_screen()\r\n                        results()\r\n                        act1()\r\n                    return\r\n\r\n        screen.blit(t0, (300, 100))\r\n        screen.blit(t, (300, 200))\r\n        screen.blit(t2, (300, 300))\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n\r\n\r\ndef act1():  # Создание 1 акта\r\n    global all_sprites, player_group, player, background, door, door_group, \\\r\n        i, word_group, x, y, loc5, time, runi\r\n    time = datetime.datetime.now()\r\n    fon = pygame.transform.scale(load_image('camera-player/act1.png'),\r\n                                 (800, 500))\r\n    pygame.mixer.music.load(\"data/music/start_sound.ogg\")\r\n    pygame.mixer.music.set_volume(0.3)\r\n    pygame.mixer.music.play(loops=-1)\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n    all_sprites = pygame.sprite.Group()\r\n    player_group = pygame.sprite.Group()\r\n    door_group = pygame.sprite.Group()\r\n    background = Background('maps/a1_m1.png', (1360, 760))\r\n    door = Door(1180, 440, 1, 1)\r\n    all_sprites.add(background)\r\n    door_group.add(door)\r\n    pygame.mixer.music.load(\"data/music/act1_main.ogg\")\r\n    pygame.mixer.music.set_volume(0.3)\r\n    pygame.mixer.music.play(loops=-1)\r\n    player = Player(290, 470, 1)\r\n    word_group = pygame.sprite.Group()\r\n    x, y = 0, 0\r\n    loc5 = 0\r\n    i = 0\r\n    runi = -600\r\n    camera.update(player)\r\n    for sprite in all_sprites:\r\n        camera.apply(sprite)\r\n\r\n    screen.blit(\r\n        pygame.transform.scale(load_image(\"camera-player/run.png\"), (40, 40)),\r\n        (5, 5))\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    txt = pygame.font.Font(font_path, 35).render(f\"active\", True,\r\n                                                 (255, 0, 0))\r\n    screen.blit(txt, (50, 0))\r\n    all_sprites.draw(screen)\r\n\r\n\r\ndef act2():  # Создание 2 акта\r\n    global all_sprites, player_group, player, background, door, \\\r\n        door_group, time, x, y, door2, door3, pas, loc11, img, runi\r\n    time = datetime.datetime.now()\r\n    fon = pygame.transform.scale(load_image('camera-player/act2.png'),\r\n                                 (800, 500))\r\n    pygame.mixer.music.load(\"data/music/start_sound.ogg\")\r\n    pygame.mixer.music.set_volume(0.3)\r\n    pygame.mixer.music.play(loops=-1)\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n    all_sprites = pygame.sprite.Group()\r\n    player_group = pygame.sprite.Group()\r\n    door_group = pygame.sprite.Group()\r\n    background = Background('maps/a2_m1.png', (2060, 1500))\r\n    door = Door(350, 840, 2, 1)\r\n    door2 = Door(1528, 540, 2, 1)\r\n    door3 = Door(350, 540, 2, 1)\r\n    all_sprites.add(background)\r\n    door_group.add(door, door2, door3)\r\n    pas = Pass(850, 700)\r\n    img = load_image('objects/key.jpg')\r\n    img = pygame.transform.scale(img, (50, 50))\r\n    pygame.mixer.music.load(\"data/music/act2_main.mp3\")\r\n    pygame.mixer.music.set_volume(0.3)\r\n    pygame.mixer.music.play(loops=-1)\r\n    x, y = 0, 0\r\n    loc11 = 0\r\n    runi = -600\r\n    player = Player(730, 730, 2)\r\n    player.loc = 6\r\n    camera.update(player)\r\n    for sprite in all_sprites:\r\n        camera.apply(sprite)\r\n\r\n    screen.blit(\r\n        pygame.transform.scale(load_image(\"camera-player/run.png\"), (40, 40)),\r\n        (5, 5))\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    txt = pygame.font.Font(font_path, 35).render(f\"active\", True,\r\n                                                 (255, 0, 0))\r\n    screen.blit(txt, (50, 0))\r\n    all_sprites.draw(screen)\r\n    door_group.draw(screen)\r\n\r\n\r\ndef act3():  # Создание 3 акта\r\n    global all_sprites, player_group, player, background, door, door_group, \\\r\n        i, x, y, time, defen, traveler, apples, runi\r\n    fon = pygame.transform.scale(load_image('camera-player/act3.png'),\r\n                                 (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.mixer.music.load(\"data/music/start_sound.ogg\")\r\n    pygame.mixer.music.set_volume(0.3)\r\n    pygame.mixer.music.play(loops=-1)\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n    all_sprites = pygame.sprite.Group()\r\n    player_group = pygame.sprite.Group()\r\n    door_group = pygame.sprite.Group()\r\n    background = Background('maps/a3_m1.png', (4000, 2480))\r\n    all_sprites.add(background)\r\n    pygame.mixer.music.load(\"data/music/act3_main.ogg\")\r\n    pygame.mixer.music.set_volume(0.3)\r\n    pygame.mixer.music.play(loops=-1)\r\n    door = Door(550, 1720, 3, 3)\r\n    door_group.add(door)\r\n    player = Player(530, 200, 3)\r\n    traveler = Traveler(3400, 1320)\r\n    player.loc = 13\r\n    runi = -600\r\n    defen = Defense(770, 1200)\r\n    apples = [\r\n        Apple(1800, 2090),\r\n        Apple(1810, 2110),\r\n        Apple(2100, 2260),\r\n        Apple(3600, 540),\r\n        Apple(3570, 450)\r\n    ]\r\n    apple_trees = [\r\n        AppleTree(1828, 1930),\r\n        AppleTree(2100, 2100),\r\n        AppleTree(3670, 360)\r\n    ]\r\n\r\n    camera.update(player)\r\n    for sprite in all_sprites:\r\n        camera.apply(sprite)\r\n\r\n    screen.blit(\r\n        pygame.transform.scale(load_image(\"camera-player/run.png\"), (40, 40)),\r\n        (5, 5))\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    txt = pygame.font.Font(font_path, 35).render(f\"active\", True,\r\n                                                 (255, 0, 0))\r\n    screen.blit(txt, (50, 0))\r\n    all_sprites.draw(screen)\r\n\r\n\r\nt1 = None\r\nt2 = None\r\nt3 = None\r\nt4 = None\r\nt5 = None\r\n\r\n\r\ndef other_color(cl1, cl2, cl3, cl4, cl5):  # Смена цвета кнопки в меню\r\n    global t1, t2, t3, t4, t5\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    font = pygame.font.Font(font_path, 40)\r\n    t1 = font.render(f\"1 Act\",\r\n                     False, cl1)\r\n    t2 = font.render(f\"2 Act\",\r\n                     False, cl2)\r\n    t3 = font.render(f\"3 Act\",\r\n                     False, cl3)\r\n    t4 = font.render(f\"Tab result\",\r\n                     False, cl4)\r\n    t5 = font.render(f\"Cancel\",\r\n                     False, cl5)\r\n\r\n\r\ndef menu():  # Меню\r\n    con = sqlite3.connect(\"data/bd.sqlite\")\r\n    cur = con.cursor()\r\n    result1 = cur.execute(\"\"\"SELECT id FROM player\r\n            WHERE act == 1\"\"\").fetchall()\r\n    result2 = cur.execute(\"\"\"SELECT id FROM player\r\n            WHERE act == 2\"\"\").fetchall()\r\n    con.close()\r\n    COLOR1 = (64, 64, 64)\r\n    COLOR2 = (255, 0, 0)\r\n    COLOR3 = (0, 0, 0)\r\n\r\n    other_color(COLOR1, COLOR1, COLOR1, COLOR1, COLOR2)\r\n    colT = 5\r\n    pygame.mixer.music.pause()\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_w or event.key == pygame.K_UP:\r\n                    colT -= 1\r\n                    if colT == 0:\r\n                        colT = 5\r\n                        other_color(COLOR1, COLOR1, COLOR1, COLOR1,\r\n                                    COLOR2)\r\n                    if colT == 1:\r\n                        other_color(COLOR2, COLOR1, COLOR1,\r\n                                    COLOR1, COLOR1)\r\n                    if colT == 2:\r\n                        if result1:\r\n                            other_color(COLOR1, COLOR2, COLOR1,\r\n                                        COLOR1, COLOR1)\r\n                        else:\r\n                            other_color(COLOR1, COLOR3, COLOR1,\r\n                                        COLOR1, COLOR1)\r\n                    if colT == 3:\r\n                        if result2:\r\n                            other_color(COLOR1, COLOR1, COLOR2,\r\n                                        COLOR1, COLOR1)\r\n                        else:\r\n                            other_color(COLOR1, COLOR1, COLOR3,\r\n                                        COLOR1, COLOR1)\r\n                    if colT == 4:\r\n                        other_color(COLOR1, COLOR1, COLOR1,\r\n                                    COLOR2, COLOR1)\r\n\r\n                if event.key == pygame.K_s or event.key == pygame.K_DOWN:\r\n                    colT += 1\r\n                    if colT == 6:\r\n                        colT = 1\r\n                        other_color(COLOR2, COLOR1, COLOR1,\r\n                                    COLOR1, COLOR1)\r\n                    if colT == 5:\r\n                        other_color(COLOR1, COLOR1, COLOR1, COLOR1,\r\n                                    COLOR2)\r\n                    if colT == 2:\r\n                        if result1:\r\n                            other_color(COLOR1, COLOR2, COLOR1,\r\n                                        COLOR1, COLOR1)\r\n                        else:\r\n                            other_color(COLOR1, COLOR3, COLOR1,\r\n                                        COLOR1, COLOR1)\r\n                    if colT == 3:\r\n                        if result2:\r\n                            other_color(COLOR1, COLOR1, COLOR2,\r\n                                        COLOR1, COLOR1)\r\n                        else:\r\n                            other_color(COLOR1, COLOR1, COLOR3,\r\n                                        COLOR1, COLOR1)\r\n                    if colT == 4:\r\n                        other_color(COLOR1, COLOR1, COLOR1,\r\n                                    COLOR2, COLOR1)\r\n\r\n                if (event.key == pygame.K_SPACE or event.key == pygame.K_p or\r\n                        event.key == pygame.K_RETURN):\r\n                    if colT == 1:\r\n                        act1()\r\n                    if colT == 2:\r\n                        # if result1:\r\n                        act2()\r\n                    if colT == 3:\r\n                        # if result2:\r\n                        act3()\r\n                    if colT == 4:\r\n                        results()\r\n                    pygame.mixer.music.play(loops=-1)\r\n                    return\r\n\r\n        screen.blit(t1, (300, 50))\r\n        screen.blit(t2, (300, 130))\r\n        screen.blit(t3, (300, 210))\r\n        screen.blit(t4, (300, 290))\r\n        screen.blit(t5, (300, 370))\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n\r\n\r\nclass Player(pygame.sprite.Sprite):  # Игрок\r\n    image = load_image('players_image/m.c.front_stop.png')\r\n    image = pygame.transform.scale(image, (40, 60))\r\n\r\n    def __init__(self, pos_x, pos_y, stena, key=False, pas=False):\r\n        super().__init__(player_group, all_sprites)\r\n        self.image = Player.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n        self.x = pos_x + 20\r\n        self.y = pos_y + 60\r\n        self.step = 1\r\n        self.back = False\r\n        self.last_skin_change_time = 0\r\n        self.direction = ''\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n        self.loc = 0\r\n        self.key = key\r\n        self.pas = pas\r\n        self.run = 5\r\n        self.vis = True\r\n        self.apples = 0\r\n        if stena == 1:\r\n            self.stena = [(2, 0, 0)]\r\n        elif stena == 2:\r\n            self.stena = [(34, 177, 76), (0, 162, 232), (54, 19, 11),\r\n                          (0, 8, 4), (4, 28, 16), (15, 69, 10), (18, 89, 22)]\r\n        elif stena == 3:\r\n            self.stena = [(153, 217, 234), (185, 122, 87), (0, 162, 232),\r\n                          (187, 122, 87), (0, 187, 255), (55, 71, 79),\r\n                          (38, 52, 58), (71, 92, 102)]\r\n\r\n    def stop(self):  # Анимация игрока при остановке\r\n        image = self.image\r\n        if self.vis:\r\n            if self.direction == 'left':\r\n                image = load_image('players_image/m.c.left_stop.png')\r\n            elif self.direction == 'right':\r\n                image = load_image('players_image/m.c.right_stop.png')\r\n            elif self.direction == 'down':\r\n                image = load_image('players_image/m.c.front_stop.png')\r\n            elif self.direction == 'up':\r\n                image = load_image('players_image/m.c.back_stop.png')\r\n        else:\r\n            if self.direction == 'left':\r\n                image = load_image('players_image/m.c.left_stop_trans.png')\r\n            elif self.direction == 'right':\r\n                image = load_image('players_image/m.c.right_stop_trans.png')\r\n            elif self.direction == 'down':\r\n                image = load_image('players_image/m.c.front_stop_trans.png')\r\n            elif self.direction == 'up':\r\n                image = load_image('players_image/m.c.back_stop_trans.png')\r\n        self.image = pygame.transform.scale(image, (40, 60))\r\n\r\n    def update(self, move_up, move_down, move_left, move_right, passaa=None):\r\n        global all_sprites, background, player, player_group, door_group, \\\r\n            door, word_group, x, y, task_text, ok_tip, door2, door3, \\\r\n            chest, img, pas, rectangle_group, loc5, loc11, text1, text2, \\\r\n            text3, text4, defense_group\r\n        image = self.image\r\n        current_time = pygame.time.get_ticks()\r\n\r\n        if move_left:  # Анимация игрока, когда он идет налево\r\n            self.direction = 'left'\r\n            self.rect.x -= self.run\r\n            self.x -= self.run\r\n            if background.get_rgb(self.x, self.y) in self.stena:\r\n                self.rect.x += self.run\r\n                self.x += self.run\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n            if self.vis:\r\n                image = load_image(\r\n                    f'players_image/m.c.left_walk_{self.step}.png')\r\n            else:\r\n                image = load_image(\r\n                    f'players_image/m.c.left_walk_{self.step}_trans.png')\r\n        if move_right:  # Анимация игрока, когда он идет направо\r\n            self.direction = 'right'\r\n            self.rect.x += self.run\r\n            self.x += self.run\r\n            if background.get_rgb(self.x, self.y) in self.stena:\r\n                self.rect.x -= self.run\r\n                self.x -= self.run\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n            if self.vis:\r\n                image = load_image(\r\n                    f'players_image/m.c.right_walk_{self.step}.png')\r\n            else:\r\n                image = load_image(\r\n                    f'players_image/m.c.right_walk_{self.step}_trans.png')\r\n        if move_up:  # Анимация игрока, когда он идет вверх\r\n            self.direction = 'up'\r\n            self.rect.y -= self.run\r\n            self.y -= self.run\r\n            if background.get_rgb(self.x, self.y) in self.stena:\r\n                self.rect.y += self.run\r\n                self.y += self.run\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n            if self.vis:\r\n                image = load_image(\r\n                    f'players_image/m.c.back_walk_{self.step}.png')\r\n            else:\r\n                image = load_image(\r\n                    f'players_image/m.c.back_walk_{self.step}_trans.png')\r\n        if move_down:  # Анимация игрока, когда он идет вниз\r\n            self.direction = 'down'\r\n            self.rect.y += self.run\r\n            self.y += self.run\r\n            if background.get_rgb(self.x, self.y) in self.stena:\r\n                self.rect.y -= self.run\r\n                self.y -= self.run\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n            if self.vis:\r\n                image = load_image(\r\n                    f'players_image/m.c.front_walk_{self.step}.png')\r\n            else:\r\n                image = load_image(\r\n                    f'players_image/m.c.front_walk_{self.step}_trans.png')\r\n        self.image = pygame.transform.scale(image, (40, 60))\r\n        if pygame.sprite.collide_mask(self, door):  # Соприкосновение со дверью\r\n            if self.loc == 0:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('maps/a1_m2.png', (839, 1300))\r\n                all_sprites.add(background)\r\n                player = Player(419, 950, 1)\r\n                player.loc = 1\r\n                wizardRus.rect.x = 419\r\n                wizardRus.rect.y = 600\r\n                wizardRus.canRun = False\r\n                wizardRus.y = 600\r\n                all_sprites.add(wizardRus)\r\n                door = Door(363, 48, 1, 2)\r\n            elif self.loc == 1:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                word_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('maps/a1_m3.png', (2100, 500))\r\n                all_sprites.add(background)\r\n                door = Door(1800, 200, 1, 1)\r\n                player = Player(200, 330, 1)\r\n                player.loc = 2\r\n            elif self.loc == 2:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                background = Background('maps/a1_m4.png', (700, 500))\r\n                all_sprites.add(background)\r\n                player = Player(385, 300, 1)\r\n                player.loc = 3\r\n                mathGame('maps/a1_m4.png')\r\n            elif self.loc == 3:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                rectangle_group = pygame.sprite.Group()\r\n                background = Background('maps/a1_m6.png', (900, 784))\r\n                all_sprites.add(background)\r\n                pygame.mixer.music.load(\"data/music/act1_boss.ogg\")\r\n                pygame.mixer.music.set_volume(0.3)\r\n                pygame.mixer.music.play(loops=-1)\r\n                player = Player(450, 300, 1)\r\n                player.loc = 4\r\n                x = player.x\r\n                y = player.y\r\n\r\n                loc5 = 0\r\n                door = Door(20000, 20000, 1, 1)\r\n            elif self.loc == 5:\r\n                door.rect.x = 20000\r\n                self.loc = 6\r\n                end_screen(2, True)\r\n            elif self.loc == 6 or self.loc == 9:\r\n                button_question = ['Сердце', \"Почки\", \"Мозг\", \"Лёгкие\"]\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                word_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('maps/a2_m2.png', (2380, 1500))\r\n                all_sprites.add(background)\r\n                door = Door(1670, 750, 2, 1)\r\n                for j in range(1, 5):\r\n                    button_group.add(Button(775 + j * 150, 800, j))\r\n                player = Player(1600, 750, 2, key=player.key, pas=player.pas)\r\n                font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n                font = pygame.font.Font(font_path, 50)\r\n                ok_tip = random.randint(0, 3)\r\n                task_text = font.render(button_question[ok_tip], False,\r\n                                        (255, 255, 255))\r\n                x, y = 700, 640\r\n                player.loc = 7\r\n            elif self.loc == 7:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('maps/a2_m1.png', (2060, 1500))\r\n                door = Door(350, 840, 2, 1)\r\n                door2 = Door(1528, 540, 2, 1)\r\n                door3 = Door(350, 540, 2, 1)\r\n                all_sprites.add(background)\r\n                door_group.add(door, door2, door3)\r\n                pas = Pass(850, 700)\r\n                player = Player(480, 840, 2, key=player.key, pas=player.pas)\r\n                player.loc = 6\r\n            elif self.loc == 12:\r\n                door.rect.x = 20000\r\n                self.loc = 13\r\n                end_screen(3, True)\r\n            elif self.loc == 13:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                background = Background('maps/a3_m2.jpg', (750, 400))\r\n                all_sprites.add(background)\r\n                player = Player(385, 300, 1)\r\n                player.loc = 14\r\n                mathGame('maps/a3_m2.jpg')\r\n            elif self.loc == 16:\r\n                door.rect.x = 20000\r\n                self.loc = 17\r\n                end_screen(4, True)\r\n        for j in apples:\r\n            if pygame.sprite.collide_mask(self, j):\r\n                j.rect.x = 20000\r\n                player.apples += 1\r\n                img = load_image('objects/apple.jpg')\r\n                img = pygame.transform.scale(img, (30, 30))\r\n\r\n        if pygame.sprite.collide_mask(self, door3):\r\n            if self.loc == 6 or self.loc == 9:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                word_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('maps/a2_m3.png', (4000, 4000))\r\n                all_sprites.add(background)\r\n                chest = Chest(777, 742)\r\n                door3 = Door(3450, 810, 2, 1)\r\n                player = Player(3360, 800, 2, key=player.key, pas=player.pas)\r\n                x, y = 700, 640\r\n                player.loc = 8\r\n            elif self.loc == 8:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('maps/a2_m1.png', (2060, 1500))\r\n                door = Door(350, 840, 2, 1)\r\n                door2 = Door(1528, 540, 2, 1)\r\n                door3 = Door(350, 540, 2, 1)\r\n                all_sprites.add(background)\r\n                door_group.add(door, door2, door3)\r\n                pas = Pass(850, 700)\r\n                player = Player(480, 540, 2, key=player.key, pas=player.pas)\r\n                player.loc = 6\r\n        if pygame.sprite.collide_mask(self, chest) and self.loc != 9:\r\n            if player.key:\r\n                player.pas = True\r\n                img = load_image('objects/cash.jpg')\r\n                img = pygame.transform.scale(img, (50, 50))\r\n                chest.image = pygame.transform.scale(\r\n                    load_image('objects/chest_open.jpg'), (60, 40))\r\n        if player.apples == 6 and background.get_rgb(self.x + self.run,\r\n                                                     self.y + self.run) == \\\r\n                (0, 187, 255):\r\n            player.vis = False\r\n            try:\r\n                del self.stena[self.stena.index((187, 122, 87))]\r\n            except Exception:\r\n                pass\r\n\r\n        if pygame.sprite.collide_mask(self, pas) and self.loc != 9:\r\n            if player.pas:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('maps/m4.png', (2060, 1500))\r\n                pas = Pass(850, 600)\r\n                door = Door(350, 840, 2, 1)\r\n                door2 = Door(1528, 540, 2, 1)\r\n                door3 = Door(350, 540, 2, 1)\r\n                all_sprites.add(background)\r\n                door_group.add(door)\r\n                door_group.add(door2)\r\n                door_group.add(door3)\r\n                pas = Pass(840, 650)\r\n                player = Player(player.x, player.y, 2)\r\n                player.loc = 9\r\n        if pygame.sprite.collide_mask(self, door2):\r\n            all_sprites = pygame.sprite.Group()\r\n            player_group = pygame.sprite.Group()\r\n            background = Background('maps/a1_m4.png', (750, 400))\r\n            all_sprites.add(background)\r\n            player = Player(335, 325, 1)\r\n            player.loc = 10\r\n            mathGame('maps/a2_m5.png')\r\n        elif pygame.sprite.collide_mask(self, sign1):\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 20)\r\n            text1 = font.render(\r\n                'Беги, пока не поздно! Это Маг Физик! Он владеет', False,\r\n                (255, 255, 255))\r\n            text2 = font.render(\r\n                'силами природы и науки. Ни один закон физики не может', False,\r\n                (255, 255, 255))\r\n            text3 = font.render(\r\n                'ему противостоять. Ты на пути его научных исследований,',\r\n                False, (255, 255, 255))\r\n            text4 = font.render(\r\n                'и это будет последнее, что ты увидишь!',\r\n                False, (255, 255, 255))\r\n        elif pygame.sprite.collide_mask(self, sign2):\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 20)\r\n            text1 = font.render('Эти ворота скрывают ТЕБЯ от НЕГО!', False,\r\n                                (255, 255, 255))\r\n            text2 = font.render(\r\n                'Он никогда не проигрывал в научных битвах до этого.', False,\r\n                (255, 255, 255))\r\n            text3 = font.render(\r\n                'Он мог бы сбежать отсюда, но власть, которую он получил',\r\n                False, (255, 255, 255))\r\n            text4 = font.render('здесь очень манит его.', False,\r\n                                (255, 255, 255))\r\n        elif pygame.sprite.collide_mask(self, sign3):\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 20)\r\n            text1 = font.render(\r\n                'Он умеет изменять структуру времени. ', False,\r\n                (255, 255, 255))\r\n            text2 = font.render(\r\n                'Твое будущее уже записано, и оно в его руках.', False,\r\n                (255, 255, 255))\r\n            text3 = font.render(\r\n                'Никто не смог выйти из его лабиринта времени.',\r\n                False, (255, 255, 255))\r\n            text4 = font.render('', False,\r\n                                (255, 255, 255))\r\n        elif pygame.sprite.collide_mask(self, sign4):\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 20)\r\n            text1 = font.render(\r\n                'Когда он разгневан, его силы становятся неописуемыми.', False,\r\n                (255, 255, 255))\r\n            text2 = font.render(\r\n                'Попадись на его пути, и ты станешь частью его', False,\r\n                (255, 255, 255))\r\n            text3 = font.render(\r\n                'физического эксперимента!',\r\n                False, (255, 255, 255))\r\n            text4 = font.render('', False,\r\n                                (255, 255, 255))\r\n        elif pygame.sprite.collide_mask(self, sign5):\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 20)\r\n            text1 = font.render(\r\n                'Его ум остр, как лучи света. Ни одна тайна не может', False,\r\n                (255, 255, 255))\r\n            text2 = font.render(\r\n                'ускользнуть от его внимания.', False,\r\n                (255, 255, 255))\r\n            text3 = font.render(\r\n                'Твои мысли уже известны ему.',\r\n                False, (255, 255, 255))\r\n            text4 = font.render('', False,\r\n                                (255, 255, 255))\r\n        elif pygame.sprite.collide_mask(self, sign6):\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 20)\r\n            text1 = font.render(\r\n                'Он проник в самые глубины квантовой реальности.', False,\r\n                (255, 255, 255))\r\n            text2 = font.render(\r\n                'Вселенная - это его лаборатория.', False,\r\n                (255, 255, 255))\r\n            text3 = font.render(\r\n                'Попытайся не потеряться в его',\r\n                False, (255, 255, 255))\r\n            text4 = font.render('многомерных исследованиях.', False,\r\n                                (255, 255, 255))\r\n        elif self.loc == 3:\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 20)\r\n            text1 = font.render('', False, (255, 255, 255))\r\n            text2 = font.render('', False, (255, 255, 255))\r\n            text3 = font.render('', False, (255, 255, 255))\r\n            text4 = font.render('', False, (255, 255, 255))\r\n        for defen in defense_group:\r\n            if pygame.sprite.collide_mask(self, defen) and self.vis:\r\n                # Откидываем игрока назад при коллизии\r\n                if move_left:\r\n                    self.rect.x += self.run\r\n                    self.x += self.run\r\n                if move_right:\r\n                    self.rect.x -= self.run\r\n                    self.x -= self.run\r\n                if move_up:\r\n                    self.rect.y += self.run\r\n                    self.y += self.run\r\n                if move_down:\r\n                    self.rect.y -= self.run\r\n                    self.y -= self.run\r\n                font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n                font = pygame.font.Font(font_path, 40)\r\n                task_text = font.render(\"Дальше нельзя\", False, (0, 0, 0))\r\n                screen.blit(task_text, (300, 0))\r\n        for apple_tree in apple_trees_group:\r\n            if pygame.sprite.collide_mask(self, apple_tree):\r\n                # Откидываем игрока назад при коллизии\r\n                if move_left:\r\n                    self.rect.x += self.run\r\n                    self.x += self.run\r\n                if move_right:\r\n                    self.rect.x -= self.run\r\n                    self.x -= self.run\r\n                if move_up:\r\n                    self.rect.y += self.run\r\n                    self.y += self.run\r\n                if move_down:\r\n                    self.rect.y -= self.run\r\n                    self.y -= self.run\r\n\r\n        camera.update(player)\r\n        for sprite in all_sprites:\r\n            camera.apply(sprite)\r\n\r\n\r\nclass AppleTree(pygame.sprite.Sprite):  # Дерево\r\n    def __init__(self, x_pos, y_pos):\r\n        super().__init__(all_sprites, apple_trees_group)\r\n        image = load_image('objects/apple_tree.png')\r\n        image = pygame.transform.scale(image, (120, 200))\r\n        self.image = image\r\n        self.rect = self.image.get_rect().move(x_pos, y_pos)\r\n\r\n\r\nclass Sign(pygame.sprite.Sprite):  # Табличка\r\n    image = load_image('objects/sign.png')\r\n    image = pygame.transform.scale(image, (51, 54))\r\n\r\n    def __init__(self, x_pos, y_pos):\r\n        super().__init__(all_sprites, sign_group)\r\n        self.image = Sign.image\r\n        self.rect = self.image.get_rect().move(x_pos, y_pos)\r\n\r\n\r\nclass Letters(pygame.sprite.Sprite):  # Буквы для атаки\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        random_letters = random.choice(['objects/letter_a.png',\r\n                                        'objects/letter_b.png',\r\n                                        'objects/letter_v.png',\r\n                                        'objects/letter_g.png',\r\n                                        'objects/letter_d.png'])\r\n        image_path = load_image(random_letters)\r\n        self.image = pygame.transform.scale(image_path, (40, 60))\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n\r\n    def update(self):\r\n        self.rect.x -= 9\r\n        if pygame.sprite.collide_mask(self, player):\r\n            end_screen(1, False)\r\n            return\r\n\r\n\r\nclass Background(pygame.sprite.Sprite):  # Задний фон\r\n    def __init__(self, image_path, size):\r\n        super().__init__()\r\n        self.image = load_image(image_path)\r\n        self.image = pygame.transform.scale(self.image, size)\r\n        self.rect = self.image.get_rect()\r\n        self.mask = pygame.mask.from_threshold(self.image, (237, 28, 36),\r\n                                               (1, 1, 1, 255))\r\n\r\n    def get_rgb(self, x, y):  # Возвращение цвета о пикселе фона\r\n        pixel = pygame.PixelArray(self.image)\r\n        return self.image.unmap_rgb(pixel[x][y])\r\n\r\n\r\nclass Door(pygame.sprite.Sprite):  # Дверь\r\n    def __init__(self, pos_x, pos_y, act, tip):\r\n        super().__init__(all_sprites)\r\n        if act == 1:\r\n            image_path = load_image(f'doors/door_act1_{tip}.png')\r\n        elif act == 2:\r\n            image_path = load_image('doors/door_act2.png')\r\n        if act == 3:\r\n            image_path = load_image('doors/door_act3.png')\r\n        if tip == 1:\r\n            self.image = pygame.transform.scale(image_path, (120, 96))\r\n        elif tip == 2:\r\n            self.image = pygame.transform.scale(image_path, (112, 67))\r\n        elif tip == 3:\r\n            self.image = pygame.transform.scale(image_path, (120, 120))\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y + 20)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n\r\n\r\nclass Rectangle(pygame.sprite.Sprite):  # Атакующие объекты из комнат боссов\r\n    def __init__(self, pos_x, pos_y, vx, vy, xx, yy, canDamage, image):\r\n        image_path = load_image(image)\r\n        image_path = pygame.transform.scale(image_path, (xx + 50, yy))\r\n        sprite_image = image_path\r\n        super().__init__(rectangle_group, all_sprites)\r\n        self.image = sprite_image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y + 20)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n        self.vx = vx\r\n        self.vy = vy\r\n        self.canDamage = canDamage\r\n\r\n    def update(self):  # Обновление движения\r\n        global rectangle_group, plat\r\n        self.rect.x += 2 * self.vx\r\n        self.rect.y += 2 * self.vy\r\n        if self.canDamage and not (pygame.sprite.collide_mask(player, plat)):\r\n            if pygame.sprite.collide_mask(self, player):\r\n                for j in rectangle_group:\r\n                    j.rect.x = 10000\r\n\r\n                rectangle_group = pygame.sprite.Group()\r\n                if player.loc == 4:\r\n                    end_screen(1, False)\r\n                elif player.loc == 11:\r\n                    end_screen(2, False)\r\n                elif player.loc == 15:\r\n                    end_screen(3, False)\r\n                return\r\n\r\n\r\nclass Button(pygame.sprite.Sprite):  # Кнопки выбора\r\n    def __init__(self, pos_x, pos_y, tip):\r\n        super().__init__(all_sprites)\r\n        if player.loc == 15:\r\n            image_path = load_image(f'buttons/button{tip}_{tip}.jpg')\r\n        else:\r\n            image_path = load_image(f'buttons/button{tip}.png')\r\n        self.image = pygame.transform.scale(image_path, (80, 80))\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y + 20)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n        self.tip = tip\r\n        self.tm = 300\r\n\r\n    def update(self):\r\n        if player.loc != 15:\r\n            if pygame.sprite.spritecollideany(self, player_group):\r\n                font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n                font = pygame.font.Font(font_path, 50)\r\n                screen.blit(\r\n                    font.render(str(self.tm // 100 + 1), False, (0, 0, 0)),\r\n                    (350, 0))\r\n                if self.tm // 100 + 1 == 0:\r\n                    if self.tip == ok_tip + 1:\r\n                        self.tm += 1\r\n                        player.key = True\r\n                    else:\r\n                        for j in button_group:\r\n                            j.rect.x = 20000\r\n                        end_screen(2, False)\r\n                self.tm -= 1\r\n            else:\r\n                self.tm = 300\r\n\r\n\r\nclass Pass(pygame.sprite.Sprite):  # Автомат у речки\r\n    image = load_image('objects/pass.png')\r\n    image = pygame.transform.scale(image, (79, 90))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = Pass.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n\r\n\r\nclass Chest(pygame.sprite.Sprite):  # Сундук\r\n    image = load_image('objects/chest.jpg')\r\n    image = pygame.transform.scale(image, (60, 40))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = Chest.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n\r\n\r\nclass Defense(pygame.sprite.Sprite):  # Защитник\r\n    image = load_image('npc/defens.jpg')\r\n    image = pygame.transform.scale(image, (283, 260))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites, defense_group)\r\n        self.image = Defense.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n\r\n\r\nclass Apple(pygame.sprite.Sprite):  # Яблоко\r\n    image = load_image('objects/apple.jpg')\r\n    image = pygame.transform.scale(image, (20, 20))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites, apple_group)\r\n        self.image = Apple.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n\r\n\r\nclass Traveler(pygame.sprite.Sprite):  # НПС, путник у реки\r\n    image = load_image('npc/traveler.jpg')\r\n    image = pygame.transform.scale(image, (70, 90))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = Traveler.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n\r\n\r\nclass Platform(pygame.sprite.Sprite):  # Платформа 3 акта босса\r\n    image = load_image('objects/platform.jpg')\r\n    image = pygame.transform.scale(image, (100, 90))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = Platform.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n\r\n\r\nclass WizardRus(pygame.sprite.Sprite):  # Маг 1 акта\r\n    image = load_image('npc/wizardRus.png')\r\n    image = pygame.transform.scale(image, (80, 90))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__()\r\n        self.image = WizardRus.image\r\n        self.rect = self.image.get_rect().move(\r\n            pos_x, pos_y)\r\n        self.canRun = False\r\n        self.y = pos_y\r\n\r\n    def update(self):\r\n        if self.canRun:\r\n            self.rect.y -= 15\r\n            self.y -= 15\r\n            if self.y <= -100:\r\n                self.rect.y = -1000\r\n        if player.y <= 800:\r\n            self.canRun = True\r\n\r\n\r\nwizardRus = WizardRus(2000, 2000)\r\n\r\n\r\ndef act3_buttons():  # Создание кнопок для выбора ответа\r\n    global task_text, difference, question, buttons, a, b, tm\r\n    a = random.randint(0, 100)\r\n    difference = random.randint(1, 4)\r\n    b = difference - a\r\n    if b < 0:\r\n        question = f\"{a}{b}\"\r\n    else:\r\n        question = f\"{a} + {b}\"\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    font = pygame.font.Font(font_path, 50)\r\n    task_text = font.render(question, False, (0, 0, 0))\r\n    buttons = []\r\n    for j in range(1, 5):\r\n        buttons.append(\r\n            Button(x - player.x + j * 150, y - player.y + 200, j))\r\n    tm = 300\r\n    screen.blit(font.render(str(tm // 100 + 1), False, (0, 0, 0)),\r\n                (350, 0))\r\n\r\n\r\ndef results():  # Таблица результатов\r\n    con = sqlite3.connect(\"data/bd.sqlite\")\r\n    cur = con.cursor()\r\n    result1 = cur.execute(\"\"\"SELECT time FROM player\r\n            WHERE act == 1 ORDER BY time\"\"\").fetchall()[:10]\r\n    result2 = cur.execute(\"\"\"SELECT time FROM player\r\n            WHERE act == 2 ORDER BY time\"\"\").fetchall()[:10]\r\n    result3 = cur.execute(\"\"\"SELECT time FROM player\r\n            WHERE act == 3 ORDER BY time\"\"\").fetchall()[:10]\r\n    con.close()\r\n\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif (event.type == pygame.KEYDOWN or event.type ==\r\n                  pygame.MOUSEBUTTONDOWN):\r\n                return\r\n        screen.blit(load_image(\"camera-player/sybtit.png\"), (0, 0))\r\n        font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n        font = pygame.font.Font(font_path, 20)\r\n        y = 0\r\n        for res in result1:\r\n            screen.blit(font.render(res[0], False, (255, 255, 255)),\r\n                        (150, 100 + y))\r\n            y += 40\r\n        y = 0\r\n        for res in result2:\r\n            screen.blit(font.render(res[0], False, (255, 255, 255)),\r\n                        (350, 100 + y))\r\n            y += 40\r\n        y = 0\r\n        for res in result3:\r\n            screen.blit(font.render(res[0], False, (255, 255, 255)),\r\n                        (550, 100 + y))\r\n            y += 40\r\n        font = pygame.font.Font(font_path, 50)\r\n        text_1 = font.render(\"1 Act\", False, (255, 255, 255))\r\n        text_2 = font.render(\"2 Act\", False, (255, 255, 255))\r\n        text_3 = font.render(\"3 Act\", False, (255, 255, 255))\r\n        screen.blit(text_1, (150, 0))\r\n        screen.blit(text_2, (350, 0))\r\n        screen.blit(text_3, (550, 0))\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n\r\n\r\ndef credits_screen():  # Субтитры\r\n    j = 0\r\n    sybtit = load_image('camera-player/sybtit.png')\r\n    pygame.mixer.music.load(\"data/music/final_melody.ogg\")\r\n    pygame.mixer.music.set_volume(0.3)\r\n    pygame.mixer.music.play(loops=-1)\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n\r\n        screen.blit(sybtit, (0, -j))\r\n        pygame.display.flip()\r\n\r\n        j += 2\r\n        if j >= 1750:\r\n            return\r\n\r\n        clock.tick(FPS)\r\n\r\n\r\nclass Camera:  # Камера, движение за игроком\r\n    def __init__(self):\r\n        self.dx = 0\r\n        self.dy = 0\r\n\r\n    def apply(self, obj):\r\n        obj.rect.x += self.dx\r\n        obj.rect.y += self.dy\r\n\r\n    def update(self, target):  # камера на объекте target\r\n        self.dx = -(target.rect.x + target.rect.w // 2 - width // 2)\r\n        self.dy = -(target.rect.y + target.rect.h // 2 - height // 2)\r\n\r\n\r\n# Создание объектов всей игры\r\nclock = pygame.time.Clock()\r\nFPS = 60\r\n# группы спрайтов\r\nall_sprites = pygame.sprite.Group()\r\nplayer_group = pygame.sprite.Group()\r\ndoor_group = pygame.sprite.Group()\r\nrectangle_group = pygame.sprite.Group()\r\nbutton_group = pygame.sprite.Group()\r\nword_group = pygame.sprite.Group()\r\nsign_group = pygame.sprite.Group()\r\ntext_group = pygame.sprite.Group()\r\ndefense_group = pygame.sprite.Group()\r\napple_trees_group = pygame.sprite.Group()\r\napple_group = pygame.sprite.Group()\r\n\r\ntime = datetime.datetime.now()\r\nx, y = 0, 0\r\nrect = Rectangle(20000, 20000, 0, 0, 10, 500, False, \"objects/redrect.jpg\")\r\nimg = load_image('objects/key.jpg')\r\nimg = pygame.transform.scale(img, (50, 50))\r\nsign1 = Sign(120, 20000)\r\nsign2 = Sign(658, 20000)\r\nsign3 = Sign(120, 20000)\r\nsign4 = Sign(658, 20000)\r\nsign5 = Sign(120, 20000)\r\nsign6 = Sign(658, 20000)\r\n\r\nloc5 = 0\r\nloc11 = 0\r\nloc14 = 0\r\n\r\nruni = -600\r\ncamera = Camera()\r\napples = []\r\ntm = 0\r\ndifference = 0\r\n\r\ndoor2 = Door(20000, 20000, 2, 1)\r\ndoor3 = Door(20000, 20000, 2, 1)\r\nchest = Chest(20000, 20000)\r\nplat = Platform(20000, 20000)\r\npas = Pass(20000, 20000)\r\ntraveler = Traveler(20000, 20000)\r\n\r\nif __name__ == '__main__':  # Запуск программы\r\n    pygame.init()\r\n    pygame.display.set_caption('Entangled Tale')\r\n    size = width, height = 800, 500\r\n    screen = pygame.display.set_mode(size)\r\n    start_screen()\r\n\r\n    text1 = pygame.font.Font(os.path.join(\"data/fonts\", \"comic.ttf\"),\r\n                             20).render('', False, (255, 255, 255))\r\n    text2 = pygame.font.Font(os.path.join(\"data/fonts\", \"comic.ttf\"),\r\n                             20).render('', False, (255, 255, 255))\r\n    text3 = pygame.font.Font(os.path.join(\"data/fonts\", \"comic.ttf\"),\r\n                             20).render('', False, (255, 255, 255))\r\n    text4 = pygame.font.Font(os.path.join(\"data/fonts\", \"comic.ttf\"),\r\n                             20).render('', False, (255, 255, 255))\r\n    i = 0\r\n    running = True\r\n    while running:  # Основной цикл\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                running = False\r\n            if event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_p:\r\n                    menu()\r\n                if event.key == pygame.K_e and runi == -600:\r\n                    runi = 300\r\n            if event.type == pygame.KEYUP:\r\n                player.stop()\r\n\r\n        if runi != -600:\r\n            player.run = 9\r\n        if runi < 0:\r\n            player.run = 5\r\n        if player.loc <= 5:\r\n            screen.fill((2, 0, 0))\r\n        elif 5 < player.loc <= 12:\r\n            screen.fill((34, 177, 76))\r\n        else:\r\n            screen.fill((153, 217, 234))\r\n        keys = pygame.key.get_pressed()\r\n\r\n        # Обновление игровых объектов\r\n        player.update(keys[pygame.K_UP], keys[pygame.K_DOWN],\r\n                      keys[pygame.K_LEFT], keys[pygame.K_RIGHT])\r\n        player.update(keys[pygame.K_w], keys[pygame.K_s],\r\n                      keys[pygame.K_a], keys[pygame.K_d])\r\n        # обновляем положение всех спрайтов\r\n        for sprite in all_sprites:\r\n            camera.apply(sprite)\r\n        camera.update(player)\r\n        wizardRus.update()\r\n        all_sprites.draw(screen)\r\n        if player.loc == 7:\r\n            screen.blit(task_text, (x - player.x + 780, y - player.y + 160))\r\n        if not player.key and pygame.sprite.collide_mask(player, chest):\r\n            # Взаимодействие с сундуком\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 40)\r\n            task_text = font.render(\"Нужен ключ!\", False, (255, 255, 255))\r\n            screen.blit(task_text, (300, 0))\r\n        if pygame.sprite.collide_mask(player,\r\n                                      traveler):  # Взаимодействие с нпс\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 25)\r\n            if player.apples not in [5, 6]:\r\n                task_text = font.render(\"Принеси мне 5 яблок, в обмен на инфор\"\r\n                                        \"мацию.\", False, (255, 255, 255))\r\n                task_text2 = font.render('Они находятся рядом с 3-мя яблонями',\r\n                                         False, (255, 255, 255))\r\n            else:\r\n                task_text = font.render(\r\n                    \"Выпей воды из речки, и ты станешь невидимым.\", False,\r\n                    (255, 255, 255))\r\n                task_text2 = font.render(\r\n                    'Это поможет тебе скрыться от стражника', False,\r\n                    (255, 255, 255))\r\n                player.apples = 6\r\n            screen.blit(task_text, (100, 0))\r\n            screen.blit(task_text2, (100, 40))\r\n        if (not player.pas and pygame.sprite.collide_mask(player, pas) and\r\n                player.loc == 6):  # Взаимодействие с автоматом\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 40)\r\n            task_text = font.render(\"Нужна монета!\", False, (255, 255, 255))\r\n            screen.blit(task_text, (300, 0))\r\n        player_group.draw(screen)\r\n        if runi > -600:\r\n            runi -= 1\r\n\r\n        if player.loc == 2:\r\n            i += 1\r\n            if i % 40 == 0:\r\n                letter = Letters(x - player.x + 2500,\r\n                                 random.randint(y - player.y + 450,\r\n                                                y - player.y + 660))\r\n                word_group.add(letter)\r\n                wizardRus.rect.y = letter.rect.y\r\n            word_group.update()\r\n            word_group.draw(screen)\r\n\r\n        screen.blit(pygame.transform.scale(load_image(\"camera-player/run.png\"),\r\n                                           (40, 40)),\r\n                    (5, 5))\r\n        font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n        if runi == -600:  # Активация ускорения\r\n            txt = pygame.font.Font(font_path, 35).render(f\"active\", True,\r\n                                                         (255, 0, 0))\r\n            screen.blit(txt, (50, 0))\r\n        else:\r\n            txt = pygame.font.Font(font_path, 30).render(\r\n                f\"{(runi + 660) // 60}\", True, (255, 0, 0))\r\n            screen.blit(txt, (50, 5))\r\n\r\n        if player.key:\r\n            screen.blit(img, (750, 0))\r\n\r\n        if player.apples != 6:\r\n            for i in range(player.apples):\r\n                screen.blit(img, (770 - i * 30, 0))\r\n\r\n        if player.loc == 4:  # Босс 1 акта\r\n            if 200 <= loc5 <= 1000 and loc5 % 200 == 0:\r\n                try:\r\n                    n = random.randint(-1, 3) * 200\r\n                    while n == m:\r\n                        n = random.randint(-1, 3) * 200\r\n                    m = n\r\n                except Exception:\r\n                    m = random.randint(-1, 3) * 200\r\n                rect.rect.x = 20000\r\n                rect = Rectangle(x - player.x + m,\r\n                                 y - player.y - 78, 0, 0, 450,\r\n                                 519, False, \"objects/warning rect.png\")\r\n            if 340 <= loc5 <= 1000 and loc5 % 200 == 140:\r\n                rect.rect.x = 20000\r\n                rect = Rectangle(x - player.x + m,\r\n                                 y - player.y - 78, 0, 0, 450,\r\n                                 519, True, \"objects/grayrect.jpg\")\r\n            if 1000 <= loc5 <= 3000 and loc5 % 100 == 0:\r\n                rect.rect.x = 20000\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(-100, 150), -3, 0, 10,\r\n                          random.randint(50, 300), True, \"objects/redrect.jpg\")\r\n            if 3200 <= loc5 <= 4000 and loc5 % 200 == 0:\r\n                n = random.randint(-1, 3) * 200\r\n                while n == m:\r\n                    n = random.randint(-1, 3) * 200\r\n                m = n\r\n                rect.rect.x = 20000\r\n                rect = Rectangle(x - player.x + m,\r\n                                 y - player.y - 78, 0, 0, 450,\r\n                                 519, False, \"objects/warning rect.png\")\r\n            if 3200 <= loc5 <= 4140 and loc5 % 200 == 140:\r\n                rect.rect.x = 20000\r\n                rect = Rectangle(x - player.x + m,\r\n                                 y - player.y - 78, 0, 0, 450,\r\n                                 519, True, \"objects/grayrect.jpg\")\r\n            if loc5 == 4200:\r\n                rect.rect.x = 20000\r\n            if loc5 == 4400:\r\n                door = Door(x - player.x + 350, y - player.y + 150, 1, 1)\r\n                player.loc = 5\r\n            loc5 += 1\r\n            rectangle_group.update()\r\n        if player.loc == 11:  # Босс 2 акта\r\n            if loc11 <= 2000 and loc11 % 100 == 0:\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(-100, 200), -3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"objects/greenrect2.jpg\")\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(200, 450), -3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"objects/greenrect2.jpg\")\r\n            if 2300 <= loc11 <= 3400 and loc11 % 100 == 0:\r\n                Rectangle(x - player.x + random.randint(-100, 300),\r\n                          y - player.y - 200, 0, 1, 20,\r\n                          random.randint(100, 300),\r\n                          True, \"objects/greenrect1.jpg\")\r\n                Rectangle(x - player.x + random.randint(300, 800),\r\n                          y - player.y - 200, 0, 1, 20,\r\n                          random.randint(100, 300),\r\n                          True, \"objects/greenrect1.jpg\")\r\n            if 3400 <= loc11 <= 5000 and loc11 % 100 == 0:\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(-100, 200), -3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"objects/greenrect2.jpg\")\r\n                Rectangle(x - player.x - 300,\r\n                          y - player.y + random.randint(200, 450), 3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"objects/greenrect2.jpg\")\r\n            if loc11 == 5400:\r\n                door = Door(x - player.x + 350, y - player.y + 150, 1, 1)\r\n                player.loc = 12\r\n            loc11 += 1\r\n            rectangle_group.update()\r\n\r\n        if player.loc == 15:  # Босс 3 акта\r\n            if loc14 == 200:\r\n                p = [random.randint(0, 600),\r\n                     random.randint(0, 300)]\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 400:\r\n                plat.rect.x = 20000\r\n                rect = Rectangle(-200, -200, 0, 0, 2000, 2000, True,\r\n                                 \"objects/damage_platform.jpg\")\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 500:\r\n                plat.rect.x = 20000\r\n                rect.rect.x = 20000\r\n            elif loc14 == 600:\r\n                act3_buttons()\r\n            if 600 <= loc14 <= 900:\r\n                tm -= 1\r\n                font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n                font = pygame.font.Font(font_path, 50)\r\n                screen.blit(task_text, (300, 0))\r\n                screen.blit(font.render(str(tm // 100 + 1), False, (0, 0, 0)),\r\n                            (650, 0))\r\n            if loc14 == 900:\r\n                for j in buttons:\r\n                    if pygame.sprite.collide_mask(player,\r\n                                                  j) and j.tip == difference:\r\n                        for k in buttons:\r\n                            k.rect.x = 20000\r\n                            buttons = []\r\n                        break\r\n                else:\r\n                    end_screen(3, False)\r\n\r\n            if loc14 == 1000:\r\n                p = [random.randint(0, 600),\r\n                     random.randint(0, 300)]\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 1200:\r\n                plat.rect.x = 20000\r\n                rect = Rectangle(-200, -200, 0, 0, 2000, 2000, True,\r\n                                 \"objects/damage_platform.jpg\")\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 1300:\r\n                plat.rect.x = 20000\r\n                rect.rect.x = 20000\r\n            if 1400 <= loc14 <= 2000 and loc14 % 100 == 0:\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(-50, 200), -3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"objects/damage_platform.jpg\")\r\n                Rectangle(x - player.x - 300,\r\n                          y - player.y + random.randint(200, 450), 3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"objects/damage_platform.jpg\")\r\n\r\n            if loc14 == 2100:\r\n                p = [random.randint(0, 600),\r\n                     random.randint(0, 300)]\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 2300:\r\n                plat.rect.x = 20000\r\n                rect = Rectangle(-200, -200, 0, 0, 2000, 2000, True,\r\n                                 \"objects/damage_platform.jpg\")\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 2400:\r\n                plat.rect.x = 20000\r\n                rect.rect.x = 20000\r\n            elif loc14 == 2500:\r\n                act3_buttons()\r\n            if 2500 <= loc14 <= 2800:\r\n                tm -= 1\r\n                font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n                font = pygame.font.Font(font_path, 50)\r\n                screen.blit(task_text, (300, 0))\r\n                screen.blit(font.render(str(tm // 100 + 1), False, (0, 0, 0)),\r\n                            (650, 0))\r\n            if loc14 == 2800:\r\n                for j in buttons:\r\n                    if pygame.sprite.collide_mask(player,\r\n                                                  j) and j.tip == difference:\r\n                        for k in buttons:\r\n                            k.rect.x = 20000\r\n                            buttons = []\r\n                        break\r\n                else:\r\n                    end_screen(3, False)\r\n            if 3000 <= loc14 <= 3500 and loc14 % 100 == 0:\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(-50, 200), -3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"objects/damage_platform.jpg\")\r\n                Rectangle(x - player.x - 300,\r\n                          y - player.y + random.randint(200, 450), 3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"objects/damage_platform.jpg\")\r\n\r\n            if 3500 <= loc14 <= 4000 and loc14 % 100 == 0:\r\n                Rectangle(x - player.x - 300,\r\n                          y - player.y + random.randint(-50, 200), 3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"objects/damage_platform.jpg\")\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(200, 450), -3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"objects/damage_platform.jpg\")\r\n            if loc14 == 4100:\r\n                p = [random.randint(0, 600),\r\n                     random.randint(0, 300)]\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 4300:\r\n                plat.rect.x = 20000\r\n                rect = Rectangle(-200, -200, 0, 0, 2000, 2000, True,\r\n                                 \"objects/damage_platform.jpg\")\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 4400:\r\n                plat.rect.x = 20000\r\n                rect.rect.x = 20000\r\n            elif loc14 == 4500:\r\n                act3_buttons()\r\n            if 4500 <= loc14 <= 4800:\r\n                tm -= 1\r\n                font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n                font = pygame.font.Font(font_path, 50)\r\n                screen.blit(task_text, (300, 0))\r\n                screen.blit(font.render(str(tm // 100 + 1), False, (0, 0, 0)),\r\n                            (650, 0))\r\n            if loc14 == 4800:\r\n                for j in buttons:\r\n                    if pygame.sprite.collide_mask(player,\r\n                                                  j) and j.tip == difference:\r\n                        for k in buttons:\r\n                            k.rect.x = 20000\r\n                            buttons = []\r\n                        break\r\n                else:\r\n                    end_screen(3, False)\r\n            if 5000 <= loc14 <= 5500 and loc14 % 100 == 0:\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(-50, 200), -3, 0,\r\n                          random.randint(100, 300),\r\n                          13, True, \"objects/damage_platform.jpg\")\r\n                Rectangle(x - player.x - 300,\r\n                          y - player.y + random.randint(200, 450), 3, 0,\r\n                          random.randint(100, 300),\r\n                          13, True, \"objects/damage_platform.jpg\")\r\n            if 5500 <= loc14 <= 6000 and loc14 % 100 == 0:\r\n                Rectangle(x - player.x - 300,\r\n                          y - player.y + random.randint(-50, 200), 3, 0,\r\n                          random.randint(100, 300),\r\n                          13, True, \"objects/damage_platform.jpg\")\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(200, 450), -3, 0,\r\n                          random.randint(100, 300),\r\n                          13, True, \"objects/damage_platform.jpg\")\r\n            if loc14 == 6200:\r\n                door = Door(x - player.x + 100, y - player.y + 150, 1, 1)\r\n                player.loc = 16\r\n\r\n            loc14 += 1\r\n            rectangle_group.update()\r\n\r\n        if player.loc == 3:  # Таблички 1 акта\r\n            sign_group.update()\r\n            for i in sign_group:\r\n                if pygame.sprite.collide_mask(player, i):\r\n                    screen.blit(\r\n                        pygame.transform.scale(\r\n                            load_image(\"objects/text_window.png\"),\r\n                            (600, 150)),\r\n                        (100, 0))\r\n            screen.blit(text1, (110, 10))\r\n            screen.blit(text2, (110, 40))\r\n            screen.blit(text3, (110, 70))\r\n            screen.blit(text4, (110, 100))\r\n\r\n        button_group.update()\r\n        door_group.draw(screen)\r\n        defense_group.draw(screen)\r\n        apple_trees_group.draw(screen)\r\n        apple_group.draw(screen)\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision bf103e7da4e87f70e8d17bc78f53fcd211f7b7ca)
+++ b/main.py	(date 1705327775944)
@@ -903,7 +903,7 @@
                 all_sprites = pygame.sprite.Group()
                 player_group = pygame.sprite.Group()
                 door_group = pygame.sprite.Group()
-                background = Background('maps/m4.png', (2060, 1500))
+                background = Background('maps/a2_m4.png', (2060, 1500))
                 pas = Pass(850, 600)
                 door = Door(350, 840, 2, 1)
                 door2 = Door(1528, 540, 2, 1)
Index: .idea/shelf/Uncommitted_changes_before_Update_at_10_01_2024_21_46_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_10_01_2024_21_46_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_10_01_2024_21_46_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_10_01_2024_21_46_[Changes]/shelved.patch	(revision bf103e7da4e87f70e8d17bc78f53fcd211f7b7ca)
+++ /dev/null	(revision bf103e7da4e87f70e8d17bc78f53fcd211f7b7ca)
@@ -1,102 +0,0 @@
-Index: main.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import datetime\r\nimport os\r\nimport random\r\nimport sys\r\n\r\nimport pygame\r\nimport sqlite3\r\n\r\n\r\ndef load_image(name, colorkey=None):\r\n    fullname = os.path.join('data', name)\r\n    # если файл не существует, то выходим\r\n    if not os.path.isfile(fullname):\r\n        print(f\"Файл с изображением '{fullname}' не найден\")\r\n        sys.exit()\r\n    image = pygame.image.load(fullname)\r\n    if colorkey is not None:\r\n        if colorkey == -1:\r\n            colorkey = image.get_at((0, 0))\r\n        image.set_colorkey(colorkey)\r\n    return image\r\n\r\n\r\ndef newDialog():\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    font = pygame.font.Font(font_path, 20)\r\n    render_fraze_1 = font.render('', True, (255, 255, 255))\r\n    render_fraze_2 = font.render('', True, (255, 255, 255))\r\n    render_fraze_3 = font.render('', True, (255, 255, 255))\r\n    return render_fraze_1, render_fraze_2, render_fraze_3\r\n\r\n\r\ndef mathGame(m):\r\n    global background, all_sprites, player_group, player, door, \\\r\n        door_group, rectangle_group, loc5, loc11, loc14, x, y\r\n    if player.loc == 10:\r\n        fon = pygame.transform.scale(load_image(m), (800, 505))\r\n    else:\r\n        fon = pygame.transform.scale(load_image(m), (800, 505))\r\n    screen.blit(fon, (0, 0))\r\n\r\n    a = random.randint(0, 100)\r\n    difference = random.randint(0, 9)\r\n    b = difference - a\r\n    if m == 'a1_m4.png':\r\n        fraze_1 = 'Я великий маг этого подземелья,'\r\n        fraze_2 = 'и я никому не дам ходить по нему'\r\n        fraze_3 = 'без моего разрешения!'\r\n    elif m == 'a2_m5.png':\r\n        fraze_1 = 'Вот мы снова встретились,'\r\n        fraze_2 = 'и в этот раз ты в моем лесу'\r\n        fraze_3 = 'дальше я тебя не пропущу!'\r\n    else:\r\n        fraze_1 = 'Вот мы снова встретились,'\r\n        fraze_2 = 'и в этот раз ты далеко прошел'\r\n        fraze_3 = 'дальше я тебя не уйдешь!'\r\n\r\n    if player.loc <= 5:\r\n        screen.fill((2, 0, 0))\r\n    elif 5 < player.loc <= 12:\r\n        screen.fill((34, 177, 76))\r\n    else:\r\n        screen.fill((153, 217, 234))\r\n    screen.blit(fon, (0, 0))\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    font = pygame.font.Font(font_path, 20)\r\n    render_fraze_1, render_fraze_2, render_fraze_3 = newDialog()\r\n\r\n    win = False\r\n    i = 1\r\n    k = 0\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif event.type == pygame.KEYDOWN:\r\n                if ((event.key == pygame.K_z or event.key == pygame.K_RETURN)\r\n                        and k == 0):\r\n                    if player.loc <= 5:\r\n                        screen.fill((2, 0, 0))\r\n                    elif 5 < player.loc <= 12:\r\n                        screen.fill((34, 177, 76))\r\n                    else:\r\n                        screen.fill((153, 217, 234))\r\n                    screen.blit(fon, (0, 0))\r\n                    if b < 0:\r\n                        question = f\"{a}{b}\"\r\n                    else:\r\n                        question = f\"{a} + {b}\"\r\n                    fraze_1 = 'Но ты можешь попытать удачу,'\r\n                    fraze_2 = 'и решить мою задачу'\r\n                    fraze_3 = 'сколько будет: ' + question\r\n                    render_fraze_1, render_fraze_2, render_fraze_3 = (\r\n                        newDialog())\r\n                    i = 1\r\n                    k = 1\r\n                elif 48 <= event.key <= 58 and k == 1:\r\n                    fraze_1 = event.key - 48\r\n                    render_fraze_1, render_fraze_2, render_fraze_3 = (\r\n                        newDialog())\r\n                    if fraze_1 == difference:\r\n                        if player.loc <= 5:\r\n                            screen.fill((2, 0, 0))\r\n                        elif 5 < player.loc <= 12:\r\n                            screen.fill((34, 177, 76))\r\n                        else:\r\n                            screen.fill((153, 217, 234))\r\n                        screen.blit(fon, (0, 0))\r\n                        if m == 'a1_m4.png':\r\n                            fraze_1 = 'Я вижу, что ты неплох в математике'\r\n                            fraze_2 = 'на этот раз я тебя пропускаю,'\r\n                            fraze_3 = 'но мы еще встретимся!'\r\n                        elif m == 'a2_m5.png':\r\n                            fraze_1 = 'Я вижу, что ты до сих пор неплох в \\\r\n                                       математике'\r\n                            fraze_2 = 'в этот раз я тебя пропускаю,'\r\n                            fraze_3 = 'но еще одна наша встреча неизбежна!'\r\n                        else:\r\n                            fraze_1 = 'Я вижу, что ты также силен в математике'\r\n                            fraze_2 = 'на этот раз покажи себя в равном бою,'\r\n                            fraze_3 = 'с истинным магом!'\r\n                        win = True\r\n                    else:\r\n                        if player.loc <= 5:\r\n                            screen.fill((2, 0, 0))\r\n                        elif 5 < player.loc <= 12:\r\n                            screen.fill((34, 177, 76))\r\n                        else:\r\n                            screen.fill((153, 217, 234))\r\n                        screen.blit(fon, (0, 0))\r\n                        fraze_1 = 'Я вижу, что ты слаб,'\r\n                        fraze_2 = 'возвращайся,'\r\n                        fraze_3 = 'лишь когда будешь достоин'\r\n                    i = 1\r\n                    k = 2\r\n                elif ((event.key == pygame.K_z or event.key == pygame.K_RETURN)\r\n                      and k == 2):\r\n                    if win:\r\n                        if m == 'a1_m4.png':\r\n                            all_sprites = pygame.sprite.Group()\r\n                            player_group = pygame.sprite.Group()\r\n                            rectangle_group = pygame.sprite.Group()\r\n                            background = Background('a1_m5.png', (839, 1300))\r\n                            all_sprites.add(background)\r\n                            sign1.rect.y = 1000\r\n                            sign2.rect.y = 1000\r\n                            sign3.rect.y = 700\r\n                            sign4.rect.y = 700\r\n                            sign5.rect.y = 400\r\n                            sign6.rect.y = 400\r\n                            all_sprites.add(sign1, sign2, sign3, sign4, sign5,\r\n                                            sign6)\r\n                            sign_group.add(sign1, sign2, sign3, sign4, sign5,\r\n                                           sign6)\r\n                            player = Player(419, 1100, 1)\r\n                            door = Door(362, 30, 1, 2)\r\n                            player.loc = 3\r\n                            loc5 = 0\r\n                        elif m == 'a2_m5.png':\r\n                            all_sprites = pygame.sprite.Group()\r\n                            player_group = pygame.sprite.Group()\r\n                            rectangle_group = pygame.sprite.Group()\r\n                            background = Background('a2_m6.jpg', (1700, 1000))\r\n                            all_sprites.add(background)\r\n                            player = Player(850, 500, 2)\r\n                            player.loc = 11\r\n                            door.rect.x = 20000\r\n                            door2.rect.x = 20000\r\n                            door3.rect.x = 20000\r\n                            x = player.x\r\n                            y = player.y\r\n                            loc11 = 0\r\n                            pygame.mixer.music.load(\"data/\"\r\n                                                    \"mus_undynetruetheme.ogg\")\r\n                            pygame.mixer.music.set_volume(0.3)\r\n                            pygame.mixer.music.play(loops=-1)\r\n                        else:\r\n                            all_sprites = pygame.sprite.Group()\r\n                            player_group = pygame.sprite.Group()\r\n                            rectangle_group = pygame.sprite.Group()\r\n                            background = Background('a3_m3.jpg', (2210, 1300))\r\n                            all_sprites.add(background)\r\n                            player = Player(1105, 650, 3)\r\n                            player.loc = 15\r\n                            door.rect.x = 20000\r\n                            x = player.x\r\n                            y = player.y\r\n                            loc14 = 0\r\n                            pygame.mixer.music.load(\"data/act3_boss.ogg\")\r\n                            pygame.mixer.music.set_volume(0.3)\r\n                            pygame.mixer.music.play(loops=-1)\r\n                        camera.update(player)\r\n                        for sprite in all_sprites:\r\n                            camera.apply(sprite)\r\n                        return\r\n                    else:\r\n                        if m == 'a1_m4.png':\r\n                            end_screen(1, False)\r\n                        elif m == 'a2_m5.png':\r\n                            end_screen(2, False)\r\n                        else:\r\n                            end_screen(3, False)\r\n                        return\r\n\r\n        if i <= len(fraze_1):\r\n            render_fraze_1 = font.render(fraze_1[:i], True, (255, 255, 255))\r\n        elif i <= len(fraze_1) + len(fraze_2):\r\n            render_fraze_2 = font.render(fraze_2[:i - len(fraze_1)], True,\r\n                                         (255, 255, 255))\r\n        elif i <= len(fraze_1) + len(fraze_2) + len(fraze_3):\r\n            render_fraze_3 = font.render(\r\n                fraze_3[:i - len(fraze_1) - len(fraze_2)], True,\r\n                (255, 255, 255))\r\n        i += 1\r\n        if m == 'a1_m4.png':\r\n            screen.blit(render_fraze_1, (230, 85))\r\n            screen.blit(render_fraze_2, (230, 115))\r\n            screen.blit(render_fraze_3, (230, 145))\r\n        elif m == 'a2_m5.png':\r\n            screen.blit(render_fraze_1, (250, 33))\r\n            screen.blit(render_fraze_2, (250, 51))\r\n            screen.blit(render_fraze_3, (250, 69))\r\n        else:\r\n            screen.blit(render_fraze_1, (230, 85))\r\n            screen.blit(render_fraze_2, (230, 115))\r\n            screen.blit(render_fraze_3, (230, 145))\r\n        player_group.draw(screen)\r\n        pygame.display.flip()\r\n        clock.tick(20)\r\n        clock.tick(FPS)\r\n\r\n\r\ndef terminate():\r\n    pygame.quit()\r\n    sys.exit()\r\n\r\n\r\ndef start_screen():\r\n    fon = pygame.transform.scale(load_image('fon.jpg'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(0.7)\r\n    fon = pygame.transform.scale(load_image('blackfon.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif (event.type == pygame.KEYDOWN or event.type ==\r\n                  pygame.MOUSEBUTTONDOWN):\r\n                if True:\r\n                    act1()\r\n                    return\r\n        clock.tick(FPS)\r\n\r\n\r\ndef end_screen(n, winOrdie):\r\n    fon = pygame.transform.scale(load_image('gameover.jpg'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    font = pygame.font.Font(font_path, 35)\r\n    tm = (datetime.datetime.now() - time).total_seconds()\r\n    t2 = font.render(f\"{int(tm // 60)} min {int(tm - (tm // 60) * 60)} sec\",\r\n                     True, (0, 0, 0))\r\n\r\n    if winOrdie:\r\n        t = font.render(f\"Win\", True, (0, 0, 0))\r\n\r\n        con = sqlite3.connect(\"data/bd.sqlite\")\r\n        cur = con.cursor()\r\n        cur.execute(\r\n            f\"INSERT INTO player(act, time) VALUES({n - 1}, '{int(tm // 60)} \"\r\n            f\"min {int(tm - (tm // 60) * 60)} sec')\")\r\n        con.commit()\r\n        con.close()\r\n    else:\r\n        t = font.render(f\"Lose\", True, (0, 0, 0))\r\n\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif (event.type == pygame.KEYDOWN or event.type ==\r\n                  pygame.MOUSEBUTTONDOWN):\r\n                if True:\r\n                    if n == 1:\r\n                        act1()\r\n                    elif n == 2:\r\n                        act2()\r\n                    elif n == 3:\r\n                        act3()\r\n                    else:\r\n                        sybtit_screen()\r\n                        results()\r\n                        act1()\r\n                    return\r\n\r\n        screen.blit(t, (300, 200))\r\n        screen.blit(t2, (300, 300))\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n\r\n\r\ndef act1():\r\n    global all_sprites, player_group, player, background, door, door_group, \\\r\n        i, word_group, x, y, loc5, time, runi\r\n    time = datetime.datetime.now()\r\n    fon = pygame.transform.scale(load_image('act1.png'), (800, 500))\r\n    pygame.mixer.music.load(\"data/start_sound.ogg\")\r\n    pygame.mixer.music.set_volume(0.3)\r\n    pygame.mixer.music.play(loops=-1)\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n    all_sprites = pygame.sprite.Group()\r\n    player_group = pygame.sprite.Group()\r\n    door_group = pygame.sprite.Group()\r\n    background = Background('a1_m1.png', (1360, 760))\r\n    door = Door(1180, 440, 1, 1)\r\n    all_sprites.add(background)\r\n    door_group.add(door)\r\n    pygame.mixer.music.load(\"data/act1_main.ogg\")\r\n    pygame.mixer.music.set_volume(0.3)\r\n    pygame.mixer.music.play(loops=-1)\r\n    player = Player(290, 470, 1)\r\n    word_group = pygame.sprite.Group()\r\n    x, y = 0, 0\r\n    loc5 = 0\r\n    i = 0\r\n    runi = -600\r\n    camera.update(player)\r\n    for sprite in all_sprites:\r\n        camera.apply(sprite)\r\n\r\n    screen.blit(pygame.transform.scale(load_image(\"run.png\"), (40, 40)),\r\n                (5, 5))\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    txt = pygame.font.Font(font_path, 35).render(f\"active\", True,\r\n                                                 (255, 0, 0))\r\n    screen.blit(txt, (50, 0))\r\n    all_sprites.draw(screen)\r\n\r\n\r\ndef act2():\r\n    global all_sprites, player_group, player, background, door, \\\r\n        door_group, time, x, y, door2, door3, pas, loc11, img, runi\r\n    time = datetime.datetime.now()\r\n    fon = pygame.transform.scale(load_image('act2.png'), (800, 500))\r\n    pygame.mixer.music.load(\"data/start_sound.ogg\")\r\n    pygame.mixer.music.set_volume(0.3)\r\n    pygame.mixer.music.play(loops=-1)\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n    all_sprites = pygame.sprite.Group()\r\n    player_group = pygame.sprite.Group()\r\n    door_group = pygame.sprite.Group()\r\n    background = Background('a2_m1.png', (2060, 1500))\r\n    door = Door(350, 840, 2, 1)\r\n    door2 = Door(1528, 540, 2, 1)\r\n    door3 = Door(350, 540, 2, 1)\r\n    all_sprites.add(background)\r\n    door_group.add(door, door2, door3)\r\n    pas = Pass(850, 700)\r\n    img = load_image('key.jpg')\r\n    img = pygame.transform.scale(img, (50, 50))\r\n    pygame.mixer.music.load(\"data/a2_m1.mp3\")\r\n    pygame.mixer.music.set_volume(0.3)\r\n    pygame.mixer.music.play(loops=-1)\r\n    x, y = 0, 0\r\n    loc11 = 0\r\n    runi = -600\r\n    player = Player(730, 730, 2)\r\n    player.loc = 6\r\n    camera.update(player)\r\n    for sprite in all_sprites:\r\n        camera.apply(sprite)\r\n\r\n    screen.blit(pygame.transform.scale(load_image(\"run.png\"), (40, 40)),\r\n                (5, 5))\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    txt = pygame.font.Font(font_path, 35).render(f\"active\", True,\r\n                                                 (255, 0, 0))\r\n    screen.blit(txt, (50, 0))\r\n    all_sprites.draw(screen)\r\n    door_group.draw(screen)\r\n\r\n\r\ndef act3():\r\n    global all_sprites, player_group, player, background, door, door_group, \\\r\n        i, x, y, time, defen, traveler, apples, runi\r\n    fon = pygame.transform.scale(load_image('act3.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.mixer.music.load(\"data/start_sound.ogg\")\r\n    pygame.mixer.music.set_volume(0.3)\r\n    pygame.mixer.music.play(loops=-1)\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n    all_sprites = pygame.sprite.Group()\r\n    player_group = pygame.sprite.Group()\r\n    door_group = pygame.sprite.Group()\r\n    background = Background('a3_m1.jpg', (10000, 6000))\r\n    all_sprites.add(background)\r\n    pygame.mixer.music.load(\"data/act3_main.ogg\")\r\n    pygame.mixer.music.set_volume(0.3)\r\n    pygame.mixer.music.play(loops=-1)\r\n    door = Door(1950, 2750, 1, 1)\r\n    door_group.add(door)\r\n    player = Player(1650, 1200, 3)\r\n    traveler = Traveler(5000, 3600)\r\n    player.loc = 13\r\n    runi = -600\r\n    defen = Defens(2350, 2450)\r\n    apples = [\r\n        Apple(6000, 3000),\r\n        Apple(6400, 2500),\r\n        Apple(4800, 3000),\r\n        Apple(6100, 1900),\r\n        Apple(8000, 2800)\r\n    ]\r\n\r\n    camera.update(player)\r\n    for sprite in all_sprites:\r\n        camera.apply(sprite)\r\n\r\n    screen.blit(pygame.transform.scale(load_image(\"run.png\"), (40, 40)),\r\n                (5, 5))\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    txt = pygame.font.Font(font_path, 35).render(f\"active\", True,\r\n                                                 (255, 0, 0))\r\n    screen.blit(txt, (50, 0))\r\n    all_sprites.draw(screen)\r\n\r\n\r\nt1 = None\r\nt2 = None\r\nt3 = None\r\nt4 = None\r\nt5 = None\r\n\r\n\r\ndef other_color(cl1, cl2, cl3, cl4, cl5):\r\n    global t1, t2, t3, t4, t5\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    font = pygame.font.Font(font_path, 40)\r\n    t1 = font.render(f\"1 Act\",\r\n                     True, cl1)\r\n    t2 = font.render(f\"2 Act\",\r\n                     True, cl2)\r\n    t3 = font.render(f\"3 Act\",\r\n                     True, cl3)\r\n    t4 = font.render(f\"Tab result\",\r\n                     True, cl4)\r\n    t5 = font.render(f\"Cancel\",\r\n                     True, cl5)\r\n\r\n\r\ndef menu():\r\n    other_color((0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (255, 0, 0))\r\n    colT = 5\r\n    pygame.mixer.music.pause()\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_w or event.key == pygame.K_UP:\r\n                    colT -= 1\r\n                    if colT == 0:\r\n                        colT = 5\r\n                        other_color((0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0),\r\n                                    (255, 0, 0))\r\n                    if colT == 1:\r\n                        other_color((255, 0, 0), (0, 0, 0), (0, 0, 0),\r\n                                    (0, 0, 0), (0, 0, 0))\r\n                    if colT == 2:\r\n                        other_color((0, 0, 0), (255, 0, 0), (0, 0, 0),\r\n                                    (0, 0, 0), (0, 0, 0))\r\n                    if colT == 3:\r\n                        other_color((0, 0, 0), (0, 0, 0), (255, 0, 0),\r\n                                    (0, 0, 0), (0, 0, 0))\r\n                    if colT == 4:\r\n                        other_color((0, 0, 0), (0, 0, 0), (0, 0, 0),\r\n                                    (255, 0, 0), (0, 0, 0))\r\n\r\n                if event.key == pygame.K_s or event.key == pygame.K_DOWN:\r\n                    colT += 1\r\n                    if colT == 6:\r\n                        colT = 1\r\n                        other_color((255, 0, 0), (0, 0, 0), (0, 0, 0),\r\n                                    (0, 0, 0), (0, 0, 0))\r\n                    if colT == 5:\r\n                        other_color((0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0),\r\n                                    (255, 0, 0))\r\n                    if colT == 2:\r\n                        other_color((0, 0, 0), (255, 0, 0), (0, 0, 0),\r\n                                    (0, 0, 0), (0, 0, 0))\r\n                    if colT == 3:\r\n                        other_color((0, 0, 0), (0, 0, 0), (255, 0, 0),\r\n                                    (0, 0, 0), (0, 0, 0))\r\n                    if colT == 4:\r\n                        other_color((0, 0, 0), (0, 0, 0), (0, 0, 0),\r\n                                    (255, 0, 0), (0, 0, 0))\r\n\r\n                if (event.key == pygame.K_SPACE or event.key == pygame.K_p or\r\n                        event.key == pygame.K_RETURN):\r\n                    if colT == 1:\r\n                        act1()\r\n                    if colT == 2:\r\n                        act2()\r\n                    if colT == 3:\r\n                        act3()\r\n                    if colT == 4:\r\n                        results()\r\n                    pygame.mixer.music.play(loops=-1)\r\n                    return\r\n\r\n        screen.blit(t1, (300, 50))\r\n        screen.blit(t2, (300, 130))\r\n        screen.blit(t3, (300, 210))\r\n        screen.blit(t4, (300, 290))\r\n        screen.blit(t5, (300, 370))\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n\r\n\r\nclass Player(pygame.sprite.Sprite):\r\n    image = load_image('m.c.front_stop.png')\r\n    image = pygame.transform.scale(image, (40, 60))\r\n\r\n    def __init__(self, pos_x, pos_y, stena, key=False, pas=False):\r\n        super().__init__(player_group, all_sprites)\r\n        self.image = Player.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n        self.x = pos_x + 20\r\n        self.y = pos_y + 60\r\n        self.step = 1\r\n        self.back = False\r\n        self.last_skin_change_time = 0\r\n        self.direction = ''\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n        self.loc = 0\r\n        self.key = key\r\n        self.pas = pas\r\n        self.run = 5\r\n        self.vis = True\r\n        self.appls = 0\r\n        if stena == 1:\r\n            self.stena = [(2, 0, 0)]\r\n        elif stena == 2:\r\n            self.stena = [(34, 177, 76), (0, 162, 232), (54, 19, 11),\r\n                          (0, 8, 4), (4, 28, 16), (15, 69, 10), (18, 89, 22)]\r\n        elif stena == 3:\r\n            self.stena = [(153, 217, 234), (185, 122, 87), (0, 162, 232),\r\n                          (187, 122, 87)]\r\n\r\n    def stop(self):\r\n        image = self.image\r\n        if self.vis:\r\n            if self.direction == 'left':\r\n                image = load_image(f'm.c.left_stop.png')\r\n            elif self.direction == 'right':\r\n                image = load_image(f'm.c.right_stop.png')\r\n            elif self.direction == 'down':\r\n                image = load_image(f'm.c.front_stop.png')\r\n            elif self.direction == 'up':\r\n                image = load_image(f'm.c.back_stop.png')\r\n        else:\r\n            image = load_image(f'm.v.jpg')\r\n        self.image = pygame.transform.scale(image, (40, 60))\r\n\r\n    def update(self, move_up, move_down, move_left, move_right, passaa=None):\r\n        global all_sprites, background, player, player_group, door_group, \\\r\n            door, word_group, x, y, task_text, ok_tip, door2, door3, \\\r\n            chest, img, pas, rectangle_group, loc5, loc11, text1, text2, \\\r\n            text3, text4\r\n        image = self.image\r\n        current_time = pygame.time.get_ticks()\r\n        text_window.rect.x = 999999\r\n\r\n        if move_left:\r\n            self.direction = 'left'\r\n            self.rect.x -= self.run\r\n            self.x -= self.run\r\n            if background.get_rgb(self.x, self.y) in self.stena:\r\n                self.rect.x += self.run\r\n                self.x += self.run\r\n            if self.vis:\r\n                if current_time - self.last_skin_change_time > 150:\r\n                    self.last_skin_change_time = current_time\r\n                    if self.step == 1:\r\n                        self.step += 1\r\n                        self.back = False\r\n                    elif self.step == 2:\r\n                        if self.back:\r\n                            self.step -= 1\r\n                        else:\r\n                            self.step += 1\r\n                    elif self.step == 3:\r\n                        self.step -= 1\r\n                        self.back = True\r\n\r\n                image = load_image(f'm.c.left_walk_{self.step}.png')\r\n            else:\r\n                image = load_image(f'm.v.jpg')\r\n        if move_right:\r\n            self.direction = 'right'\r\n            self.rect.x += self.run\r\n            self.x += self.run\r\n            if background.get_rgb(self.x, self.y) in self.stena:\r\n                self.rect.x -= self.run\r\n                self.x -= self.run\r\n            if self.vis:\r\n                if current_time - self.last_skin_change_time > 150:\r\n                    self.last_skin_change_time = current_time\r\n                    if self.step == 1:\r\n                        self.step += 1\r\n                        self.back = False\r\n                    elif self.step == 2:\r\n                        if self.back:\r\n                            self.step -= 1\r\n                        else:\r\n                            self.step += 1\r\n                    elif self.step == 3:\r\n                        self.step -= 1\r\n                        self.back = True\r\n\r\n                image = load_image(f'm.c.right_walk_{self.step}.png')\r\n            else:\r\n                image = load_image(f'm.v.jpg')\r\n        if move_up:\r\n            self.direction = 'up'\r\n            self.rect.y -= self.run\r\n            self.y -= self.run\r\n            if background.get_rgb(self.x, self.y) in self.stena:\r\n                self.rect.y += self.run\r\n                self.y += self.run\r\n            if self.vis:\r\n                if current_time - self.last_skin_change_time > 150:\r\n                    self.last_skin_change_time = current_time\r\n                    if self.step == 1:\r\n                        self.step += 1\r\n                        self.back = False\r\n                    elif self.step == 2:\r\n                        if self.back:\r\n                            self.step -= 1\r\n                        else:\r\n                            self.step += 1\r\n                    elif self.step == 3:\r\n                        self.step -= 1\r\n                        self.back = True\r\n\r\n                image = load_image(f'm.c.back_walk_{self.step}.png')\r\n            else:\r\n                image = load_image(f'm.v.jpg')\r\n        if move_down:\r\n            self.direction = 'down'\r\n            self.rect.y += self.run\r\n            self.y += self.run\r\n            if background.get_rgb(self.x, self.y) in self.stena:\r\n                self.rect.y -= self.run\r\n                self.y -= self.run\r\n            if self.vis:\r\n                if current_time - self.last_skin_change_time > 150:\r\n                    self.last_skin_change_time = current_time\r\n                    if self.step == 1:\r\n                        self.step += 1\r\n                        self.back = False\r\n                    elif self.step == 2:\r\n                        if self.back:\r\n                            self.step -= 1\r\n                        else:\r\n                            self.step += 1\r\n                    elif self.step == 3:\r\n                        self.step -= 1\r\n                        self.back = True\r\n\r\n                image = load_image(f'm.c.front_walk_{self.step}.png')\r\n            else:\r\n                image = load_image(f'm.v.jpg')\r\n        self.image = pygame.transform.scale(image, (40, 60))\r\n        if pygame.sprite.collide_mask(self, door):\r\n            if self.loc == 0:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a1_m2.png', (839, 1300))\r\n                all_sprites.add(background)\r\n                player = Player(419, 950, 1)\r\n                player.loc = 1\r\n                wizardRus.rect.x = 419\r\n                wizardRus.rect.y = 600\r\n                wizardRus.canRun = False\r\n                wizardRus.y = 600\r\n                all_sprites.add(wizardRus)\r\n                door = Door(363, 48, 1, 2)\r\n            elif self.loc == 1:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                word_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a1_m3.png', (2100, 500))\r\n                all_sprites.add(background)\r\n                door = Door(1800, 200, 1, 1)\r\n                player = Player(200, 330, 1)\r\n                player.loc = 2\r\n            elif self.loc == 2:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                background = Background('a1_m4.png', (700, 500))\r\n                all_sprites.add(background)\r\n                player = Player(385, 300, 1)\r\n                player.loc = 3\r\n                mathGame('a1_m4.png')\r\n            elif self.loc == 3:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                rectangle_group = pygame.sprite.Group()\r\n                background = Background('a1_m6.png', (900, 784))\r\n                all_sprites.add(background)\r\n                pygame.mixer.music.load(\"data/act1_boss.ogg\")\r\n                pygame.mixer.music.set_volume(0.3)\r\n                pygame.mixer.music.play(loops=-1)\r\n                player = Player(450, 300, 1)\r\n                player.loc = 4\r\n                x = player.x\r\n                y = player.y\r\n\r\n                loc5 = 0\r\n                door = Door(20000, 20000, 1, 1)\r\n            elif self.loc == 5:\r\n                door.rect.x = 20000\r\n                self.loc = 6\r\n                end_screen(2, True)\r\n            elif self.loc == 6 or self.loc == 9:\r\n                a = ['Птица', \"Медведь\", \"Заяц\", \"Человек\"]\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                word_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a2_m2.png', (2380, 1500))\r\n                all_sprites.add(background)\r\n                door = Door(1670, 750, 2, 1)\r\n                for j in range(1, 5):\r\n                    button_group.add(Button(775 + j * 150, 800, j))\r\n                player = Player(1600, 750, 2, key=player.key, pas=player.pas)\r\n                font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n                font = pygame.font.Font(font_path, 50)\r\n                ok_tip = random.randint(0, 3)\r\n                task_text = font.render(a[ok_tip], True, (255, 255, 255))\r\n                x, y = 700, 640\r\n                player.loc = 7\r\n            elif self.loc == 7:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a2_m1.png', (2060, 1500))\r\n                door = Door(350, 840, 2, 1)\r\n                door2 = Door(1528, 540, 2, 1)\r\n                door3 = Door(350, 540, 2, 1)\r\n                all_sprites.add(background)\r\n                door_group.add(door, door2, door3)\r\n                pas = Pass(850, 700)\r\n                player = Player(480, 840, 2, key=player.key, pas=player.pas)\r\n                player.loc = 6\r\n            elif self.loc == 12:\r\n                door.rect.x = 20000\r\n                self.loc = 13\r\n                end_screen(3, True)\r\n            elif self.loc == 13:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                background = Background('a3_m2.jpg', (750, 400))\r\n                all_sprites.add(background)\r\n                player = Player(385, 300, 1)\r\n                player.loc = 14\r\n                mathGame('a3_m2.jpg')\r\n            elif self.loc == 16:\r\n                door.rect.x = 20000\r\n                self.loc = 17\r\n                end_screen(4, True)\r\n        for j in apples:\r\n            if pygame.sprite.collide_mask(self, j):\r\n                j.rect.x = 20000\r\n                player.appls += 1\r\n                img = load_image('apple.jpg')\r\n                img = pygame.transform.scale(img, (30, 30))\r\n\r\n        if pygame.sprite.collide_mask(self, door3):\r\n            if self.loc == 6 or self.loc == 9:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                word_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a2_m3.png', (4000, 4000))\r\n                all_sprites.add(background)\r\n                chest = Chest(777, 742)\r\n                door3 = Door(3450, 810, 2, 1)\r\n                player = Player(3360, 800, 2, key=player.key, pas=player.pas)\r\n                x, y = 700, 640\r\n                player.loc = 8\r\n            elif self.loc == 8:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a2_m1.png', (2060, 1500))\r\n                door = Door(350, 840, 2, 1)\r\n                door2 = Door(1528, 540, 2, 1)\r\n                door3 = Door(350, 540, 2, 1)\r\n                all_sprites.add(background)\r\n                door_group.add(door, door2, door3)\r\n                pas = Pass(850, 700)\r\n                player = Player(480, 540, 2, key=player.key, pas=player.pas)\r\n                player.loc = 6\r\n        if pygame.sprite.collide_mask(self, chest) and self.loc != 9:\r\n            if player.key:\r\n                player.pas = True\r\n                img = load_image('cash.jpg')\r\n                img = pygame.transform.scale(img, (50, 50))\r\n                chest.image = pygame.transform.scale(\r\n                    load_image('chest_open.jpg'), (60, 40))\r\n        if player.appls == 6 and background.get_rgb(self.x + self.run,\r\n                                                    self.y + self.run) == \\\r\n                (0, 162, 232):\r\n            player.vis = False\r\n            try:\r\n                del self.stena[self.stena.index((187, 122, 87))]\r\n            except Exception:\r\n                pass\r\n\r\n        if pygame.sprite.collide_mask(self, pas) and self.loc != 9:\r\n            if player.pas:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a2_m4.png', (2060, 1500))\r\n                pas = Pass(850, 600)\r\n                door = Door(350, 840, 2, 1)\r\n                door2 = Door(1528, 540, 2, 1)\r\n                door3 = Door(350, 540, 2, 1)\r\n                all_sprites.add(background)\r\n                door_group.add(door)\r\n                door_group.add(door2)\r\n                door_group.add(door3)\r\n                pas = Pass(840, 650)\r\n                player = Player(player.x, player.y, 2)\r\n                player.loc = 9\r\n        if pygame.sprite.collide_mask(self, door2):\r\n            all_sprites = pygame.sprite.Group()\r\n            player_group = pygame.sprite.Group()\r\n            background = Background('a1_m4.png', (750, 400))\r\n            all_sprites.add(background)\r\n            player = Player(335, 325, 1)\r\n            player.loc = 10\r\n            mathGame('a2_m5.png')\r\n        if pygame.sprite.collide_mask(self, sign1):\r\n            text_window.rect.y = 0\r\n            text_window.rect.x = 100\r\n            text_group.add(text_window)\r\n            all_sprites.add(text_window)\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 20)\r\n            text1 = font.render('Лучше дальше не идти, это ОПАСНО!!!', False,\r\n                                (255, 255, 255))\r\n            text2 = font.render(\r\n                'Это один из лучших магов наук. Он знает ВСЕ науки!', False,\r\n                (255, 255, 255))\r\n            text3 = font.render(\r\n                'Он тоже не знает как сюда попал, но глупых детей он',\r\n                False, (255, 255, 255))\r\n            text4 = font.render('НИКОГДА не щадил!!!', False,\r\n                                (255, 255, 255))\r\n        elif pygame.sprite.collide_mask(self, sign2):\r\n            text_window.rect.y = 0\r\n            text_window.rect.x = 100\r\n            text_group.add(text_window)\r\n            all_sprites.add(text_window)\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 20)\r\n            text1 = font.render('Эти ворота скрывают ТЕБЯ от НЕГО!', False,\r\n                                (255, 255, 255))\r\n            text2 = font.render(\r\n                'Он никогда не проигрывал в научных битвах до этого.', False,\r\n                (255, 255, 255))\r\n            text3 = font.render(\r\n                'Он мог бы сбежать отсюда, но власть, которую он получил',\r\n                False, (255, 255, 255))\r\n            text4 = font.render('здесь очень манит его.', False,\r\n                                (255, 255, 255))\r\n        elif self.loc == 3:\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 20)\r\n            text1 = font.render('', False, (255, 255, 255))\r\n            text2 = font.render('', False, (255, 255, 255))\r\n            text3 = font.render('', False, (255, 255, 255))\r\n            text4 = font.render('', False, (255, 255, 255))\r\n\r\n        camera.update(player)\r\n        for sprite in all_sprites:\r\n            camera.apply(sprite)\r\n\r\n\r\nclass Sign(pygame.sprite.Sprite):\r\n    image = load_image('sign.png')\r\n    image = pygame.transform.scale(image, (51, 54))\r\n\r\n    def __init__(self, x_pos, y_pos):\r\n        super().__init__(player_group, sign_group)\r\n        self.image = Sign.image\r\n        self.rect = self.image.get_rect().move(x_pos, y_pos)\r\n\r\n\r\nclass TextWindow(pygame.sprite.Sprite):\r\n    image = load_image('text_window.png')\r\n    image = pygame.transform.scale(image, (600, 150))\r\n\r\n    def __init__(self, x_pos, y_pos):\r\n        super().__init__(player_group, text_group)\r\n        self.image = TextWindow.image\r\n        self.rect = self.image.get_rect().move(x_pos, y_pos)\r\n\r\n\r\nclass Letters(pygame.sprite.Sprite):\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        a = random.choice(['letter_a.png', 'letter_b.png', 'letter_v.png',\r\n                           'letter_g.png', 'letter_d.png'])\r\n        image_path = load_image(a)\r\n        self.image = pygame.transform.scale(image_path, (40, 60))\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n\r\n    def update(self):\r\n        self.rect.x -= 9\r\n        if pygame.sprite.collide_mask(self, player):\r\n            end_screen(1, False)\r\n            return\r\n\r\n\r\nclass Background(pygame.sprite.Sprite):\r\n    def __init__(self, image_path, size):\r\n        super().__init__()\r\n        self.image = load_image(image_path)\r\n        self.image = pygame.transform.scale(self.image, size)\r\n        self.rect = self.image.get_rect()\r\n        self.mask = pygame.mask.from_threshold(self.image, (237, 28, 36),\r\n                                               (1, 1, 1, 255))\r\n\r\n    def get_rgb(self, x, y):\r\n        pixel = pygame.PixelArray(self.image)\r\n        return self.image.unmap_rgb(pixel[x][y])\r\n\r\n\r\nclass Door(pygame.sprite.Sprite):\r\n    def __init__(self, pos_x, pos_y, act, tip):\r\n        super().__init__(all_sprites)\r\n        if act == 1:\r\n            image_path = load_image(f'door_a1_{tip}.png')\r\n        elif act == 2:\r\n            image_path = load_image('exit-enter_a2.png')\r\n        if tip == 1:\r\n            self.image = pygame.transform.scale(image_path, (120, 96))\r\n        elif tip == 2:\r\n            self.image = pygame.transform.scale(image_path, (112, 67))\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y + 20)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n\r\n\r\nclass Rectangle(pygame.sprite.Sprite):\r\n    def __init__(self, pos_x, pos_y, vx, vy, xx, yy, canDamage, image):\r\n        image_path = load_image(image)\r\n        image_path = pygame.transform.scale(image_path, (xx + 50, yy))\r\n        sprite_image = image_path\r\n        super().__init__(rectangle_group, all_sprites)\r\n        self.image = sprite_image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y + 20)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n        self.vx = vx\r\n        self.vy = vy\r\n        self.canDamage = canDamage\r\n\r\n    def update(self):\r\n        global rectangle_group, plat\r\n        self.rect.x += 2 * self.vx\r\n        self.rect.y += 2 * self.vy\r\n        if self.canDamage and not (pygame.sprite.collide_mask(player, plat)):\r\n            if pygame.sprite.collide_mask(self, player):\r\n                for j in rectangle_group:\r\n                    j.rect.x = 10000\r\n\r\n                rectangle_group = pygame.sprite.Group()\r\n                if player.loc == 4:\r\n                    end_screen(1, False)\r\n                elif player.loc == 11:\r\n                    end_screen(2, False)\r\n                elif player.loc == 15:\r\n                    end_screen(3, False)\r\n                return\r\n\r\n\r\nclass Button(pygame.sprite.Sprite):\r\n    def __init__(self, pos_x, pos_y, tip):\r\n        super().__init__(all_sprites)\r\n        if player.loc == 15:\r\n            image_path = load_image(f'button{tip}_{tip}.jpg')\r\n        else:\r\n            image_path = load_image(f'button{tip}.jpg')\r\n        self.image = pygame.transform.scale(image_path, (80, 80))\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y + 20)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n        self.tip = tip\r\n        self.tm = 300\r\n\r\n    def update(self):\r\n        if player.loc != 15:\r\n            if pygame.sprite.spritecollideany(self, player_group):\r\n                font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n                font = pygame.font.Font(font_path, 50)\r\n                screen.blit(\r\n                    font.render(str(self.tm // 100 + 1), True, (0, 0, 0)),\r\n                    (350, 0))\r\n                if self.tm // 100 + 1 == 0:\r\n                    if self.tip == ok_tip + 1:\r\n                        self.tm += 1\r\n                        player.key = True\r\n                    else:\r\n                        for j in button_group:\r\n                            j.rect.x = 20000\r\n                        end_screen(2, False)\r\n                self.tm -= 1\r\n            else:\r\n                self.tm = 300\r\n\r\n\r\nclass Pass(pygame.sprite.Sprite):\r\n    image = load_image('pass.png')\r\n    image = pygame.transform.scale(image, (79, 90))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = Pass.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n\r\n\r\nclass Chest(pygame.sprite.Sprite):\r\n    image = load_image('chest.jpg')\r\n    image = pygame.transform.scale(image, (60, 40))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = Chest.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n\r\n\r\nclass Defens(pygame.sprite.Sprite):\r\n    image = load_image('defens.jpg')\r\n    image = pygame.transform.scale(image, (200, 200))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = Defens.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n\r\n\r\nclass Apple(pygame.sprite.Sprite):\r\n    image = load_image('apple.jpg')\r\n    image = pygame.transform.scale(image, (20, 20))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = Apple.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n\r\n\r\nclass Traveler(pygame.sprite.Sprite):\r\n    image = load_image('traveler.jpg')\r\n    image = pygame.transform.scale(image, (70, 90))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = Traveler.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n\r\n\r\nclass Platform(pygame.sprite.Sprite):\r\n    image = load_image('platform.jpg')\r\n    image = pygame.transform.scale(image, (100, 90))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = Platform.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n\r\n\r\nclass WizardRus(pygame.sprite.Sprite):\r\n    image = load_image('wizardRus.png')\r\n    image = pygame.transform.scale(image, (80, 90))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__()\r\n        self.image = WizardRus.image\r\n        self.rect = self.image.get_rect().move(\r\n            pos_x, pos_y)\r\n        self.canRun = False\r\n        self.y = pos_y\r\n\r\n    def update(self):\r\n        if self.canRun:\r\n            self.rect.y -= 10\r\n            self.y -= 10\r\n            if self.y <= 300:\r\n                self.rect.y = -1000\r\n        if player.y <= 800:\r\n            self.canRun = True\r\n\r\n\r\nwizardRus = WizardRus(2000, 2000)\r\n\r\n\r\ndef act3_buttons():\r\n    global task_text, difference, question, buttons, a, b, tm\r\n    a = random.randint(0, 100)\r\n    difference = random.randint(1, 4)\r\n    b = difference - a\r\n    if b < 0:\r\n        question = f\"{a}{b}\"\r\n    else:\r\n        question = f\"{a} + {b}\"\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    font = pygame.font.Font(font_path, 50)\r\n    task_text = font.render(question, True, (0, 0, 0))\r\n    buttons = []\r\n    for j in range(1, 5):\r\n        buttons.append(\r\n            Button(x - player.x + j * 150, y - player.y + 200, j))\r\n    tm = 300\r\n    screen.blit(font.render(str(tm // 100 + 1), True, (0, 0, 0)),\r\n                (350, 0))\r\n\r\n\r\ndef results():\r\n    con = sqlite3.connect(\"data/bd.sqlite\")\r\n    cur = con.cursor()\r\n    result1 = cur.execute(\"\"\"SELECT time FROM player\r\n            WHERE act == 1 ORDER BY time\"\"\").fetchall()[:10]\r\n    result2 = cur.execute(\"\"\"SELECT time FROM player\r\n            WHERE act == 2 ORDER BY time\"\"\").fetchall()[:10]\r\n    result3 = cur.execute(\"\"\"SELECT time FROM player\r\n            WHERE act == 3 ORDER BY time\"\"\").fetchall()[:10]\r\n    con.close()\r\n\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif (event.type == pygame.KEYDOWN or event.type ==\r\n                  pygame.MOUSEBUTTONDOWN):\r\n                return\r\n        screen.blit(load_image(\"sybtit.png\"), (0, 0))\r\n        font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n        font = pygame.font.Font(font_path, 20)\r\n        y = 0\r\n        for res in result1:\r\n            screen.blit(font.render(res[0], True, (255, 255, 255)),\r\n                        (150, 100 + y))\r\n            y += 40\r\n        y = 0\r\n        for res in result2:\r\n            screen.blit(font.render(res[0], True, (255, 255, 255)),\r\n                        (350, 100 + y))\r\n            y += 40\r\n        y = 0\r\n        for res in result3:\r\n            screen.blit(font.render(res[0], True, (255, 255, 255)),\r\n                        (550, 100 + y))\r\n            y += 40\r\n        font = pygame.font.Font(font_path, 50)\r\n        text_1 = font.render(\"1 Act\", True, (255, 255, 255))\r\n        text_2 = font.render(\"2 Act\", True, (255, 255, 255))\r\n        text_3 = font.render(\"3 Act\", True, (255, 255, 255))\r\n        screen.blit(text_1, (150, 0))\r\n        screen.blit(text_2, (350, 0))\r\n        screen.blit(text_3, (550, 0))\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n\r\n\r\ndef sybtit_screen():\r\n    j = 0\r\n    sybtit = load_image('sybtit.png')\r\n    pygame.mixer.music.load(\"data/final_melody.ogg\")\r\n    pygame.mixer.music.set_volume(0.3)\r\n    pygame.mixer.music.play(loops=-1)\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n\r\n        screen.blit(sybtit, (0, -j))\r\n        pygame.display.flip()\r\n\r\n        j += 2\r\n        if j >= 1750:\r\n            return\r\n\r\n        clock.tick(FPS)\r\n\r\n\r\nclass Camera:\r\n    # зададим начальный сдвиг камеры\r\n    def __init__(self):\r\n        self.dx = 0\r\n        self.dy = 0\r\n\r\n    def apply(self, obj):\r\n        obj.rect.x += self.dx\r\n        obj.rect.y += self.dy\r\n\r\n    # позиционировать камеру на объекте target\r\n    def update(self, target):\r\n        self.dx = -(target.rect.x + target.rect.w // 2 - width // 2)\r\n        self.dy = -(target.rect.y + target.rect.h // 2 - height // 2)\r\n\r\n\r\nclock = pygame.time.Clock()\r\nFPS = 60\r\n# группы спрайтов\r\nall_sprites = pygame.sprite.Group()\r\nplayer_group = pygame.sprite.Group()\r\ndoor_group = pygame.sprite.Group()\r\nrectangle_group = pygame.sprite.Group()\r\nbutton_group = pygame.sprite.Group()\r\nword_group = pygame.sprite.Group()\r\nsign_group = pygame.sprite.Group()\r\ntext_group = pygame.sprite.Group()\r\n\r\ntime = datetime.datetime.now()\r\nx, y = 0, 0\r\nrect = Rectangle(20000, 20000, 0, 0, 10, 500, False, \"redrect.jpg\")\r\nimg = load_image('key.jpg')\r\nimg = pygame.transform.scale(img, (50, 50))\r\nsign1 = Sign(120, 20000)\r\nsign2 = Sign(658, 20000)\r\nsign3 = Sign(120, 20000)\r\nsign4 = Sign(658, 20000)\r\nsign5 = Sign(120, 20000)\r\nsign6 = Sign(658, 20000)\r\ntext_window = TextWindow(999999, 0)\r\n\r\nloc5 = 0\r\nloc11 = 0\r\nloc14 = 0\r\n\r\nruni = -600\r\ncamera = Camera()\r\napples = []\r\ntm = 0\r\ndifference = 0\r\n\r\ndoor2 = Door(20000, 20000, 2, 1)\r\ndoor3 = Door(20000, 20000, 2, 1)\r\nchest = Chest(20000, 20000)\r\nplat = Platform(20000, 20000)\r\npas = Pass(20000, 20000)\r\ntraveler = Traveler(20000, 20000)\r\n\r\nif __name__ == '__main__':\r\n    pygame.init()\r\n    pygame.display.set_caption('Entangled Tale')\r\n    size = width, height = 800, 500\r\n    screen = pygame.display.set_mode(size)\r\n    start_screen()\r\n\r\n    text1 = pygame.font.Font(os.path.join(\"data/fonts\", \"comic.ttf\"),\r\n                             20).render('', False, (255, 255, 255))\r\n    text2 = pygame.font.Font(os.path.join(\"data/fonts\", \"comic.ttf\"),\r\n                             20).render('', False, (255, 255, 255))\r\n    text3 = pygame.font.Font(os.path.join(\"data/fonts\", \"comic.ttf\"),\r\n                             20).render('', False, (255, 255, 255))\r\n    text4 = pygame.font.Font(os.path.join(\"data/fonts\", \"comic.ttf\"),\r\n                             20).render('', False, (255, 255, 255))\r\n    i = 0\r\n    running = True\r\n    while running:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                running = False\r\n            if event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_p:\r\n                    menu()\r\n                if event.key == pygame.K_e and runi == -600:\r\n                    runi = 300\r\n            if event.type == pygame.KEYUP:\r\n                player.stop()\r\n\r\n        if runi != -600:\r\n            player.run = 9\r\n        if runi < 0:\r\n            player.run = 5\r\n        if player.loc <= 5:\r\n            screen.fill((2, 0, 0))\r\n        elif 5 < player.loc <= 12:\r\n            screen.fill((34, 177, 76))\r\n        else:\r\n            screen.fill((153, 217, 234))\r\n        keys = pygame.key.get_pressed()\r\n\r\n        # Обновление игровых объектов\r\n        player.update(keys[pygame.K_UP], keys[pygame.K_DOWN],\r\n                      keys[pygame.K_LEFT], keys[pygame.K_RIGHT])\r\n        player.update(keys[pygame.K_w], keys[pygame.K_s],\r\n                      keys[pygame.K_a], keys[pygame.K_d])\r\n        # обновляем положение всех спрайтов\r\n        for sprite in all_sprites:\r\n            camera.apply(sprite)\r\n        camera.update(player)\r\n        wizardRus.update()\r\n        all_sprites.draw(screen)\r\n        if player.loc == 7:\r\n            screen.blit(task_text, (x - player.x + 780, y - player.y + 160))\r\n        if not player.key and pygame.sprite.collide_mask(player, chest):\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 40)\r\n            task_text = font.render(\"Нужен ключ!\", True, (255, 255, 255))\r\n            screen.blit(task_text, (300, 0))\r\n        if pygame.sprite.collide_mask(player, traveler):\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 25)\r\n            if player.appls not in [5, 6]:\r\n                task_text = font.render(\"Принеси мне 5 яблок, \"\r\n                                        \"в обмен на информацию\", True,\r\n                                        (255, 255, 255))\r\n            else:\r\n                task_text = font.render(\r\n                    \"Выпей воды из озера и можешь идти спокойно\", True,\r\n                    (255, 255, 255))\r\n                player.appls = 6\r\n\r\n            screen.blit(task_text, (100, 0))\r\n        if (not player.pas and pygame.sprite.collide_mask(player, pas) and\r\n                player.loc == 6):\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 40)\r\n            task_text = font.render(\"Нужна монета!\", True, (255, 255, 255))\r\n            screen.blit(task_text, (300, 0))\r\n        if player.loc == 13 and background.get_rgb(player.x + player.run,\r\n                                                   player.y + player.run) == (\r\n                187, 122, 87) \\\r\n                and (187, 122, 87) in player.stena:\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 40)\r\n            task_text = font.render(\"Дальше нельзя\", True, (0, 0, 0))\r\n            screen.blit(task_text, (300, 0))\r\n        player_group.draw(screen)\r\n        if runi > -600:\r\n            runi -= 1\r\n\r\n        if player.loc == 2:\r\n            i += 1\r\n            if i % 40 == 0:\r\n                letter = Letters(x - player.x + 2500,\r\n                                 random.randint(y - player.y + 450,\r\n                                                y - player.y + 660))\r\n                word_group.add(letter)\r\n            word_group.update()\r\n            word_group.draw(screen)\r\n\r\n        screen.blit(pygame.transform.scale(load_image(\"run.png\"), (40, 40)),\r\n                    (5, 5))\r\n        font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n        if runi == -600:\r\n            txt = pygame.font.Font(font_path, 35).render(f\"active\", True,\r\n                                                         (255, 0, 0))\r\n            screen.blit(txt, (50, 0))\r\n        else:\r\n            txt = pygame.font.Font(font_path, 30).render(\r\n                f\"{(runi + 660) // 60}\", True, (255, 0, 0))\r\n            screen.blit(txt, (50, 5))\r\n\r\n        if player.key:\r\n            screen.blit(img, (750, 0))\r\n\r\n        if player.appls != 6:\r\n            for i in range(player.appls):\r\n                screen.blit(img, (770 - i * 30, 0))\r\n\r\n        if player.loc == 4:\r\n            if 200 <= loc5 <= 1000 and loc5 % 200 == 0:\r\n                try:\r\n                    n = random.randint(-1, 3) * 200\r\n                    while n == m:\r\n                        n = random.randint(-1, 3) * 200\r\n                    m = n\r\n                except Exception:\r\n                    m = random.randint(-1, 3) * 200\r\n                rect.rect.x = 20000\r\n                rect = Rectangle(x - player.x + m,\r\n                                 y - player.y - 78, 0, 0, 450,\r\n                                 519, False, \"warning rect.png\")\r\n            if 340 <= loc5 <= 1000 and loc5 % 200 == 140:\r\n                rect.rect.x = 20000\r\n                rect = Rectangle(x - player.x + m,\r\n                                 y - player.y - 78, 0, 0, 450,\r\n                                 519, True, \"grayrect.jpg\")\r\n            if 1000 <= loc5 <= 3000 and loc5 % 100 == 0:\r\n                rect.rect.x = 20000\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(-100, 150), -3, 0, 10,\r\n                          random.randint(50, 300), True, \"redrect.jpg\")\r\n            if 3200 <= loc5 <= 4000 and loc5 % 200 == 0:\r\n                n = random.randint(-1, 3) * 200\r\n                while n == m:\r\n                    n = random.randint(-1, 3) * 200\r\n                m = n\r\n                rect.rect.x = 20000\r\n                rect = Rectangle(x - player.x + m,\r\n                                 y - player.y - 78, 0, 0, 450,\r\n                                 519, False, \"warning rect.png\")\r\n            if 3200 <= loc5 <= 4140 and loc5 % 200 == 140:\r\n                rect.rect.x = 20000\r\n                rect = Rectangle(x - player.x + m,\r\n                                 y - player.y - 78, 0, 0, 450,\r\n                                 519, True, \"grayrect.jpg\")\r\n            if loc5 == 4200:\r\n                rect.rect.x = 20000\r\n            if loc5 == 4400:\r\n                door = Door(x - player.x + 350, y - player.y + 150, 1, 1)\r\n                player.loc = 5\r\n            loc5 += 1\r\n            rectangle_group.update()\r\n        if player.loc == 11:\r\n            if loc11 <= 2000 and loc11 % 100 == 0:\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(-50, 200), -3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"greenrect2.jpg\")\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(200, 450), -3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"greenrect2.jpg\")\r\n            if 2300 <= loc11 <= 4000 and loc11 % 100 == 0:\r\n                Rectangle(x - player.x + random.randint(-100, 300),\r\n                          y - player.y - 200, 0, 1, 20,\r\n                          random.randint(100, 300),\r\n                          True, \"greenrect1.jpg\")\r\n                Rectangle(x - player.x + random.randint(300, 800),\r\n                          y - player.y - 200, 0, 1, 20,\r\n                          random.randint(100, 300),\r\n                          True, \"greenrect1.jpg\")\r\n            if 4300 <= loc11 <= 6000 and loc11 % 100 == 0:\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(-50, 200), -3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"greenrect2.jpg\")\r\n                Rectangle(x - player.x - 300,\r\n                          y - player.y + random.randint(200, 450), 3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"greenrect2.jpg\")\r\n            if loc11 == 6400:\r\n                door = Door(x - player.x + 350, y - player.y + 150, 1, 1)\r\n                player.loc = 12\r\n            loc11 += 1\r\n            rectangle_group.update()\r\n\r\n        if player.loc == 15:\r\n            if loc14 == 200:\r\n                p = [random.randint(0, 600),\r\n                     random.randint(0, 300)]\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 400:\r\n                plat.rect.x = 20000\r\n                rect = Rectangle(-200, -200, 0, 0, 2000, 2000, True,\r\n                                 \"damage_platform.jpg\")\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 500:\r\n                plat.rect.x = 20000\r\n                rect.rect.x = 20000\r\n            elif loc14 == 600:\r\n                act3_buttons()\r\n            if 600 <= loc14 <= 900:\r\n                tm -= 1\r\n                font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n                font = pygame.font.Font(font_path, 50)\r\n                screen.blit(task_text, (300, 0))\r\n                screen.blit(font.render(str(tm // 100 + 1), True, (0, 0, 0)),\r\n                            (650, 0))\r\n            if loc14 == 900:\r\n                for j in buttons:\r\n                    if pygame.sprite.collide_mask(player,\r\n                                                  j) and j.tip == difference:\r\n                        for k in buttons:\r\n                            k.rect.x = 20000\r\n                            buttons = []\r\n                        break\r\n                else:\r\n                    end_screen(3, False)\r\n\r\n            if loc14 == 1000:\r\n                p = [random.randint(0, 600),\r\n                     random.randint(0, 300)]\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 1200:\r\n                plat.rect.x = 20000\r\n                rect = Rectangle(-200, -200, 0, 0, 2000, 2000, True,\r\n                                 \"damage_platform.jpg\")\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 1300:\r\n                plat.rect.x = 20000\r\n                rect.rect.x = 20000\r\n            if 1400 <= loc14 <= 2000 and loc14 % 100 == 0:\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(-50, 200), -3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"damage_platform.jpg\")\r\n                Rectangle(x - player.x - 300,\r\n                          y - player.y + random.randint(200, 450), 3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"damage_platform.jpg\")\r\n\r\n            if loc14 == 2100:\r\n                p = [random.randint(0, 600),\r\n                     random.randint(0, 300)]\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 2300:\r\n                plat.rect.x = 20000\r\n                rect = Rectangle(-200, -200, 0, 0, 2000, 2000, True,\r\n                                 \"damage_platform.jpg\")\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 2400:\r\n                plat.rect.x = 20000\r\n                rect.rect.x = 20000\r\n            elif loc14 == 2500:\r\n                act3_buttons()\r\n            if 2500 <= loc14 <= 2800:\r\n                tm -= 1\r\n                font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n                font = pygame.font.Font(font_path, 50)\r\n                screen.blit(task_text, (300, 0))\r\n                screen.blit(font.render(str(tm // 100 + 1), True, (0, 0, 0)),\r\n                            (650, 0))\r\n            if loc14 == 2800:\r\n                for j in buttons:\r\n                    if pygame.sprite.collide_mask(player,\r\n                                                  j) and j.tip == difference:\r\n                        for k in buttons:\r\n                            k.rect.x = 20000\r\n                            buttons = []\r\n                        break\r\n                else:\r\n                    end_screen(3, False)\r\n            if 3000 <= loc14 <= 3500 and loc14 % 100 == 0:\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(-50, 200), -3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"damage_platform.jpg\")\r\n                Rectangle(x - player.x - 300,\r\n                          y - player.y + random.randint(200, 450), 3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"damage_platform.jpg\")\r\n\r\n            if 3500 <= loc14 <= 4000 and loc14 % 100 == 0:\r\n                Rectangle(x - player.x - 300,\r\n                          y - player.y + random.randint(-50, 200), 3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"damage_platform.jpg\")\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(200, 450), -3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"damage_platform.jpg\")\r\n            if loc14 == 4100:\r\n                p = [random.randint(0, 600),\r\n                     random.randint(0, 300)]\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 4300:\r\n                plat.rect.x = 20000\r\n                rect = Rectangle(-200, -200, 0, 0, 2000, 2000, True,\r\n                                 \"damage_platform.jpg\")\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 4400:\r\n                plat.rect.x = 20000\r\n                rect.rect.x = 20000\r\n            elif loc14 == 4500:\r\n                act3_buttons()\r\n            if 4500 <= loc14 <= 4800:\r\n                tm -= 1\r\n                font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n                font = pygame.font.Font(font_path, 50)\r\n                screen.blit(task_text, (300, 0))\r\n                screen.blit(font.render(str(tm // 100 + 1), True, (0, 0, 0)),\r\n                            (650, 0))\r\n            if loc14 == 4800:\r\n                for j in buttons:\r\n                    if pygame.sprite.collide_mask(player,\r\n                                                  j) and j.tip == difference:\r\n                        for k in buttons:\r\n                            k.rect.x = 20000\r\n                            buttons = []\r\n                        break\r\n                else:\r\n                    end_screen(3, False)\r\n            if 5000 <= loc14 <= 5500 and loc14 % 100 == 0:\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(-50, 200), -3, 0,\r\n                          random.randint(100, 300),\r\n                          13, True, \"damage_platform.jpg\")\r\n                Rectangle(x - player.x - 300,\r\n                          y - player.y + random.randint(200, 450), 3, 0,\r\n                          random.randint(100, 300),\r\n                          13, True, \"damage_platform.jpg\")\r\n            if 5500 <= loc14 <= 6000 and loc14 % 100 == 0:\r\n                Rectangle(x - player.x - 300,\r\n                          y - player.y + random.randint(-50, 200), 3, 0,\r\n                          random.randint(100, 300),\r\n                          13, True, \"damage_platform.jpg\")\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(200, 450), -3, 0,\r\n                          random.randint(100, 300),\r\n                          13, True, \"damage_platform.jpg\")\r\n            if loc14 == 6200:\r\n                door = Door(x - player.x + 100, y - player.y + 150, 1, 1)\r\n                player.loc = 16\r\n\r\n            loc14 += 1\r\n            rectangle_group.update()\r\n\r\n        if player.loc == 3:\r\n            sign_group.update()\r\n            screen.blit(text1, (110, 10))\r\n            screen.blit(text2, (110, 40))\r\n            screen.blit(text3, (110, 70))\r\n            screen.blit(text4, (110, 100))\r\n        button_group.update()\r\n        door_group.draw(screen)\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/main.py b/main.py
---- a/main.py	(revision 4836f97ea4bf2bb0ccb20f4a6ae0c53e668070b1)
-+++ b/main.py	(date 1704911972146)
-@@ -160,9 +160,9 @@
-                             all_sprites = pygame.sprite.Group()
-                             player_group = pygame.sprite.Group()
-                             rectangle_group = pygame.sprite.Group()
--                            background = Background('a2_m6.jpg', (1700, 1000))
-+                            background = Background('a2_m6.png', (1667, 1000))
-                             all_sprites.add(background)
--                            player = Player(850, 500, 2)
-+                            player = Player(850, 556, 2)
-                             player.loc = 11
-                             door.rect.x = 20000
-                             door2.rect.x = 20000
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"math game 2 act's processing\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/data/a2_m5.png\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/data/a2_m5.png\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"4119b603b50f1cfc9f75b08b3bdeb4df26e5d3ba\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;mario12508&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"94ac7607-9d72-4b25-a7a3-c40e081cfed5\" />\r\n        <option name=\"url\" value=\"https://github.com/mario12508/Entangled-Tale-game\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZacNkP8bUFBkbLijEbVNjAOYsi\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;Python.main (2).executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.main (4).executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.test.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Mar1o/PycharmProjects/Entangled Tale/data/fonts&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\\data\\fonts\" />\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\\data\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Entangled Tale\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.11 (Entangled Tale)\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-7a29c1521ef0-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.298\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"\" />\r\n      <created>1702663593127</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702663593127</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"start\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702663798679</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702663798679</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"описание Entangled Tale.txt\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702664023442</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702664023442</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"сюжет акта 1\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702747008794</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702747008794</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"animations main character\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702759253894</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702759253894</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"animations main character\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702759279832</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702759279832</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"exit-enter_a1\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702812381417</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702812381417</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"letters and doors fix\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702825954315</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702825954315</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"first location done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702839963644</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702839963644</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"second location drawn\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702850812808</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702850812808</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"second location drawn\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702850825452</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702850825452</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"third location design done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702920190819</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702920190819</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"third location design done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702920196004</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702920196004</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"third location design done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703013610372</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703013610372</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"third location design done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703013631006</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703013631006</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"bugs fix\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703013686583</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703013686583</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"boss location processed\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703104830514</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703104830514</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"boss location processed\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703105401348</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703105401348</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"5 location\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703339118774</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703339118775</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"5 location\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703347045969</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703347045969</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"5 location sign\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703520545467</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703520545467</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"processing\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703690488357</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703690488357</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"a2_m2 done?\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704489862370</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704489862370</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"maze done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704663334955</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704663334955</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"maze done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704663345533</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704663345533</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"some pictures\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704735930288</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704735930288</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"some pictures\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704735954576</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704735954576</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"math game 2 act's processing\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704745006855</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704745006855</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"28\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"start\" />\r\n    <MESSAGE value=\"описание Entangled Tale.txt\" />\r\n    <MESSAGE value=\"сюжет акта 1\" />\r\n    <MESSAGE value=\"animations main character\" />\r\n    <MESSAGE value=\"exit-enter_a1\" />\r\n    <MESSAGE value=\"letters and doors fix\" />\r\n    <MESSAGE value=\"Merge remote-tracking branch 'origin/main'\" />\r\n    <MESSAGE value=\"first location done\" />\r\n    <MESSAGE value=\"second location drawn\" />\r\n    <MESSAGE value=\"third location design done\" />\r\n    <MESSAGE value=\"bugs fix\" />\r\n    <MESSAGE value=\"boss location processed\" />\r\n    <MESSAGE value=\"5 location\" />\r\n    <MESSAGE value=\"5 location sign\" />\r\n    <MESSAGE value=\"Add files via upload\" />\r\n    <MESSAGE value=\"processing\" />\r\n    <MESSAGE value=\"a2_m2 done?\" />\r\n    <MESSAGE value=\"maze done\" />\r\n    <MESSAGE value=\"some pictures\" />\r\n    <MESSAGE value=\"math game 2 act's processing\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"math game 2 act's processing\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 4836f97ea4bf2bb0ccb20f4a6ae0c53e668070b1)
-+++ b/.idea/workspace.xml	(date 1704911301932)
-@@ -6,7 +6,6 @@
-   <component name="ChangeListManager">
-     <list default="true" id="8b6f0fdc-2b1f-450a-a0fe-df5878d69a75" name="Changes" comment="math game 2 act's processing">
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/data/a2_m5.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/a2_m5.png" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-@@ -24,7 +23,7 @@
-   <component name="Git.Settings">
-     <option name="RECENT_BRANCH_BY_REPOSITORY">
-       <map>
--        <entry key="$PROJECT_DIR$" value="4119b603b50f1cfc9f75b08b3bdeb4df26e5d3ba" />
-+        <entry key="$PROJECT_DIR$" value="ebd7927054d5b8e060684a8d555e47c853734464" />
-       </map>
-     </option>
-     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-@@ -52,21 +51,21 @@
-     <option name="hideEmptyMiddlePackages" value="true" />
-     <option name="showLibraryContents" value="true" />
-   </component>
--  <component name="PropertiesComponent">{
--  &quot;keyToString&quot;: {
--    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
--    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
--    &quot;Python.main (2).executor&quot;: &quot;Run&quot;,
--    &quot;Python.main (4).executor&quot;: &quot;Run&quot;,
--    &quot;Python.main.executor&quot;: &quot;Run&quot;,
--    &quot;Python.test.executor&quot;: &quot;Run&quot;,
--    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
--    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
--    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
--    &quot;last_opened_file_path&quot;: &quot;C:/Users/Mar1o/PycharmProjects/Entangled Tale/data/fonts&quot;,
--    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;
-+  <component name="PropertiesComponent"><![CDATA[{
-+  "keyToString": {
-+    "ASKED_ADD_EXTERNAL_FILES": "true",
-+    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
-+    "Python.main (2).executor": "Run",
-+    "Python.main (4).executor": "Run",
-+    "Python.main.executor": "Run",
-+    "Python.test.executor": "Run",
-+    "RunOnceActivity.OpenProjectViewOnStart": "true",
-+    "RunOnceActivity.ShowReadmeOnStart": "true",
-+    "git-widget-placeholder": "main",
-+    "last_opened_file_path": "C:/Users/Mar1o/PycharmProjects/Entangled Tale/data/fonts",
-+    "settings.editor.selected.configurable": "com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable"
-   }
--}</component>
-+}]]></component>
-   <component name="RecentsManager">
-     <key name="CopyFile.RECENT_KEYS">
-       <recent name="C:\Users\Mar1o\PycharmProjects\Entangled Tale\data\fonts" />
-@@ -333,7 +332,15 @@
-       <option name="project" value="LOCAL" />
-       <updated>1704745006855</updated>
-     </task>
--    <option name="localTasksCounter" value="28" />
-+    <task id="LOCAL-00028" summary="math game 2 act's processing">
-+      <option name="closed" value="true" />
-+      <created>1704897684849</created>
-+      <option name="number" value="00028" />
-+      <option name="presentableId" value="LOCAL-00028" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1704897684849</updated>
-+    </task>
-+    <option name="localTasksCounter" value="29" />
-     <servers />
-   </component>
-   <component name="Vcs.Log.Tabs.Properties">
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_10_01_2024_20_56_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_01_2024_20_56_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_01_2024_20_56_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_01_2024_20_56_[Changes]/shelved.patch	(revision bf103e7da4e87f70e8d17bc78f53fcd211f7b7ca)
+++ /dev/null	(revision bf103e7da4e87f70e8d17bc78f53fcd211f7b7ca)
@@ -1,122 +0,0 @@
-Index: main.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import datetime\r\nimport os\r\nimport random\r\nimport sys\r\n\r\nimport pygame\r\nimport sqlite3\r\n\r\n\r\ndef load_image(name, colorkey=None):\r\n    fullname = os.path.join('data', name)\r\n    # если файл не существует, то выходим\r\n    if not os.path.isfile(fullname):\r\n        print(f\"Файл с изображением '{fullname}' не найден\")\r\n        sys.exit()\r\n    image = pygame.image.load(fullname)\r\n    if colorkey is not None:\r\n        if colorkey == -1:\r\n            colorkey = image.get_at((0, 0))\r\n        image.set_colorkey(colorkey)\r\n    return image\r\n\r\n\r\ndef newDialog():\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    font = pygame.font.Font(font_path, 20)\r\n    render_fraze_1 = font.render('', True, (255, 255, 255))\r\n    render_fraze_2 = font.render('', True, (255, 255, 255))\r\n    render_fraze_3 = font.render('', True, (255, 255, 255))\r\n    return render_fraze_1, render_fraze_2, render_fraze_3\r\n\r\n\r\ndef mathGame(m):\r\n    global background, all_sprites, player_group, player, door, \\\r\n        door_group, rectangle_group, loc5, loc11, loc14, x, y\r\n    fon = pygame.transform.scale(load_image(m), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n\r\n    a = random.randint(0, 100)\r\n    difference = random.randint(0, 9)\r\n    b = difference - a\r\n    if m == 'a1_m4.png':\r\n        fraze_1 = 'Я великий маг этого подземелья,'\r\n        fraze_2 = 'и я никому не дам ходить по нему'\r\n        fraze_3 = 'без моего разрешения!'\r\n    elif m == 'a2_m5.jpg':\r\n        fraze_1 = 'Вот мы снова встретились,'\r\n        fraze_2 = 'и в этот раз ты в моем лесу'\r\n        fraze_3 = 'дальше я тебя не пропущу!'\r\n    else:\r\n        fraze_1 = 'Вот мы снова встретились,'\r\n        fraze_2 = 'и в этот раз ты далеко прошел'\r\n        fraze_3 = 'дальше я тебя не уйдешь!'\r\n\r\n    screen.fill((0, 0, 0))\r\n    screen.blit(fon, (0, 0))\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    font = pygame.font.Font(font_path, 20)\r\n    render_fraze_1, render_fraze_2, render_fraze_3 = newDialog()\r\n\r\n    win = False\r\n    i = 1\r\n    k = 0\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif event.type == pygame.KEYDOWN:\r\n                if ((event.key == pygame.K_z or event.key == pygame.K_RETURN)\r\n                        and k == 0):\r\n                    screen.fill((0, 0, 0))\r\n                    screen.blit(fon, (0, 0))\r\n                    if b < 0:\r\n                        question = f\"{a}{b}\"\r\n                    else:\r\n                        question = f\"{a} + {b}\"\r\n                    fraze_1 = 'Но ты можешь попытать удачу,'\r\n                    fraze_2 = 'и решить мою задачу'\r\n                    fraze_3 = 'сколько будет: ' + question\r\n                    render_fraze_1, render_fraze_2, render_fraze_3 = (\r\n                        newDialog())\r\n                    i = 1\r\n                    k = 1\r\n                elif 48 <= event.key <= 58 and k == 1:\r\n                    fraze_1 = event.key - 48\r\n                    render_fraze_1, render_fraze_2, render_fraze_3 = (\r\n                        newDialog())\r\n                    if fraze_1 == difference:\r\n                        screen.fill((0, 0, 0))\r\n                        screen.blit(fon, (0, 0))\r\n                        if m == 'a1_m4.png':\r\n                            fraze_1 = 'Я вижу, что ты неплох в математике'\r\n                            fraze_2 = 'на этот раз я тебя пропускаю,'\r\n                            fraze_3 = 'но мы еще встретимся!'\r\n                        elif m == 'a2_m5.jpg':\r\n                            fraze_1 = 'Я вижу, что ты до сих пор неплох в \\\r\n                                       математике'\r\n                            fraze_2 = 'в этот раз я тебя пропускаю,'\r\n                            fraze_3 = 'но еще одна наша встреча неизбежна!'\r\n                        else:\r\n                            fraze_1 = 'Я вижу, что ты также силен в математике'\r\n                            fraze_2 = 'на этот раз покажи себя в равном бою,'\r\n                            fraze_3 = 'с истенным магом!'\r\n                        win = True\r\n                    else:\r\n                        screen.fill((0, 0, 0))\r\n                        screen.blit(fon, (0, 0))\r\n                        fraze_1 = 'Я вижу, что ты слаб,'\r\n                        fraze_2 = 'возвращайся,'\r\n                        fraze_3 = 'лишь когда будешь достоин'\r\n                    i = 1\r\n                    k = 2\r\n                elif ((event.key == pygame.K_z or event.key == pygame.K_RETURN)\r\n                      and k == 2):\r\n                    if win:\r\n                        if m == 'a1_m4.png':\r\n                            all_sprites = pygame.sprite.Group()\r\n                            player_group = pygame.sprite.Group()\r\n                            rectangle_group = pygame.sprite.Group()\r\n                            background = Background('a1_m5.png', (839, 1300))\r\n                            all_sprites.add(background)\r\n                            sign1.rect.y = 1000\r\n                            sign2.rect.y = 1000\r\n                            sign3.rect.y = 700\r\n                            sign4.rect.y = 700\r\n                            sign5.rect.y = 400\r\n                            sign6.rect.y = 400\r\n                            all_sprites.add(sign1, sign2, sign3, sign4, sign5,\r\n                                            sign6)\r\n                            sign_group.add(sign1, sign2, sign3, sign4, sign5,\r\n                                           sign6)\r\n                            player = Player(419, 1100, 1)\r\n                            door = Door(362, 30, 1, 2)\r\n                            player.loc = 3\r\n                            loc5 = 0\r\n                        elif m == 'a2_m5.jpg':\r\n                            all_sprites = pygame.sprite.Group()\r\n                            player_group = pygame.sprite.Group()\r\n                            rectangle_group = pygame.sprite.Group()\r\n                            background = Background('a2_m6.jpg', (1700, 1000))\r\n                            all_sprites.add(background)\r\n                            player = Player(850, 500, 2)\r\n                            player.loc = 11\r\n                            door.rect.x = 20000\r\n                            door2.rect.x = 20000\r\n                            door3.rect.x = 20000\r\n                            x = player.x\r\n                            y = player.y\r\n                            loc11 = 0\r\n                            pygame.mixer.music.load(\"data/\"\r\n                                                    \"mus_undynetruetheme.ogg\")\r\n                            pygame.mixer.music.set_volume(0.3)\r\n                            pygame.mixer.music.play(loops=-1)\r\n                        else:\r\n                            all_sprites = pygame.sprite.Group()\r\n                            player_group = pygame.sprite.Group()\r\n                            rectangle_group = pygame.sprite.Group()\r\n                            background = Background('a3_m3.jpg', (2210, 1300))\r\n                            all_sprites.add(background)\r\n                            player = Player(1105, 650, 3)\r\n                            player.loc = 15\r\n                            door.rect.x = 20000\r\n                            x = player.x\r\n                            y = player.y\r\n                            loc14 = 0\r\n                            pygame.mixer.music.load(\"data/act3_boss.ogg\")\r\n                            pygame.mixer.music.set_volume(0.3)\r\n                            pygame.mixer.music.play(loops=-1)\r\n                        camera.update(player)\r\n                        for sprite in all_sprites:\r\n                            camera.apply(sprite)\r\n                        return\r\n                    else:\r\n                        if m == 'a1_m4.png':\r\n                            end_screen(1, False)\r\n                        elif m == 'a2_m5.jpg':\r\n                            end_screen(2, False)\r\n                        else:\r\n                            end_screen(3, False)\r\n                        return\r\n\r\n        if i <= len(fraze_1):\r\n            render_fraze_1 = font.render(fraze_1[:i], True, (255, 255, 255))\r\n        elif i <= len(fraze_1) + len(fraze_2):\r\n            render_fraze_2 = font.render(fraze_2[:i - len(fraze_1)], True,\r\n                                         (255, 255, 255))\r\n        elif i <= len(fraze_1) + len(fraze_2) + len(fraze_3):\r\n            render_fraze_3 = font.render(\r\n                fraze_3[:i - len(fraze_1) - len(fraze_2)], True,\r\n                (255, 255, 255))\r\n        i += 1\r\n        screen.blit(render_fraze_1, (230, 85))\r\n        screen.blit(render_fraze_2, (230, 115))\r\n        screen.blit(render_fraze_3, (230, 145))\r\n        player_group.draw(screen)\r\n        pygame.display.flip()\r\n        clock.tick(20)\r\n        clock.tick(FPS)\r\n\r\n\r\ndef terminate():\r\n    pygame.quit()\r\n    sys.exit()\r\n\r\n\r\ndef start_screen():\r\n    fon = pygame.transform.scale(load_image('fon.jpg'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(0.7)\r\n    fon = pygame.transform.scale(load_image('blackfon.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif (event.type == pygame.KEYDOWN or event.type ==\r\n                  pygame.MOUSEBUTTONDOWN):\r\n                if True:\r\n                    act1()\r\n                    return\r\n        clock.tick(FPS)\r\n\r\n\r\ndef end_screen(n, winOrdie):\r\n    fon = pygame.transform.scale(load_image('gameover.jpg'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    font = pygame.font.Font(font_path, 35)\r\n    tm = (datetime.datetime.now() - time).total_seconds()\r\n    t2 = font.render(f\"{int(tm // 60)} min {int(tm - (tm // 60) * 60)} sec\",\r\n                     True, (0, 0, 0))\r\n\r\n    if winOrdie:\r\n        t = font.render(f\"Win\", True, (0, 0, 0))\r\n\r\n        con = sqlite3.connect(\"data/bd.sqlite\")\r\n        cur = con.cursor()\r\n        cur.execute(\r\n            f\"INSERT INTO player(act, time) VALUES({n - 1}, '{int(tm // 60)} \"\r\n            f\"min {int(tm - (tm // 60) * 60)} sec')\")\r\n        con.commit()\r\n        con.close()\r\n    else:\r\n        t = font.render(f\"Lose\", True, (0, 0, 0))\r\n\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif (event.type == pygame.KEYDOWN or event.type ==\r\n                  pygame.MOUSEBUTTONDOWN):\r\n                if True:\r\n                    if n == 1:\r\n                        act1()\r\n                    elif n == 2:\r\n                        act2()\r\n                    elif n == 3:\r\n                        act3()\r\n                    else:\r\n                        sybtit_screen()\r\n                        results()\r\n                        act1()\r\n                    return\r\n\r\n        screen.blit(t, (300, 200))\r\n        screen.blit(t2, (300, 300))\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n\r\n\r\ndef act1():\r\n    global all_sprites, player_group, player, background, door, door_group, \\\r\n        i, word_group, x, y, loc5, time, runi\r\n    time = datetime.datetime.now()\r\n    fon = pygame.transform.scale(load_image('act1.png'), (800, 500))\r\n    pygame.mixer.music.load(\"data/start_sound.ogg\")\r\n    pygame.mixer.music.set_volume(0.3)\r\n    pygame.mixer.music.play(loops=-1)\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n    all_sprites = pygame.sprite.Group()\r\n    player_group = pygame.sprite.Group()\r\n    door_group = pygame.sprite.Group()\r\n    background = Background('a1_m1.png', (1360, 760))\r\n    door = Door(1180, 440, 1, 1)\r\n    all_sprites.add(background)\r\n    door_group.add(door)\r\n    pygame.mixer.music.load(\"data/act1_main.ogg\")\r\n    pygame.mixer.music.set_volume(0.3)\r\n    pygame.mixer.music.play(loops=-1)\r\n    player = Player(290, 470, 1)\r\n    word_group = pygame.sprite.Group()\r\n    x, y = 0, 0\r\n    loc5 = 0\r\n    i = 0\r\n    runi = -600\r\n    camera.update(player)\r\n    for sprite in all_sprites:\r\n        camera.apply(sprite)\r\n\r\n\r\ndef act2():\r\n    global all_sprites, player_group, player, background, door, \\\r\n        door_group, time, x, y, door2, door3, pas, loc11, img, runi\r\n    time = datetime.datetime.now()\r\n    fon = pygame.transform.scale(load_image('act2.png'), (800, 500))\r\n    pygame.mixer.music.load(\"data/start_sound.ogg\")\r\n    pygame.mixer.music.set_volume(0.3)\r\n    pygame.mixer.music.play(loops=-1)\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n    all_sprites = pygame.sprite.Group()\r\n    player_group = pygame.sprite.Group()\r\n    door_group = pygame.sprite.Group()\r\n    background = Background('a2_m1.png', (2060, 1500))\r\n    door = Door(350, 840, 2, 1)\r\n    door2 = Door(1528, 540, 2, 1)\r\n    door3 = Door(350, 540, 2, 1)\r\n    all_sprites.add(background)\r\n    door_group.add(door, door2, door3)\r\n    pas = Pass(870, 700)\r\n    img = load_image('key.jpg')\r\n    img = pygame.transform.scale(img, (50, 50))\r\n    pygame.mixer.music.load(\"data/a2_m1.mp3\")\r\n    pygame.mixer.music.set_volume(0.3)\r\n    pygame.mixer.music.play(loops=-1)\r\n    x, y = 0, 0\r\n    loc11 = 0\r\n    runi = -600\r\n    player = Player(730, 730, 2)\r\n    player.loc = 6\r\n    camera.update(player)\r\n    for sprite in all_sprites:\r\n        camera.apply(sprite)\r\n\r\n\r\ndef act3():\r\n    global all_sprites, player_group, player, background, door, door_group, \\\r\n        i, x, y, time, defen, traveler, apples, runi\r\n    fon = pygame.transform.scale(load_image('act3.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.mixer.music.load(\"data/start_sound.ogg\")\r\n    pygame.mixer.music.set_volume(0.3)\r\n    pygame.mixer.music.play(loops=-1)\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n    all_sprites = pygame.sprite.Group()\r\n    player_group = pygame.sprite.Group()\r\n    door_group = pygame.sprite.Group()\r\n    background = Background('a3_m1.jpg', (10000, 6000))\r\n    all_sprites.add(background)\r\n    pygame.mixer.music.load(\"data/act3_main.ogg\")\r\n    pygame.mixer.music.set_volume(0.3)\r\n    pygame.mixer.music.play(loops=-1)\r\n    door = Door(1950, 2750, 1, 1)\r\n    door_group.add(door)\r\n    player = Player(1650, 1200, 3)\r\n    traveler = Traveler(5000, 3600)\r\n    player.loc = 13\r\n    runi = -600\r\n    defen = Defens(2350, 2450)\r\n    apples = [\r\n        Apple(6000, 3000),\r\n        Apple(6400, 2500),\r\n        Apple(4800, 3000),\r\n        Apple(6100, 1900),\r\n        Apple(8000, 2800)\r\n    ]\r\n\r\n    camera.update(player)\r\n    for sprite in all_sprites:\r\n        camera.apply(sprite)\r\n\r\n\r\nt1 = None\r\nt2 = None\r\nt3 = None\r\nt4 = None\r\nt5 = None\r\n\r\n\r\ndef other_color(cl1, cl2, cl3, cl4, cl5):\r\n    global t1, t2, t3, t4, t5\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    font = pygame.font.Font(font_path, 40)\r\n    t1 = font.render(f\"1 Act\",\r\n                     True, cl1)\r\n    t2 = font.render(f\"2 Act\",\r\n                     True, cl2)\r\n    t3 = font.render(f\"3 Act\",\r\n                     True, cl3)\r\n    t4 = font.render(f\"Tab result\",\r\n                     True, cl4)\r\n    t5 = font.render(f\"Cancel\",\r\n                     True, cl5)\r\n\r\n\r\ndef menu():\r\n    other_color((0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (255, 0, 0))\r\n    colT = 5\r\n    pygame.mixer.music.pause()\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_w or event.key == pygame.K_UP:\r\n                    colT -= 1\r\n                    if colT == 0:\r\n                        colT = 5\r\n                        other_color((0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0),\r\n                                    (255, 0, 0))\r\n                    if colT == 1:\r\n                        other_color((255, 0, 0), (0, 0, 0), (0, 0, 0),\r\n                                    (0, 0, 0), (0, 0, 0))\r\n                    if colT == 2:\r\n                        other_color((0, 0, 0), (255, 0, 0), (0, 0, 0),\r\n                                    (0, 0, 0), (0, 0, 0))\r\n                    if colT == 3:\r\n                        other_color((0, 0, 0), (0, 0, 0), (255, 0, 0),\r\n                                    (0, 0, 0), (0, 0, 0))\r\n                    if colT == 4:\r\n                        other_color((0, 0, 0), (0, 0, 0), (0, 0, 0),\r\n                                    (255, 0, 0), (0, 0, 0))\r\n\r\n                if event.key == pygame.K_s or event.key == pygame.K_DOWN:\r\n                    colT += 1\r\n                    if colT == 6:\r\n                        colT = 1\r\n                        other_color((255, 0, 0), (0, 0, 0), (0, 0, 0),\r\n                                    (0, 0, 0), (0, 0, 0))\r\n                    if colT == 5:\r\n                        other_color((0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0),\r\n                                    (255, 0, 0))\r\n                    if colT == 2:\r\n                        other_color((0, 0, 0), (255, 0, 0), (0, 0, 0),\r\n                                    (0, 0, 0), (0, 0, 0))\r\n                    if colT == 3:\r\n                        other_color((0, 0, 0), (0, 0, 0), (255, 0, 0),\r\n                                    (0, 0, 0), (0, 0, 0))\r\n                    if colT == 4:\r\n                        other_color((0, 0, 0), (0, 0, 0), (0, 0, 0),\r\n                                    (255, 0, 0), (0, 0, 0))\r\n\r\n                if (event.key == pygame.K_SPACE or event.key == pygame.K_p or\r\n                        event.key == pygame.K_RETURN):\r\n                    if colT == 1:\r\n                        act1()\r\n                    if colT == 2:\r\n                        act2()\r\n                    if colT == 3:\r\n                        act3()\r\n                    if colT == 4:\r\n                        results()\r\n                    pygame.mixer.music.play(loops=-1)\r\n                    return\r\n\r\n        screen.blit(t1, (300, 50))\r\n        screen.blit(t2, (300, 130))\r\n        screen.blit(t3, (300, 210))\r\n        screen.blit(t4, (300, 290))\r\n        screen.blit(t5, (300, 370))\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n\r\n\r\nclass Player(pygame.sprite.Sprite):\r\n    image = load_image('m.c.front_stop.jpg')\r\n    image = pygame.transform.scale(image, (40, 60))\r\n\r\n    def __init__(self, pos_x, pos_y, stena, key=False, pas=False):\r\n        super().__init__(player_group, all_sprites)\r\n        self.image = Player.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n        self.x = pos_x + 20\r\n        self.y = pos_y + 60\r\n        self.step = 1\r\n        self.back = False\r\n        self.last_skin_change_time = 0\r\n        self.direction = ''\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n        self.loc = 0\r\n        self.key = key\r\n        self.pas = pas\r\n        self.run = 5\r\n        self.vis = True\r\n        self.appls = 0\r\n        if stena == 1:\r\n            self.stena = [(2, 0, 0)]\r\n        elif stena == 2:\r\n            self.stena = [(34, 177, 76), (0, 162, 232), (54, 19, 11),\r\n                          (0, 8, 4), (4, 28, 16), (15, 69, 10), (18, 89, 22)]\r\n        elif stena == 3:\r\n            self.stena = [(153, 217, 234), (185, 122, 87), (0, 162, 232),\r\n                          (187, 122, 87)]\r\n\r\n    def stop(self):\r\n        image = self.image\r\n        if self.vis:\r\n            if self.direction == 'left':\r\n                image = load_image(f'm.c.left_stop.jpg')\r\n            elif self.direction == 'right':\r\n                image = load_image(f'm.c.right_stop.jpg')\r\n            elif self.direction == 'down':\r\n                image = load_image(f'm.c.front_stop.jpg')\r\n            elif self.direction == 'up':\r\n                image = load_image(f'm.c.back_stop.jpg')\r\n        else:\r\n            image = load_image(f'm.v.jpg')\r\n        self.image = pygame.transform.scale(image, (40, 60))\r\n\r\n    def update(self, move_up, move_down, move_left, move_right, passaa=None):\r\n        global all_sprites, background, player, player_group, door_group, \\\r\n            door, word_group, x, y, task_text, ok_tip, door2, door3, \\\r\n            chest, img, pas, rectangle_group, loc5, loc11, text1, text2, \\\r\n            text3, text4\r\n        image = self.image\r\n        current_time = pygame.time.get_ticks()\r\n        text_window.rect.x = 999999\r\n\r\n        if move_left:\r\n            self.direction = 'left'\r\n            self.rect.x -= self.run\r\n            self.x -= self.run\r\n            if background.get_rgb(self.x, self.y) in self.stena:\r\n                self.rect.x += self.run\r\n                self.x += self.run\r\n            if self.vis:\r\n                if current_time - self.last_skin_change_time > 150:\r\n                    self.last_skin_change_time = current_time\r\n                    if self.step == 1:\r\n                        self.step += 1\r\n                        self.back = False\r\n                    elif self.step == 2:\r\n                        if self.back:\r\n                            self.step -= 1\r\n                        else:\r\n                            self.step += 1\r\n                    elif self.step == 3:\r\n                        self.step -= 1\r\n                        self.back = True\r\n\r\n                image = load_image(f'm.c.left_walk_{self.step}.jpg')\r\n            else:\r\n                image = load_image(f'm.v.jpg')\r\n        if move_right:\r\n            self.direction = 'right'\r\n            self.rect.x += self.run\r\n            self.x += self.run\r\n            if background.get_rgb(self.x, self.y) in self.stena:\r\n                self.rect.x -= self.run\r\n                self.x -= self.run\r\n            if self.vis:\r\n                if current_time - self.last_skin_change_time > 150:\r\n                    self.last_skin_change_time = current_time\r\n                    if self.step == 1:\r\n                        self.step += 1\r\n                        self.back = False\r\n                    elif self.step == 2:\r\n                        if self.back:\r\n                            self.step -= 1\r\n                        else:\r\n                            self.step += 1\r\n                    elif self.step == 3:\r\n                        self.step -= 1\r\n                        self.back = True\r\n\r\n                image = load_image(f'm.c.right_walk_{self.step}.jpg')\r\n            else:\r\n                image = load_image(f'm.v.jpg')\r\n        if move_up:\r\n            self.direction = 'up'\r\n            self.rect.y -= self.run\r\n            self.y -= self.run\r\n            if background.get_rgb(self.x, self.y) in self.stena:\r\n                self.rect.y += self.run\r\n                self.y += self.run\r\n            if self.vis:\r\n                if current_time - self.last_skin_change_time > 150:\r\n                    self.last_skin_change_time = current_time\r\n                    if self.step == 1:\r\n                        self.step += 1\r\n                        self.back = False\r\n                    elif self.step == 2:\r\n                        if self.back:\r\n                            self.step -= 1\r\n                        else:\r\n                            self.step += 1\r\n                    elif self.step == 3:\r\n                        self.step -= 1\r\n                        self.back = True\r\n\r\n                image = load_image(f'm.c.back_walk_{self.step}.jpg')\r\n            else:\r\n                image = load_image(f'm.v.jpg')\r\n        if move_down:\r\n            self.direction = 'down'\r\n            self.rect.y += self.run\r\n            self.y += self.run\r\n            if background.get_rgb(self.x, self.y) in self.stena:\r\n                self.rect.y -= self.run\r\n                self.y -= self.run\r\n            if self.vis:\r\n                if current_time - self.last_skin_change_time > 150:\r\n                    self.last_skin_change_time = current_time\r\n                    if self.step == 1:\r\n                        self.step += 1\r\n                        self.back = False\r\n                    elif self.step == 2:\r\n                        if self.back:\r\n                            self.step -= 1\r\n                        else:\r\n                            self.step += 1\r\n                    elif self.step == 3:\r\n                        self.step -= 1\r\n                        self.back = True\r\n\r\n                image = load_image(f'm.c.front_walk_{self.step}.jpg')\r\n            else:\r\n                image = load_image(f'm.v.jpg')\r\n        self.image = pygame.transform.scale(image, (40, 60))\r\n        if pygame.sprite.collide_mask(self, door):\r\n            if self.loc == 0:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a1_m2.png', (839, 1300))\r\n                all_sprites.add(background)\r\n                player = Player(419, 950, 1)\r\n                player.loc = 1\r\n                wizardRus.rect.x = 419\r\n                wizardRus.rect.y = 600\r\n                wizardRus.canRun = False\r\n                wizardRus.y = 600\r\n                all_sprites.add(wizardRus)\r\n                door = Door(363, 48, 1, 2)\r\n            elif self.loc == 1:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                word_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a1_m3.png', (2100, 500))\r\n                all_sprites.add(background)\r\n                door = Door(1800, 200, 1, 1)\r\n                player = Player(200, 330, 1)\r\n                player.loc = 2\r\n            elif self.loc == 2:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                background = Background('a1_m4.png', (700, 500))\r\n                all_sprites.add(background)\r\n                player = Player(385, 300, 1)\r\n                player.loc = 3\r\n                mathGame('a1_m4.png')\r\n            elif self.loc == 3:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                rectangle_group = pygame.sprite.Group()\r\n                background = Background('a1_m6.png', (900, 784))\r\n                all_sprites.add(background)\r\n                pygame.mixer.music.load(\"data/act1_boss.ogg\")\r\n                pygame.mixer.music.set_volume(0.3)\r\n                pygame.mixer.music.play(loops=-1)\r\n                player = Player(450, 300, 1)\r\n                player.loc = 4\r\n                x = player.x\r\n                y = player.y\r\n\r\n                loc5 = 0\r\n                door = Door(20000, 20000, 1, 1)\r\n            elif self.loc == 5:\r\n                door.rect.x = 20000\r\n                self.loc = 6\r\n                end_screen(2, True)\r\n            elif self.loc == 6 or self.loc == 9:\r\n                a = ['Птица', \"Медведь\", \"Заяц\", \"Человек\"]\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                word_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a2_m2.png', (2380, 1500))\r\n                all_sprites.add(background)\r\n                door = Door(1670, 750, 2, 1)\r\n                for j in range(1, 5):\r\n                    button_group.add(Button(775 + j * 150, 800, j))\r\n                player = Player(1600, 750, 2, key=player.key, pas=player.pas)\r\n                font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n                font = pygame.font.Font(font_path, 50)\r\n                ok_tip = random.randint(0, 3)\r\n                task_text = font.render(a[ok_tip], True, (255, 255, 255))\r\n                x, y = 700, 640\r\n                player.loc = 7\r\n            elif self.loc == 7:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a2_m1.png', (2060, 1500))\r\n                door = Door(350, 840, 2, 1)\r\n                door2 = Door(1528, 540, 2, 1)\r\n                door3 = Door(350, 540, 2, 1)\r\n                all_sprites.add(background)\r\n                door_group.add(door, door2, door3)\r\n                pas = Pass(870, 700)\r\n                player = Player(480, 840, 2, key=player.key, pas=player.pas)\r\n                player.loc = 6\r\n            elif self.loc == 12:\r\n                door.rect.x = 20000\r\n                self.loc = 13\r\n                end_screen(3, True)\r\n            elif self.loc == 13:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                background = Background('a3_m2.jpg', (750, 400))\r\n                all_sprites.add(background)\r\n                player = Player(385, 300, 1)\r\n                player.loc = 14\r\n                mathGame('a3_m2.jpg')\r\n            elif self.loc == 16:\r\n                door.rect.x = 20000\r\n                self.loc = 17\r\n                end_screen(4, True)\r\n        for j in apples:\r\n            if pygame.sprite.collide_mask(self, j):\r\n                j.rect.x = 20000\r\n                player.appls += 1\r\n                img = load_image('apple.jpg')\r\n                img = pygame.transform.scale(img, (30, 30))\r\n\r\n        if pygame.sprite.collide_mask(self, door3):\r\n            if self.loc == 6 or self.loc == 9:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                word_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a2_m3.png', (4000, 4000))\r\n                all_sprites.add(background)\r\n                chest = Chest(777, 742)\r\n                door3 = Door(3400, 810, 2, 1)\r\n                player = Player(3360, 800, 2, key=player.key, pas=player.pas)\r\n                x, y = 700, 640\r\n                player.loc = 8\r\n            elif self.loc == 8:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a2_m1.png', (2060, 1500))\r\n                door = Door(350, 840, 2, 1)\r\n                door2 = Door(1528, 540, 2, 1)\r\n                door3 = Door(350, 540, 2, 1)\r\n                all_sprites.add(background)\r\n                door_group.add(door, door2, door3)\r\n                pas = Pass(870, 700)\r\n                player = Player(480, 540, 2, key=player.key, pas=player.pas)\r\n                player.loc = 6\r\n        if pygame.sprite.collide_mask(self, chest) and self.loc != 9:\r\n            if player.key:\r\n                player.pas = True\r\n                img = load_image('cash.jpg')\r\n                img = pygame.transform.scale(img, (50, 50))\r\n                chest.image = pygame.transform.scale(\r\n                    load_image('chest_open.jpg'), (60, 40))\r\n        if player.appls == 6 and background.get_rgb(self.x + self.run,\r\n                                                    self.y + self.run) == \\\r\n                (0, 162, 232):\r\n            player.vis = False\r\n            try:\r\n                del self.stena[self.stena.index((187, 122, 87))]\r\n            except Exception:\r\n                pass\r\n\r\n        if pygame.sprite.collide_mask(self, pas) and self.loc != 9:\r\n            if player.pas:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a2_m4.png', (2060, 1500))\r\n                pas = Pass(870, 600)\r\n                door = Door(350, 840, 2, 1)\r\n                door2 = Door(1528, 540, 2, 1)\r\n                door3 = Door(350, 540, 2, 1)\r\n                all_sprites.add(background)\r\n                door_group.add(door)\r\n                door_group.add(door2)\r\n                door_group.add(door3)\r\n                pas = Pass(860, 650)\r\n                player = Player(player.x, player.y, 2)\r\n                player.loc = 9\r\n        if pygame.sprite.collide_mask(self, door2):\r\n            all_sprites = pygame.sprite.Group()\r\n            player_group = pygame.sprite.Group()\r\n            background = Background('a1_m4.png', (750, 400))\r\n            all_sprites.add(background)\r\n            player = Player(335, 325, 1)\r\n            player.loc = 10\r\n            mathGame('a2_m5.jpg')\r\n        if pygame.sprite.collide_mask(self, sign1):\r\n            text_window.rect.y = 0\r\n            text_window.rect.x = 100\r\n            text_group.add(text_window)\r\n            all_sprites.add(text_window)\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 20)\r\n            text1 = font.render('Лучше дальше не идти, это ОПАСНО!!!', False,\r\n                                (255, 255, 255))\r\n            text2 = font.render(\r\n                'Это один из лучших магов наук. Он знает ВСЕ науки!', False,\r\n                (255, 255, 255))\r\n            text3 = font.render(\r\n                'Он тоже не знает как сюда попал, но глупых детей он',\r\n                False, (255, 255, 255))\r\n            text4 = font.render('НИКОГДА не щадил!!!', False,\r\n                                (255, 255, 255))\r\n        elif pygame.sprite.collide_mask(self, sign2):\r\n            text_window.rect.y = 0\r\n            text_window.rect.x = 100\r\n            text_group.add(text_window)\r\n            all_sprites.add(text_window)\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 20)\r\n            text1 = font.render('Эти ворота скрывают ТЕБЯ от НЕГО!', False,\r\n                                (255, 255, 255))\r\n            text2 = font.render(\r\n                'Он никогда не проигрывал в научных битвах до этого.', False,\r\n                (255, 255, 255))\r\n            text3 = font.render(\r\n                'Он мог бы сбежать отсюда, но власть, которую он получил',\r\n                False, (255, 255, 255))\r\n            text4 = font.render('здесь очень манит его.', False,\r\n                                (255, 255, 255))\r\n        elif self.loc == 3:\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 20)\r\n            text1 = font.render('', False, (255, 255, 255))\r\n            text2 = font.render('', False, (255, 255, 255))\r\n            text3 = font.render('', False, (255, 255, 255))\r\n            text4 = font.render('', False, (255, 255, 255))\r\n\r\n        camera.update(player)\r\n        for sprite in all_sprites:\r\n            camera.apply(sprite)\r\n\r\n\r\nclass Sign(pygame.sprite.Sprite):\r\n    image = load_image('sign.png')\r\n    image = pygame.transform.scale(image, (51, 54))\r\n\r\n    def __init__(self, x_pos, y_pos):\r\n        super().__init__(player_group, sign_group)\r\n        self.image = Sign.image\r\n        self.rect = self.image.get_rect().move(x_pos, y_pos)\r\n\r\n\r\nclass TextWindow(pygame.sprite.Sprite):\r\n    image = load_image('text_window.png')\r\n    image = pygame.transform.scale(image, (600, 150))\r\n\r\n    def __init__(self, x_pos, y_pos):\r\n        super().__init__(player_group, text_group)\r\n        self.image = TextWindow.image\r\n        self.rect = self.image.get_rect().move(x_pos, y_pos)\r\n\r\n\r\nclass Letters(pygame.sprite.Sprite):\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        a = random.choice(['letter_a.png', 'letter_b.png', 'letter_v.png',\r\n                           'letter_g.png', 'letter_d.png'])\r\n        image_path = load_image(a)\r\n        self.image = pygame.transform.scale(image_path, (40, 60))\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n\r\n    def update(self):\r\n        self.rect.x -= 9\r\n        if pygame.sprite.collide_mask(self, player):\r\n            end_screen(1, False)\r\n            return\r\n\r\n\r\nclass Background(pygame.sprite.Sprite):\r\n    def __init__(self, image_path, size):\r\n        super().__init__()\r\n        self.image = load_image(image_path)\r\n        self.image = pygame.transform.scale(self.image, size)\r\n        self.rect = self.image.get_rect()\r\n        self.mask = pygame.mask.from_threshold(self.image, (237, 28, 36),\r\n                                               (1, 1, 1, 255))\r\n\r\n    def get_rgb(self, x, y):\r\n        pixel = pygame.PixelArray(self.image)\r\n        return self.image.unmap_rgb(pixel[x][y])\r\n\r\n\r\nclass Door(pygame.sprite.Sprite):\r\n    def __init__(self, pos_x, pos_y, act, tip):\r\n        super().__init__(all_sprites)\r\n        if act == 1:\r\n            image_path = load_image(f'door_a1_{tip}.png')\r\n        elif act == 2:\r\n            image_path = load_image('exit-enter_a2.png')\r\n        if tip == 1:\r\n            self.image = pygame.transform.scale(image_path, (120, 96))\r\n        elif tip == 2:\r\n            self.image = pygame.transform.scale(image_path, (112, 67))\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y + 20)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n\r\n\r\nclass Rectangle(pygame.sprite.Sprite):\r\n    def __init__(self, pos_x, pos_y, vx, vy, xx, yy, canDamage, image):\r\n        image_path = load_image(image)\r\n        image_path = pygame.transform.scale(image_path, (xx + 50, yy))\r\n        sprite_image = image_path\r\n        super().__init__(rectangle_group, all_sprites)\r\n        self.image = sprite_image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y + 20)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n        self.vx = vx\r\n        self.vy = vy\r\n        self.canDamage = canDamage\r\n\r\n    def update(self):\r\n        global rectangle_group, plat\r\n        self.rect.x += 2 * self.vx\r\n        self.rect.y += 2 * self.vy\r\n        if self.canDamage and not (pygame.sprite.collide_mask(player, plat)):\r\n            if pygame.sprite.collide_mask(self, player):\r\n                for j in rectangle_group:\r\n                    j.rect.x = 10000\r\n\r\n                rectangle_group = pygame.sprite.Group()\r\n                if player.loc == 4:\r\n                    end_screen(1, False)\r\n                elif player.loc == 11:\r\n                    end_screen(2, False)\r\n                elif player.loc == 15:\r\n                    end_screen(3, False)\r\n                return\r\n\r\n\r\nclass Button(pygame.sprite.Sprite):\r\n    def __init__(self, pos_x, pos_y, tip):\r\n        super().__init__(all_sprites)\r\n        if player.loc == 15:\r\n            image_path = load_image(f'button{tip}_{tip}.jpg')\r\n        else:\r\n            image_path = load_image(f'button{tip}.jpg')\r\n        self.image = pygame.transform.scale(image_path, (80, 80))\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y + 20)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n        self.tip = tip\r\n        self.tm = 300\r\n\r\n    def update(self):\r\n        if player.loc != 15:\r\n            if pygame.sprite.spritecollideany(self, player_group):\r\n                font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n                font = pygame.font.Font(font_path, 50)\r\n                screen.blit(\r\n                    font.render(str(self.tm // 100 + 1), True, (0, 0, 0)),\r\n                    (350, 0))\r\n                if self.tm // 100 + 1 == 0:\r\n                    if self.tip == ok_tip + 1:\r\n                        self.tm += 1\r\n                        player.key = True\r\n                    else:\r\n                        for j in button_group:\r\n                            j.rect.x = 20000\r\n                        end_screen(2, False)\r\n                self.tm -= 1\r\n            else:\r\n                self.tm = 300\r\n\r\n\r\nclass Pass(pygame.sprite.Sprite):\r\n    image = load_image('pass.jpg')\r\n    image = pygame.transform.scale(image, (40, 60))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = Pass.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n\r\n\r\nclass Chest(pygame.sprite.Sprite):\r\n    image = load_image('chest.jpg')\r\n    image = pygame.transform.scale(image, (60, 40))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = Chest.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n\r\n\r\nclass Defens(pygame.sprite.Sprite):\r\n    image = load_image('defens.jpg')\r\n    image = pygame.transform.scale(image, (200, 200))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = Defens.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n\r\n\r\nclass Apple(pygame.sprite.Sprite):\r\n    image = load_image('apple.jpg')\r\n    image = pygame.transform.scale(image, (20, 20))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = Apple.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n\r\n\r\nclass Traveler(pygame.sprite.Sprite):\r\n    image = load_image('traveler.jpg')\r\n    image = pygame.transform.scale(image, (70, 90))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = Traveler.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n\r\n\r\nclass Platform(pygame.sprite.Sprite):\r\n    image = load_image('platform.jpg')\r\n    image = pygame.transform.scale(image, (100, 90))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = Platform.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n\r\n\r\nclass WizardRus(pygame.sprite.Sprite):\r\n    image = load_image('wizardRus.png')\r\n    image = pygame.transform.scale(image, (80, 90))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__()\r\n        self.image = WizardRus.image\r\n        self.rect = self.image.get_rect().move(\r\n            pos_x, pos_y)\r\n        self.canRun = False\r\n        self.y = pos_y\r\n\r\n    def update(self):\r\n        if self.canRun:\r\n            self.rect.y -= 10\r\n            self.y -= 10\r\n            if self.y <= 300:\r\n                self.rect.y = -1000\r\n        if player.y <= 800:\r\n            self.canRun = True\r\n\r\n\r\nwizardRus = WizardRus(2000, 2000)\r\n\r\n\r\ndef act3_buttons():\r\n    global task_text, difference, question, buttons, a, b, tm\r\n    a = random.randint(0, 100)\r\n    difference = random.randint(1, 4)\r\n    b = difference - a\r\n    if b < 0:\r\n        question = f\"{a}{b}\"\r\n    else:\r\n        question = f\"{a} + {b}\"\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    font = pygame.font.Font(font_path, 50)\r\n    task_text = font.render(question, True, (0, 0, 0))\r\n    buttons = []\r\n    for j in range(1, 5):\r\n        buttons.append(\r\n            Button(x - player.x + j * 150, y - player.y + 200, j))\r\n    tm = 300\r\n    screen.blit(font.render(str(tm // 100 + 1), True, (0, 0, 0)),\r\n                (350, 0))\r\n\r\n\r\ndef results():\r\n    con = sqlite3.connect(\"data/bd.sqlite\")\r\n    cur = con.cursor()\r\n    result1 = cur.execute(\"\"\"SELECT time FROM player\r\n            WHERE act == 1 ORDER BY time\"\"\").fetchall()[:10]\r\n    result2 = cur.execute(\"\"\"SELECT time FROM player\r\n            WHERE act == 2 ORDER BY time\"\"\").fetchall()[:10]\r\n    result3 = cur.execute(\"\"\"SELECT time FROM player\r\n            WHERE act == 3 ORDER BY time\"\"\").fetchall()[:10]\r\n    con.close()\r\n\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif (event.type == pygame.KEYDOWN or event.type ==\r\n                  pygame.MOUSEBUTTONDOWN):\r\n                return\r\n        screen.blit(load_image(\"sybtit.png\"), (0, 0))\r\n        font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n        font = pygame.font.Font(font_path, 20)\r\n        y = 0\r\n        for res in result1:\r\n            screen.blit(font.render(res[0], True, (255, 255, 255)),\r\n                        (150, 100 + y))\r\n            y += 40\r\n        y = 0\r\n        for res in result2:\r\n            screen.blit(font.render(res[0], True, (255, 255, 255)),\r\n                        (350, 100 + y))\r\n            y += 40\r\n        y = 0\r\n        for res in result3:\r\n            screen.blit(font.render(res[0], True, (255, 255, 255)),\r\n                        (550, 100 + y))\r\n            y += 40\r\n        font = pygame.font.Font(font_path, 50)\r\n        text_1 = font.render(\"1 Act\", True, (255, 255, 255))\r\n        text_2 = font.render(\"2 Act\", True, (255, 255, 255))\r\n        text_3 = font.render(\"3 Act\", True, (255, 255, 255))\r\n        screen.blit(text_1, (150, 0))\r\n        screen.blit(text_2, (350, 0))\r\n        screen.blit(text_3, (550, 0))\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n\r\n\r\ndef sybtit_screen():\r\n    j = 0\r\n    sybtit = load_image('sybtit.png')\r\n    pygame.mixer.music.load(\"data/final_melody.ogg\")\r\n    pygame.mixer.music.set_volume(0.3)\r\n    pygame.mixer.music.play(loops=-1)\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n\r\n        screen.blit(sybtit, (0, -j))\r\n        pygame.display.flip()\r\n\r\n        j += 2\r\n        if j >= 1750:\r\n            return\r\n\r\n        clock.tick(FPS)\r\n\r\n\r\nclass Camera:\r\n    # зададим начальный сдвиг камеры\r\n    def __init__(self):\r\n        self.dx = 0\r\n        self.dy = 0\r\n\r\n    def apply(self, obj):\r\n        obj.rect.x += self.dx\r\n        obj.rect.y += self.dy\r\n\r\n    # позиционировать камеру на объекте target\r\n    def update(self, target):\r\n        self.dx = -(target.rect.x + target.rect.w // 2 - width // 2)\r\n        self.dy = -(target.rect.y + target.rect.h // 2 - height // 2)\r\n\r\n\r\nclock = pygame.time.Clock()\r\nFPS = 60\r\n# группы спрайтов\r\nall_sprites = pygame.sprite.Group()\r\nplayer_group = pygame.sprite.Group()\r\ndoor_group = pygame.sprite.Group()\r\nrectangle_group = pygame.sprite.Group()\r\nbutton_group = pygame.sprite.Group()\r\nword_group = pygame.sprite.Group()\r\nsign_group = pygame.sprite.Group()\r\ntext_group = pygame.sprite.Group()\r\n\r\ntime = datetime.datetime.now()\r\nx, y = 0, 0\r\nrect = Rectangle(20000, 20000, 0, 0, 10, 500, False, \"redrect.jpg\")\r\nimg = load_image('key.jpg')\r\nimg = pygame.transform.scale(img, (50, 50))\r\nsign1 = Sign(120, 20000)\r\nsign2 = Sign(658, 20000)\r\nsign3 = Sign(120, 20000)\r\nsign4 = Sign(658, 20000)\r\nsign5 = Sign(120, 20000)\r\nsign6 = Sign(658, 20000)\r\ntext_window = TextWindow(999999, 0)\r\n\r\nloc5 = 0\r\nloc11 = 0\r\nloc14 = 0\r\n\r\nruni = -600\r\ncamera = Camera()\r\napples = []\r\ntm = 0\r\ndifference = 0\r\n\r\ndoor2 = Door(20000, 20000, 2, 1)\r\ndoor3 = Door(20000, 20000, 2, 1)\r\nchest = Chest(20000, 20000)\r\nplat = Platform(20000, 20000)\r\npas = Pass(20000, 20000)\r\ntraveler = Traveler(20000, 20000)\r\n\r\nif __name__ == '__main__':\r\n    pygame.init()\r\n    pygame.display.set_caption('Entangled Tale')\r\n    size = width, height = 800, 500\r\n    screen = pygame.display.set_mode(size)\r\n    start_screen()\r\n\r\n    text1 = pygame.font.Font(os.path.join(\"data/fonts\", \"comic.ttf\"),\r\n                             20).render('', False, (255, 255, 255))\r\n    text2 = pygame.font.Font(os.path.join(\"data/fonts\", \"comic.ttf\"),\r\n                             20).render('', False, (255, 255, 255))\r\n    text3 = pygame.font.Font(os.path.join(\"data/fonts\", \"comic.ttf\"),\r\n                             20).render('', False, (255, 255, 255))\r\n    text4 = pygame.font.Font(os.path.join(\"data/fonts\", \"comic.ttf\"),\r\n                             20).render('', False, (255, 255, 255))\r\n    i = 0\r\n    running = True\r\n    while running:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                running = False\r\n            if event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_p:\r\n                    menu()\r\n                if event.key == pygame.K_e and runi == -600:\r\n                    runi = 300\r\n            if event.type == pygame.KEYUP:\r\n                player.stop()\r\n\r\n        if runi != -600:\r\n            player.run = 9\r\n        if runi < 0:\r\n            player.run = 5\r\n        screen.fill((2, 0, 0))\r\n        keys = pygame.key.get_pressed()\r\n\r\n        # Обновление игровых объектов\r\n        player.update(keys[pygame.K_UP], keys[pygame.K_DOWN],\r\n                      keys[pygame.K_LEFT], keys[pygame.K_RIGHT])\r\n        player.update(keys[pygame.K_w], keys[pygame.K_s],\r\n                      keys[pygame.K_a], keys[pygame.K_d])\r\n        # обновляем положение всех спрайтов\r\n        for sprite in all_sprites:\r\n            camera.apply(sprite)\r\n        camera.update(player)\r\n        wizardRus.update()\r\n        all_sprites.draw(screen)\r\n        if player.loc == 7:\r\n            screen.blit(task_text, (x - player.x + 780, y - player.y + 160))\r\n        if not player.key and pygame.sprite.collide_mask(player, chest):\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 40)\r\n            task_text = font.render(\"Нужен ключ!\", True, (255, 255, 255))\r\n            screen.blit(task_text, (300, 0))\r\n        if pygame.sprite.collide_mask(player, traveler):\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 25)\r\n            if player.appls not in [5, 6]:\r\n                task_text = font.render(\"Принеси мне 5 яблок, \"\r\n                                        \"в обмен на информацию\", True,\r\n                                        (255, 255, 255))\r\n            else:\r\n                task_text = font.render(\r\n                    \"Выпей воды из озера и можешь идти спокойно\", True,\r\n                    (255, 255, 255))\r\n                player.appls = 6\r\n\r\n            screen.blit(task_text, (100, 0))\r\n        if (not player.pas and pygame.sprite.collide_mask(player, pas) and\r\n                player.loc == 6):\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 40)\r\n            task_text = font.render(\"Нужна монета!\", True, (255, 255, 255))\r\n            screen.blit(task_text, (300, 0))\r\n        if player.loc == 13 and background.get_rgb(player.x + player.run,\r\n                                                   player.y + player.run) == (\r\n                187, 122, 87) \\\r\n                and (187, 122, 87) in player.stena:\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 40)\r\n            task_text = font.render(\"Дальше нельзя\", True, (0, 0, 0))\r\n            screen.blit(task_text, (300, 0))\r\n        player_group.draw(screen)\r\n        if runi > -600:\r\n            runi -= 1\r\n\r\n        if player.loc == 2:\r\n            i += 1\r\n            if i % 40 == 0:\r\n                letter = Letters(x - player.x + 2500,\r\n                                 random.randint(y - player.y + 450,\r\n                                                y - player.y + 660))\r\n                word_group.add(letter)\r\n            word_group.update()\r\n            word_group.draw(screen)\r\n\r\n        screen.blit(pygame.transform.scale(load_image(\"run.png\"), (40, 40)),\r\n                    (5, 5))\r\n        font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n        if runi == -600:\r\n            txt = pygame.font.Font(font_path, 35).render(f\"active\", True,\r\n                                                         (255, 0, 0))\r\n            screen.blit(txt, (50, 0))\r\n        else:\r\n            txt = pygame.font.Font(font_path, 30).render(\r\n                f\"{(runi + 660) // 60}\", True, (255, 0, 0))\r\n            screen.blit(txt, (50, 5))\r\n\r\n        if player.key:\r\n            screen.blit(img, (750, 0))\r\n\r\n        if player.appls != 6:\r\n            for i in range(player.appls):\r\n                screen.blit(img, (770 - i * 30, 0))\r\n\r\n        if player.loc == 4:\r\n            if 200 <= loc5 <= 1000 and loc5 % 200 == 0:\r\n                try:\r\n                    n = random.randint(-1, 3) * 200\r\n                    while n == m:\r\n                        n = random.randint(-1, 3) * 200\r\n                    m = n\r\n                except Exception:\r\n                    m = random.randint(-1, 3) * 200\r\n                rect.rect.x = 20000\r\n                rect = Rectangle(x - player.x + m,\r\n                                 y - player.y - 78, 0, 0, 450,\r\n                                 519, False, \"warning rect.png\")\r\n            if 340 <= loc5 <= 1000 and loc5 % 200 == 140:\r\n                rect.rect.x = 20000\r\n                rect = Rectangle(x - player.x + m,\r\n                                 y - player.y - 78, 0, 0, 450,\r\n                                 519, True, \"grayrect.jpg\")\r\n            if 1000 <= loc5 <= 3000 and loc5 % 100 == 0:\r\n                rect.rect.x = 20000\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(-100, 150), -3, 0, 10,\r\n                          random.randint(50, 300), True, \"redrect.jpg\")\r\n            if 3200 <= loc5 <= 4000 and loc5 % 200 == 0:\r\n                n = random.randint(-1, 3) * 200\r\n                while n == m:\r\n                    n = random.randint(-1, 3) * 200\r\n                m = n\r\n                rect.rect.x = 20000\r\n                rect = Rectangle(x - player.x + m,\r\n                                 y - player.y - 78, 0, 0, 450,\r\n                                 519, False, \"warning rect.png\")\r\n            if 3200 <= loc5 <= 4140 and loc5 % 200 == 140:\r\n                rect.rect.x = 20000\r\n                rect = Rectangle(x - player.x + m,\r\n                                 y - player.y - 78, 0, 0, 450,\r\n                                 519, True, \"grayrect.jpg\")\r\n            if loc5 == 4200:\r\n                rect.rect.x = 20000\r\n            if loc5 == 4400:\r\n                door = Door(x - player.x + 350, y - player.y + 150, 1, 1)\r\n                player.loc = 5\r\n            loc5 += 1\r\n            rectangle_group.update()\r\n        if player.loc == 11:\r\n            if loc11 <= 2000 and loc11 % 100 == 0:\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(-50, 200), -3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"greenrect2.jpg\")\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(200, 450), -3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"greenrect2.jpg\")\r\n            if 2300 <= loc11 <= 4000 and loc11 % 100 == 0:\r\n                Rectangle(x - player.x + random.randint(-100, 300),\r\n                          y - player.y - 200, 0, 1, 20,\r\n                          random.randint(100, 300),\r\n                          True, \"greenrect1.jpg\")\r\n                Rectangle(x - player.x + random.randint(300, 800),\r\n                          y - player.y - 200, 0, 1, 20,\r\n                          random.randint(100, 300),\r\n                          True, \"greenrect1.jpg\")\r\n            if 4300 <= loc11 <= 6000 and loc11 % 100 == 0:\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(-50, 200), -3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"greenrect2.jpg\")\r\n                Rectangle(x - player.x - 300,\r\n                          y - player.y + random.randint(200, 450), 3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"greenrect2.jpg\")\r\n            if loc11 == 6400:\r\n                door = Door(x - player.x + 350, y - player.y + 150, 1, 1)\r\n                player.loc = 12\r\n            loc11 += 1\r\n            rectangle_group.update()\r\n\r\n        if player.loc == 15:\r\n            if loc14 == 200:\r\n                p = [random.randint(0, 600),\r\n                     random.randint(0, 300)]\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 400:\r\n                plat.rect.x = 20000\r\n                rect = Rectangle(-200, -200, 0, 0, 2000, 2000, True,\r\n                                 \"damage_platform.jpg\")\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 500:\r\n                plat.rect.x = 20000\r\n                rect.rect.x = 20000\r\n            elif loc14 == 600:\r\n                act3_buttons()\r\n            if 600 <= loc14 <= 900:\r\n                tm -= 1\r\n                font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n                font = pygame.font.Font(font_path, 50)\r\n                screen.blit(task_text, (300, 0))\r\n                screen.blit(font.render(str(tm // 100 + 1), True, (0, 0, 0)),\r\n                            (650, 0))\r\n            if loc14 == 900:\r\n                for j in buttons:\r\n                    if pygame.sprite.collide_mask(player,\r\n                                                  j) and j.tip == difference:\r\n                        for k in buttons:\r\n                            k.rect.x = 20000\r\n                            buttons = []\r\n                        break\r\n                else:\r\n                    end_screen(3, False)\r\n\r\n            if loc14 == 1000:\r\n                p = [random.randint(0, 600),\r\n                     random.randint(0, 300)]\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 1200:\r\n                plat.rect.x = 20000\r\n                rect = Rectangle(-200, -200, 0, 0, 2000, 2000, True,\r\n                                 \"damage_platform.jpg\")\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 1300:\r\n                plat.rect.x = 20000\r\n                rect.rect.x = 20000\r\n            if 1400 <= loc14 <= 2000 and loc14 % 100 == 0:\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(-50, 200), -3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"damage_platform.jpg\")\r\n                Rectangle(x - player.x - 300,\r\n                          y - player.y + random.randint(200, 450), 3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"damage_platform.jpg\")\r\n\r\n            if loc14 == 2100:\r\n                p = [random.randint(0, 600),\r\n                     random.randint(0, 300)]\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 2300:\r\n                plat.rect.x = 20000\r\n                rect = Rectangle(-200, -200, 0, 0, 2000, 2000, True,\r\n                                 \"damage_platform.jpg\")\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 2400:\r\n                plat.rect.x = 20000\r\n                rect.rect.x = 20000\r\n            elif loc14 == 2500:\r\n                act3_buttons()\r\n            if 2500 <= loc14 <= 2800:\r\n                tm -= 1\r\n                font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n                font = pygame.font.Font(font_path, 50)\r\n                screen.blit(task_text, (300, 0))\r\n                screen.blit(font.render(str(tm // 100 + 1), True, (0, 0, 0)),\r\n                            (650, 0))\r\n            if loc14 == 2800:\r\n                for j in buttons:\r\n                    if pygame.sprite.collide_mask(player,\r\n                                                  j) and j.tip == difference:\r\n                        for k in buttons:\r\n                            k.rect.x = 20000\r\n                            buttons = []\r\n                        break\r\n                else:\r\n                    end_screen(3, False)\r\n            if 3000 <= loc14 <= 3500 and loc14 % 100 == 0:\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(-50, 200), -3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"damage_platform.jpg\")\r\n                Rectangle(x - player.x - 300,\r\n                          y - player.y + random.randint(200, 450), 3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"damage_platform.jpg\")\r\n\r\n            if 3500 <= loc14 <= 4000 and loc14 % 100 == 0:\r\n                Rectangle(x - player.x - 300,\r\n                          y - player.y + random.randint(-50, 200), 3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"damage_platform.jpg\")\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(200, 450), -3, 0,\r\n                          random.randint(100, 300),\r\n                          10, True, \"damage_platform.jpg\")\r\n            if loc14 == 4100:\r\n                p = [random.randint(0, 600),\r\n                     random.randint(0, 300)]\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 4300:\r\n                plat.rect.x = 20000\r\n                rect = Rectangle(-200, -200, 0, 0, 2000, 2000, True,\r\n                                 \"damage_platform.jpg\")\r\n                plat = Platform(x - player.x + p[0], y - player.y + p[1])\r\n            elif loc14 == 4400:\r\n                plat.rect.x = 20000\r\n                rect.rect.x = 20000\r\n            elif loc14 == 4500:\r\n                act3_buttons()\r\n            if 4500 <= loc14 <= 4800:\r\n                tm -= 1\r\n                font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n                font = pygame.font.Font(font_path, 50)\r\n                screen.blit(task_text, (300, 0))\r\n                screen.blit(font.render(str(tm // 100 + 1), True, (0, 0, 0)),\r\n                            (650, 0))\r\n            if loc14 == 4800:\r\n                for j in buttons:\r\n                    if pygame.sprite.collide_mask(player,\r\n                                                  j) and j.tip == difference:\r\n                        for k in buttons:\r\n                            k.rect.x = 20000\r\n                            buttons = []\r\n                        break\r\n                else:\r\n                    end_screen(3, False)\r\n            if 5000 <= loc14 <= 5500 and loc14 % 100 == 0:\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(-50, 200), -3, 0,\r\n                          random.randint(100, 300),\r\n                          13, True, \"damage_platform.jpg\")\r\n                Rectangle(x - player.x - 300,\r\n                          y - player.y + random.randint(200, 450), 3, 0,\r\n                          random.randint(100, 300),\r\n                          13, True, \"damage_platform.jpg\")\r\n            if 5500 <= loc14 <= 6000 and loc14 % 100 == 0:\r\n                Rectangle(x - player.x - 300,\r\n                          y - player.y + random.randint(-50, 200), 3, 0,\r\n                          random.randint(100, 300),\r\n                          13, True, \"damage_platform.jpg\")\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(200, 450), -3, 0,\r\n                          random.randint(100, 300),\r\n                          13, True, \"damage_platform.jpg\")\r\n            if loc14 == 6200:\r\n                door = Door(x - player.x + 100, y - player.y + 150, 1, 1)\r\n                player.loc = 16\r\n\r\n            loc14 += 1\r\n            rectangle_group.update()\r\n\r\n        if player.loc == 3:\r\n            sign_group.update()\r\n            screen.blit(text1, (110, 10))\r\n            screen.blit(text2, (110, 40))\r\n            screen.blit(text3, (110, 70))\r\n            screen.blit(text4, (110, 100))\r\n        button_group.update()\r\n        door_group.draw(screen)\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/main.py b/main.py
---- a/main.py	(revision 1813500deee3e7441e176c1ca80756b8cb5caa32)
-+++ b/main.py	(date 1704909222124)
-@@ -474,7 +474,7 @@
- 
- 
- class Player(pygame.sprite.Sprite):
--    image = load_image('m.c.front_stop.jpg')
-+    image = load_image('m.c.front_stop.png')
-     image = pygame.transform.scale(image, (40, 60))
- 
-     def __init__(self, pos_x, pos_y, stena, key=False, pas=False):
-@@ -507,13 +507,13 @@
-         image = self.image
-         if self.vis:
-             if self.direction == 'left':
--                image = load_image(f'm.c.left_stop.jpg')
-+                image = load_image(f'm.c.left_stop.png')
-             elif self.direction == 'right':
--                image = load_image(f'm.c.right_stop.jpg')
-+                image = load_image(f'm.c.right_stop.png')
-             elif self.direction == 'down':
--                image = load_image(f'm.c.front_stop.jpg')
-+                image = load_image(f'm.c.front_stop.png')
-             elif self.direction == 'up':
--                image = load_image(f'm.c.back_stop.jpg')
-+                image = load_image(f'm.c.back_stop.png')
-         else:
-             image = load_image(f'm.v.jpg')
-         self.image = pygame.transform.scale(image, (40, 60))
-@@ -549,7 +549,7 @@
-                         self.step -= 1
-                         self.back = True
- 
--                image = load_image(f'm.c.left_walk_{self.step}.jpg')
-+                image = load_image(f'm.c.left_walk_{self.step}.png')
-             else:
-                 image = load_image(f'm.v.jpg')
-         if move_right:
-@@ -574,7 +574,7 @@
-                         self.step -= 1
-                         self.back = True
- 
--                image = load_image(f'm.c.right_walk_{self.step}.jpg')
-+                image = load_image(f'm.c.right_walk_{self.step}.png')
-             else:
-                 image = load_image(f'm.v.jpg')
-         if move_up:
-@@ -599,7 +599,7 @@
-                         self.step -= 1
-                         self.back = True
- 
--                image = load_image(f'm.c.back_walk_{self.step}.jpg')
-+                image = load_image(f'm.c.back_walk_{self.step}.png')
-             else:
-                 image = load_image(f'm.v.jpg')
-         if move_down:
-@@ -624,7 +624,7 @@
-                         self.step -= 1
-                         self.back = True
- 
--                image = load_image(f'm.c.front_walk_{self.step}.jpg')
-+                image = load_image(f'm.c.front_walk_{self.step}.png')
-             else:
-                 image = load_image(f'm.v.jpg')
-         self.image = pygame.transform.scale(image, (40, 60))
-@@ -981,7 +981,7 @@
- 
- 
- class Pass(pygame.sprite.Sprite):
--    image = load_image('pass.jpg')
-+    image = load_image('pass.png')
-     image = pygame.transform.scale(image, (40, 60))
- 
-     def __init__(self, pos_x, pos_y):
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"math game 2 act's processing\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/data/a2_m5.png\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/data/a2_m5.png\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"4119b603b50f1cfc9f75b08b3bdeb4df26e5d3ba\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;mario12508&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"94ac7607-9d72-4b25-a7a3-c40e081cfed5\" />\r\n        <option name=\"url\" value=\"https://github.com/mario12508/Entangled-Tale-game\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZacNkP8bUFBkbLijEbVNjAOYsi\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;Python.main (2).executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.main (4).executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.test.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Mar1o/PycharmProjects/Entangled Tale/data/fonts&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\\data\\fonts\" />\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\\data\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Entangled Tale\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.11 (Entangled Tale)\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-7a29c1521ef0-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.298\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"\" />\r\n      <created>1702663593127</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702663593127</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"start\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702663798679</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702663798679</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"описание Entangled Tale.txt\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702664023442</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702664023442</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"сюжет акта 1\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702747008794</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702747008794</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"animations main character\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702759253894</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702759253894</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"animations main character\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702759279832</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702759279832</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"exit-enter_a1\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702812381417</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702812381417</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"letters and doors fix\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702825954315</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702825954315</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"first location done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702839963644</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702839963644</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"second location drawn\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702850812808</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702850812808</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"second location drawn\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702850825452</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702850825452</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"third location design done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702920190819</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702920190819</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"third location design done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702920196004</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702920196004</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"third location design done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703013610372</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703013610372</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"third location design done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703013631006</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703013631006</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"bugs fix\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703013686583</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703013686583</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"boss location processed\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703104830514</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703104830514</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"boss location processed\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703105401348</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703105401348</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"5 location\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703339118774</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703339118775</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"5 location\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703347045969</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703347045969</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"5 location sign\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703520545467</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703520545467</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"processing\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703690488357</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703690488357</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"a2_m2 done?\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704489862370</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704489862370</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"maze done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704663334955</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704663334955</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"maze done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704663345533</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704663345533</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"some pictures\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704735930288</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704735930288</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"some pictures\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704735954576</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704735954576</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"math game 2 act's processing\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704745006855</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704745006855</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"28\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"start\" />\r\n    <MESSAGE value=\"описание Entangled Tale.txt\" />\r\n    <MESSAGE value=\"сюжет акта 1\" />\r\n    <MESSAGE value=\"animations main character\" />\r\n    <MESSAGE value=\"exit-enter_a1\" />\r\n    <MESSAGE value=\"letters and doors fix\" />\r\n    <MESSAGE value=\"Merge remote-tracking branch 'origin/main'\" />\r\n    <MESSAGE value=\"first location done\" />\r\n    <MESSAGE value=\"second location drawn\" />\r\n    <MESSAGE value=\"third location design done\" />\r\n    <MESSAGE value=\"bugs fix\" />\r\n    <MESSAGE value=\"boss location processed\" />\r\n    <MESSAGE value=\"5 location\" />\r\n    <MESSAGE value=\"5 location sign\" />\r\n    <MESSAGE value=\"Add files via upload\" />\r\n    <MESSAGE value=\"processing\" />\r\n    <MESSAGE value=\"a2_m2 done?\" />\r\n    <MESSAGE value=\"maze done\" />\r\n    <MESSAGE value=\"some pictures\" />\r\n    <MESSAGE value=\"math game 2 act's processing\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"math game 2 act's processing\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 1813500deee3e7441e176c1ca80756b8cb5caa32)
-+++ b/.idea/workspace.xml	(date 1704909115004)
-@@ -4,11 +4,7 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="8b6f0fdc-2b1f-450a-a0fe-df5878d69a75" name="Changes" comment="math game 2 act's processing">
--      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/data/a2_m5.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/a2_m5.png" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
--    </list>
-+    <list default="true" id="8b6f0fdc-2b1f-450a-a0fe-df5878d69a75" name="Changes" comment="math game 2 act's processing" />
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
-@@ -333,7 +329,15 @@
-       <option name="project" value="LOCAL" />
-       <updated>1704745006855</updated>
-     </task>
--    <option name="localTasksCounter" value="28" />
-+    <task id="LOCAL-00028" summary="math game 2 act's processing">
-+      <option name="closed" value="true" />
-+      <created>1704897684849</created>
-+      <option name="number" value="00028" />
-+      <option name="presentableId" value="LOCAL-00028" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1704897684849</updated>
-+    </task>
-+    <option name="localTasksCounter" value="29" />
-     <servers />
-   </component>
-   <component name="Vcs.Log.Tabs.Properties">
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_10_01_2024_20_56__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_01_2024_20_56__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_01_2024_20_56__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_01_2024_20_56__Changes_.xml	(revision bf103e7da4e87f70e8d17bc78f53fcd211f7b7ca)
+++ /dev/null	(revision bf103e7da4e87f70e8d17bc78f53fcd211f7b7ca)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_10_01_2024_20_56_[Changes]" date="1704909409301" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_01_2024_20_56_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 10.01.2024 20:56 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_10_01_2024_21_46__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_10_01_2024_21_46__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_10_01_2024_21_46__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_10_01_2024_21_46__Changes_.xml	(revision bf103e7da4e87f70e8d17bc78f53fcd211f7b7ca)
+++ /dev/null	(revision bf103e7da4e87f70e8d17bc78f53fcd211f7b7ca)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_10_01_2024_21_46_[Changes]" date="1704912392499" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_10_01_2024_21_46_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 10.01.2024 21:46 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"buttons reborn\">\r\n      <change beforePath=\"$PROJECT_DIR$/data/music/a2_m1.mp3\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/data/music/act2_main.mp3\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/data/music/mus_undynetruetheme.ogg\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/data/music/act2_boss.ogg\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"ebd7927054d5b8e060684a8d555e47c853734464\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;mario12508&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"94ac7607-9d72-4b25-a7a3-c40e081cfed5\" />\r\n        <option name=\"url\" value=\"https://github.com/mario12508/Entangled-Tale-game\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZacNkP8bUFBkbLijEbVNjAOYsi\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\r\n    \"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"Python.main (2).executor\": \"Run\",\r\n    \"Python.main (4).executor\": \"Run\",\r\n    \"Python.main.executor\": \"Run\",\r\n    \"Python.test.executor\": \"Debug\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"last_opened_file_path\": \"C:/Users/Mar1o/PycharmProjects/Entangled Tale\",\r\n    \"settings.editor.selected.configurable\": \"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\" />\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\\data\\fonts\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\" />\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\\data\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Entangled Tale\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.11 (Entangled Tale)\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-7a29c1521ef0-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.298\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"\" />\r\n      <created>1702663593127</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702663593127</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"start\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702663798679</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702663798679</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"описание Entangled Tale.txt\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702664023442</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702664023442</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"сюжет акта 1\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702747008794</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702747008794</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"animations main character\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702759253894</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702759253894</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"animations main character\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702759279832</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702759279832</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"exit-enter_a1\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702812381417</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702812381417</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"letters and doors fix\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702825954315</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702825954315</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"first location done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702839963644</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702839963644</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"second location drawn\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702850812808</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702850812808</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"second location drawn\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702850825452</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702850825452</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"third location design done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702920190819</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702920190819</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"third location design done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702920196004</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702920196004</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"third location design done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703013610372</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703013610372</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"third location design done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703013631006</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703013631006</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"bugs fix\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703013686583</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703013686583</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"boss location processed\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703104830514</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703104830514</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"boss location processed\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703105401348</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703105401348</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"5 location\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703339118774</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703339118775</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"5 location\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703347045969</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703347045969</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"5 location sign\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703520545467</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703520545467</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"processing\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703690488357</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703690488357</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"a2_m2 done?\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704489862370</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704489862370</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"maze done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704663334955</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704663334955</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"maze done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704663345533</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704663345533</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"some pictures\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704735930288</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704735930288</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"some pictures\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704735954576</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704735954576</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"math game 2 act's processing\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704745006855</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704745006855</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"math game 2 act's processing\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704897684849</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704897684849</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"boss 2'nd act processing\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704912439309</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704912439309</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"boss 2'nd act processing\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704912447942</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704912447942</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"test\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705171777463</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705171777464</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"a3_m1\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705178740209</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705178740209</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"a3_m1 almost done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705237734855</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705237734855</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"clearing data\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705250651072</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705250651072</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00035\" summary=\"clearing data\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705250902807</created>\r\n      <option name=\"number\" value=\"00035\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705250902807</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00036\" summary=\"buttons reborn\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705263409525</created>\r\n      <option name=\"number\" value=\"00036\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705263409525</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"37\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"описание Entangled Tale.txt\" />\r\n    <MESSAGE value=\"сюжет акта 1\" />\r\n    <MESSAGE value=\"animations main character\" />\r\n    <MESSAGE value=\"exit-enter_a1\" />\r\n    <MESSAGE value=\"letters and doors fix\" />\r\n    <MESSAGE value=\"Merge remote-tracking branch 'origin/main'\" />\r\n    <MESSAGE value=\"first location done\" />\r\n    <MESSAGE value=\"second location drawn\" />\r\n    <MESSAGE value=\"third location design done\" />\r\n    <MESSAGE value=\"bugs fix\" />\r\n    <MESSAGE value=\"boss location processed\" />\r\n    <MESSAGE value=\"5 location\" />\r\n    <MESSAGE value=\"5 location sign\" />\r\n    <MESSAGE value=\"Add files via upload\" />\r\n    <MESSAGE value=\"processing\" />\r\n    <MESSAGE value=\"a2_m2 done?\" />\r\n    <MESSAGE value=\"maze done\" />\r\n    <MESSAGE value=\"some pictures\" />\r\n    <MESSAGE value=\"math game 2 act's processing\" />\r\n    <MESSAGE value=\"boss 2'nd act processing\" />\r\n    <MESSAGE value=\"test\" />\r\n    <MESSAGE value=\"a3_m1\" />\r\n    <MESSAGE value=\"a3_m1 almost done\" />\r\n    <MESSAGE value=\"clearing data\" />\r\n    <MESSAGE value=\"buttons reborn\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"buttons reborn\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision bf103e7da4e87f70e8d17bc78f53fcd211f7b7ca)
+++ b/.idea/workspace.xml	(date 1705588459708)
@@ -5,8 +5,16 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="8b6f0fdc-2b1f-450a-a0fe-df5878d69a75" name="Changes" comment="buttons reborn">
-      <change beforePath="$PROJECT_DIR$/data/music/a2_m1.mp3" beforeDir="false" afterPath="$PROJECT_DIR$/data/music/act2_main.mp3" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/data/music/mus_undynetruetheme.ogg" beforeDir="false" afterPath="$PROJECT_DIR$/data/music/act2_boss.ogg" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/Entangled Tale.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/Entangled Tale.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_01_2024_20_56__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_01_2024_20_56__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_10_01_2024_21_46__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_10_01_2024_21_46__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_13_01_2024_21_09__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_13_01_2024_21_09__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_13_01_2024_21_12__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_13_01_2024_21_12__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_13_01_2024_22_32__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_13_01_2024_22_32__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_12_2023_23_31__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_12_2023_23_31__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/data/bd.sqlite" beforeDir="false" afterPath="$PROJECT_DIR$/data/bd.sqlite" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -42,6 +50,9 @@
         <option name="url" value="https://github.com/mario12508/Entangled-Tale-game" />
       </UrlAndAccount>
     </option>
+  </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
   </component>
   <component name="ProjectColorInfo">{
   &quot;associatedIndex&quot;: 8
@@ -52,21 +63,21 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "ASKED_ADD_EXTERNAL_FILES": "true",
-    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "Python.main (2).executor": "Run",
-    "Python.main (4).executor": "Run",
-    "Python.main.executor": "Run",
-    "Python.test.executor": "Debug",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "git-widget-placeholder": "main",
-    "last_opened_file_path": "C:/Users/Mar1o/PycharmProjects/Entangled Tale",
-    "settings.editor.selected.configurable": "com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
+    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;Python.main (2).executor&quot;: &quot;Run&quot;,
+    &quot;Python.main (4).executor&quot;: &quot;Run&quot;,
+    &quot;Python.main.executor&quot;: &quot;Run&quot;,
+    &quot;Python.test.executor&quot;: &quot;Debug&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/it-cube/PycharmProjects/pythonProject_Mar1o&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\Users\Mar1o\PycharmProjects\Entangled Tale" />
@@ -80,14 +91,12 @@
   <component name="RunManager">
     <configuration name="main" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
       <module name="Entangled Tale" />
-      <option name="ENV_FILES" value="" />
       <option name="INTERPRETER_OPTIONS" value="" />
       <option name="PARENT_ENVS" value="true" />
       <envs>
         <env name="PYTHONUNBUFFERED" value="1" />
       </envs>
       <option name="SDK_HOME" value="" />
-      <option name="SDK_NAME" value="Python 3.11 (Entangled Tale)" />
       <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
       <option name="IS_MODULE_SDK" value="false" />
       <option name="ADD_CONTENT_ROOTS" value="true" />
Index: .idea/Entangled Tale.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <excludeFolder url=\"file://$MODULE_DIR$/.venv\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n  <component name=\"PyDocumentationSettings\">\r\n    <option name=\"format\" value=\"PLAIN\" />\r\n    <option name=\"myDocStringFormat\" value=\"Plain\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/Entangled Tale.iml b/.idea/Entangled Tale.iml
--- a/.idea/Entangled Tale.iml	(revision bf103e7da4e87f70e8d17bc78f53fcd211f7b7ca)
+++ b/.idea/Entangled Tale.iml	(date 1705327473449)
@@ -3,8 +3,9 @@
   <component name="NewModuleRootManager">
     <content url="file://$MODULE_DIR$">
       <excludeFolder url="file://$MODULE_DIR$/.venv" />
+      <excludeFolder url="file://$MODULE_DIR$/venv" />
     </content>
-    <orderEntry type="inheritedJdk" />
+    <orderEntry type="jdk" jdkName="Python 3.11 (Entangled-Tale-game)" jdkType="Python SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
   <component name="PyDocumentationSettings">
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Black\">\r\n    <option name=\"sdkName\" value=\"Python 3.11 (Entangled Tale)\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.11 (Entangled Tale)\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision bf103e7da4e87f70e8d17bc78f53fcd211f7b7ca)
+++ b/.idea/misc.xml	(date 1705327473618)
@@ -3,5 +3,5 @@
   <component name="Black">
     <option name="sdkName" value="Python 3.11 (Entangled Tale)" />
   </component>
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.11 (Entangled Tale)" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.11 (Entangled-Tale-game)" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
